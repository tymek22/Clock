ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 124 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 4


  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 140 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 149 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 150 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 5


  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 430 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 434 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 437 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 448 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 451 0
 112 0014 1460     		str	r4, [r2]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 453 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 454:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 454 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 11


 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 474 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 476 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 478 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 12


 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 482 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 484 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 498 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 13


 187              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 511 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 515 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 525 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 528 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 531 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 14


 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 566 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 15


 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 569 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 571 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 573 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 572 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 571 0
 257 001e 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 576 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 577 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkEcoStop,"ax",%progbits
 273              		.align	2
 274              		.global	CySysClkEcoStop
 275              		.code	16
 276              		.thumb_func
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 16


 277              		.type	CySysClkEcoStop, %function
 278              	CySysClkEcoStop:
 279              	.LFB10:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 17


 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 18


 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 1170 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 285              		.loc 1 1173 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0121     		movs	r1, #1
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 291              		.loc 1 1176 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1168     		ldr	r1, [r2]
 294 000e 044B     		ldr	r3, .L22+8
 295 0010 0B40     		ands	r3, r1
 296 0012 1360     		str	r3, [r2]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 1182 0
 298              		@ sp needed
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 27


 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 60F02E40 		.word	1076818016
 304 001c 10002E40 		.word	1076756496
 305 0020 FF7FFFFF 		.word	-32769
 306              		.cfi_endproc
 307              	.LFE10:
 308              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 309              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 310              		.align	2
 311              		.global	CySysClkEcoReadStatus
 312              		.code	16
 313              		.thumb_func
 314              		.type	CySysClkEcoReadStatus, %function
 315              	CySysClkEcoReadStatus:
 316              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 317              		.loc 1 1204 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 322              		.loc 1 1208 0
 323 0000 024B     		ldr	r3, .L25
 324 0002 1B68     		ldr	r3, [r3]
 325 0004 0120     		movs	r0, #1
 326 0006 1840     		ands	r0, r3
 327              	.LVL16:
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 28


1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
 328              		.loc 1 1221 0
 329              		@ sp needed
 330 0008 7047     		bx	lr
 331              	.L26:
 332 000a C046     		.align	2
 333              	.L25:
 334 000c 0C002E40 		.word	1076756492
 335              		.cfi_endproc
 336              	.LFE11:
 337              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 338              		.section	.text.CySysLvdDisable,"ax",%progbits
 339              		.align	2
 340              		.global	CySysLvdDisable
 341              		.code	16
 342              		.thumb_func
 343              		.type	CySysLvdDisable, %function
 344              	CySysLvdDisable:
 345              	.LFB14:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 29


1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 30


1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 31


1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 32


1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 33


1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 34


1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 35


1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 36


1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 37


1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 38


1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 39


1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 40


1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 41


1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 42


1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 43


2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 44


2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 346              		.loc 1 2149 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 351              		.loc 1 2150 0
 352 0000 054A     		ldr	r2, .L28
 353 0002 1368     		ldr	r3, [r2]
 354 0004 0221     		movs	r1, #2
 355 0006 8B43     		bics	r3, r1
 356 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 45


2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 357              		.loc 1 2151 0
 358 000a 044A     		ldr	r2, .L28+4
 359 000c 1368     		ldr	r3, [r2]
 360 000e 0139     		subs	r1, r1, #1
 361 0010 8B43     		bics	r3, r1
 362 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 363              		.loc 1 2152 0
 364              		@ sp needed
 365 0014 7047     		bx	lr
 366              	.L29:
 367 0016 C046     		.align	2
 368              	.L28:
 369 0018 08000B40 		.word	1074462728
 370 001c 18000B40 		.word	1074462744
 371              		.cfi_endproc
 372              	.LFE14:
 373              		.size	CySysLvdDisable, .-CySysLvdDisable
 374              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 375              		.align	2
 376              		.global	CySysLvdGetInterruptSource
 377              		.code	16
 378              		.thumb_func
 379              		.type	CySysLvdGetInterruptSource, %function
 380              	CySysLvdGetInterruptSource:
 381              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 382              		.loc 1 2167 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 387              		.loc 1 2168 0
 388 0000 024B     		ldr	r3, .L31
 389 0002 1B68     		ldr	r3, [r3]
 390 0004 0220     		movs	r0, #2
 391 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 392              		.loc 1 2169 0
 393              		@ sp needed
 394 0008 7047     		bx	lr
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 46


 395              	.L32:
 396 000a C046     		.align	2
 397              	.L31:
 398 000c 04000B40 		.word	1074462724
 399              		.cfi_endproc
 400              	.LFE15:
 401              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 402              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 403              		.align	2
 404              		.global	CySysLvdClearInterrupt
 405              		.code	16
 406              		.thumb_func
 407              		.type	CySysLvdClearInterrupt, %function
 408              	CySysLvdClearInterrupt:
 409              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 410              		.loc 1 2183 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 415              		.loc 1 2184 0
 416 0000 0222     		movs	r2, #2
 417 0002 014B     		ldr	r3, .L34
 418 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 419              		.loc 1 2185 0
 420              		@ sp needed
 421 0006 7047     		bx	lr
 422              	.L35:
 423              		.align	2
 424              	.L34:
 425 0008 04000B40 		.word	1074462724
 426              		.cfi_endproc
 427              	.LFE16:
 428              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 429              		.section	.text.CySysGetResetReason,"ax",%progbits
 430              		.align	2
 431              		.global	CySysGetResetReason
 432              		.code	16
 433              		.thumb_func
 434              		.type	CySysGetResetReason, %function
 435              	CySysGetResetReason:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 47


 436              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 437              		.loc 1 2209 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL17:
 443 0000 0200     		movs	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 444              		.loc 1 2212 0
 445 0002 1920     		movs	r0, #25
 446              	.LVL18:
 447 0004 0240     		ands	r2, r0
 448              	.LVL19:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 449              		.loc 1 2213 0
 450 0006 0249     		ldr	r1, .L37
 451 0008 0B68     		ldr	r3, [r1]
 452 000a 1840     		ands	r0, r3
 453              	.LVL20:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 454              		.loc 1 2215 0
 455 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 456              		.loc 1 2218 0
 457              		@ sp needed
 458 000e 7047     		bx	lr
 459              	.L38:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 48


 460              		.align	2
 461              	.L37:
 462 0010 00030B40 		.word	1074463488
 463              		.cfi_endproc
 464              	.LFE17:
 465              		.size	CySysGetResetReason, .-CySysGetResetReason
 466              		.section	.text.CyDisableInts,"ax",%progbits
 467              		.align	2
 468              		.global	CyDisableInts
 469              		.code	16
 470              		.thumb_func
 471              		.type	CyDisableInts, %function
 472              	CyDisableInts:
 473              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 474              		.loc 1 2232 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 479              		.loc 1 2236 0
 480 0000 024B     		ldr	r3, .L40
 481 0002 1868     		ldr	r0, [r3]
 482              	.LVL21:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 483              		.loc 1 2239 0
 484 0004 0122     		movs	r2, #1
 485 0006 5242     		rsbs	r2, r2, #0
 486 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 487              		.loc 1 2242 0
 488              		@ sp needed
 489 000a 7047     		bx	lr
 490              	.L41:
 491              		.align	2
 492              	.L40:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 49


 493 000c 80E100E0 		.word	-536813184
 494              		.cfi_endproc
 495              	.LFE18:
 496              		.size	CyDisableInts, .-CyDisableInts
 497              		.section	.text.CyEnableInts,"ax",%progbits
 498              		.align	2
 499              		.global	CyEnableInts
 500              		.code	16
 501              		.thumb_func
 502              		.type	CyEnableInts, %function
 503              	CyEnableInts:
 504              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 2255 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL22:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 511              		.loc 1 2256 0
 512 0000 014B     		ldr	r3, .L43
 513 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2257 0
 515              		@ sp needed
 516 0004 7047     		bx	lr
 517              	.L44:
 518 0006 C046     		.align	2
 519              	.L43:
 520 0008 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE19:
 523              		.size	CyEnableInts, .-CyEnableInts
 524              		.section	.text.CyIntEnable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntEnable
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntEnable, %function
 530              	CyIntEnable:
 531              	.LFB26:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 50


2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 51


2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 52


2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 53


2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2438 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL23:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2439 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL24:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 2440 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 00E100E0 		.word	-536813312
 553              		.cfi_endproc
 554              	.LFE26:
 555              		.size	CyIntEnable, .-CyIntEnable
 556              		.section	.text.CyIntGetState,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntGetState
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntGetState, %function
 562              	CyIntGetState:
 563              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 54


 564              		.loc 1 2456 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL25:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 570              		.loc 1 2458 0
 571 0000 044B     		ldr	r3, .L49
 572 0002 1B68     		ldr	r3, [r3]
 573 0004 1F22     		movs	r2, #31
 574 0006 1040     		ands	r0, r2
 575              	.LVL26:
 576 0008 C340     		lsrs	r3, r3, r0
 577 000a 1800     		movs	r0, r3
 578 000c 0123     		movs	r3, #1
 579 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 580              		.loc 1 2459 0
 581              		@ sp needed
 582 0010 7047     		bx	lr
 583              	.L50:
 584 0012 C046     		.align	2
 585              	.L49:
 586 0014 00E100E0 		.word	-536813312
 587              		.cfi_endproc
 588              	.LFE27:
 589              		.size	CyIntGetState, .-CyIntGetState
 590              		.section	.text.CyIntDisable,"ax",%progbits
 591              		.align	2
 592              		.global	CyIntDisable
 593              		.code	16
 594              		.thumb_func
 595              		.type	CyIntDisable, %function
 596              	CyIntDisable:
 597              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 598              		.loc 1 2472 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603              	.LVL27:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 55


 604              		.loc 1 2473 0
 605 0000 1F23     		movs	r3, #31
 606 0002 1840     		ands	r0, r3
 607              	.LVL28:
 608 0004 1E3B     		subs	r3, r3, #30
 609 0006 8340     		lsls	r3, r3, r0
 610 0008 014A     		ldr	r2, .L52
 611 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** }
 612              		.loc 1 2474 0
 613              		@ sp needed
 614 000c 7047     		bx	lr
 615              	.L53:
 616 000e C046     		.align	2
 617              	.L52:
 618 0010 80E100E0 		.word	-536813184
 619              		.cfi_endproc
 620              	.LFE28:
 621              		.size	CyIntDisable, .-CyIntDisable
 622              		.section	.text.CyIntSetPending,"ax",%progbits
 623              		.align	2
 624              		.global	CyIntSetPending
 625              		.code	16
 626              		.thumb_func
 627              		.type	CyIntSetPending, %function
 628              	CyIntSetPending:
 629              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 630              		.loc 1 2486 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL29:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 636              		.loc 1 2487 0
 637 0000 1F23     		movs	r3, #31
 638 0002 1840     		ands	r0, r3
 639              	.LVL30:
 640 0004 1E3B     		subs	r3, r3, #30
 641 0006 8340     		lsls	r3, r3, r0
 642 0008 014A     		ldr	r2, .L55
 643 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** }
 644              		.loc 1 2488 0
 645              		@ sp needed
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 56


 646 000c 7047     		bx	lr
 647              	.L56:
 648 000e C046     		.align	2
 649              	.L55:
 650 0010 00E200E0 		.word	-536813056
 651              		.cfi_endproc
 652              	.LFE29:
 653              		.size	CyIntSetPending, .-CyIntSetPending
 654              		.section	.text.CyIntClearPending,"ax",%progbits
 655              		.align	2
 656              		.global	CyIntClearPending
 657              		.code	16
 658              		.thumb_func
 659              		.type	CyIntClearPending, %function
 660              	CyIntClearPending:
 661              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 662              		.loc 1 2501 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL31:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 668              		.loc 1 2502 0
 669 0000 1F23     		movs	r3, #31
 670 0002 1840     		ands	r0, r3
 671              	.LVL32:
 672 0004 1E3B     		subs	r3, r3, #30
 673 0006 8340     		lsls	r3, r3, r0
 674 0008 014A     		ldr	r2, .L58
 675 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** }
 676              		.loc 1 2503 0
 677              		@ sp needed
 678 000c 7047     		bx	lr
 679              	.L59:
 680 000e C046     		.align	2
 681              	.L58:
 682 0010 80E200E0 		.word	-536812928
 683              		.cfi_endproc
 684              	.LFE30:
 685              		.size	CyIntClearPending, .-CyIntClearPending
 686              		.section	.text.CyHalt,"ax",%progbits
 687              		.align	2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 57


 688              		.global	CyHalt
 689              		.code	16
 690              		.thumb_func
 691              		.type	CyHalt, %function
 692              	CyHalt:
 693              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 694              		.loc 1 2516 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699              	.LVL33:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 700              		.loc 1 2525 0
 701              		.syntax divided
 702              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 703 0000 01BE     		    bkpt    1
 704              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 705              		.loc 1 2529 0
 706              		.thumb
 707              		.syntax unified
 708              		@ sp needed
 709 0002 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE31:
 712              		.size	CyHalt, .-CyHalt
 713              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 714              		.align	2
 715              		.global	CySysClkWriteEcoDiv
 716              		.code	16
 717              		.thumb_func
 718              		.type	CySysClkWriteEcoDiv, %function
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 58


 719              	CySysClkWriteEcoDiv:
 720              	.LFB12:
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 721              		.loc 1 1251 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL34:
 726 0000 10B5     		push	{r4, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 4, -8
 729              		.cfi_offset 14, -4
 730 0002 0400     		movs	r4, r0
1254:Generated_Source\PSoC4/CyLib.c ****             {
 731              		.loc 1 1254 0
 732 0004 0A4B     		ldr	r3, .L64
 733 0006 1B68     		ldr	r3, [r3]
 734 0008 0722     		movs	r2, #7
 735 000a 1340     		ands	r3, r2
 736 000c 022B     		cmp	r3, #2
 737 000e 0BD0     		beq	.L62
1256:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 1256 0
 739 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL35:
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 741              		.loc 1 1258 0
 742 0014 0321     		movs	r1, #3
 743 0016 0C40     		ands	r4, r1
 744              	.LVL36:
1259:Generated_Source\PSoC4/CyLib.c **** 
 745              		.loc 1 1259 0
 746 0018 064A     		ldr	r2, .L64+4
 747 001a 1368     		ldr	r3, [r2]
 748 001c 8B43     		bics	r3, r1
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 749              		.loc 1 1258 0
 750 001e 2343     		orrs	r3, r4
 751 0020 1360     		str	r3, [r2]
1261:Generated_Source\PSoC4/CyLib.c ****             }
 752              		.loc 1 1261 0
 753 0022 FFF7FEFF 		bl	CyExitCriticalSection
 754              	.LVL37:
 755 0026 02E0     		b	.L61
 756              	.LVL38:
 757              	.L62:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 758              		.loc 1 1266 0 discriminator 1
 759 0028 0020     		movs	r0, #0
 760              	.LVL39:
 761 002a FFF7FEFF 		bl	CyHalt
 762              	.LVL40:
 763              	.L61:
1268:Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 1268 0
 765              		@ sp needed
 766 002e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 59


 767              	.L65:
 768              		.align	2
 769              	.L64:
 770 0030 00010B40 		.word	1074462976
 771 0034 64F02E40 		.word	1076818020
 772              		.cfi_endproc
 773              	.LFE12:
 774              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 775              		.section	.text.CyIntSetSysVector,"ax",%progbits
 776              		.align	2
 777              		.global	CyIntSetSysVector
 778              		.code	16
 779              		.thumb_func
 780              		.type	CyIntSetSysVector, %function
 781              	CyIntSetSysVector:
 782              	.LFB20:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 783              		.loc 1 2280 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL41:
 788 0000 70B5     		push	{r4, r5, r6, lr}
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 4, -16
 791              		.cfi_offset 5, -12
 792              		.cfi_offset 6, -8
 793              		.cfi_offset 14, -4
 794 0002 0400     		movs	r4, r0
 795 0004 0D00     		movs	r5, r1
 796              	.LVL42:
2284:Generated_Source\PSoC4/CyLib.c **** 
 797              		.loc 1 2284 0
 798 0006 0F28     		cmp	r0, #15
 799 0008 02D9     		bls	.L67
2284:Generated_Source\PSoC4/CyLib.c **** 
 800              		.loc 1 2284 0 is_stmt 0 discriminator 1
 801 000a 0020     		movs	r0, #0
 802              	.LVL43:
 803 000c FFF7FEFF 		bl	CyHalt
 804              	.LVL44:
 805              	.L67:
2287:Generated_Source\PSoC4/CyLib.c **** 
 806              		.loc 1 2287 0 is_stmt 1
 807 0010 A400     		lsls	r4, r4, #2
 808 0012 8023     		movs	r3, #128
 809 0014 9B05     		lsls	r3, r3, #22
 810 0016 9C46     		mov	ip, r3
 811 0018 6444     		add	r4, r4, ip
 812 001a 2068     		ldr	r0, [r4]
 813              	.LVL45:
2290:Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2290 0
 815 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2293 0
 817              		@ sp needed
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 60


 818              	.LVL46:
 819 001e 70BD     		pop	{r4, r5, r6, pc}
 820              		.cfi_endproc
 821              	.LFE20:
 822              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 823              		.section	.text.CyIntGetSysVector,"ax",%progbits
 824              		.align	2
 825              		.global	CyIntGetSysVector
 826              		.code	16
 827              		.thumb_func
 828              		.type	CyIntGetSysVector, %function
 829              	CyIntGetSysVector:
 830              	.LFB21:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 831              		.loc 1 2314 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              	.LVL47:
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 0400     		movs	r4, r0
 841              	.LVL48:
2317:Generated_Source\PSoC4/CyLib.c **** 
 842              		.loc 1 2317 0
 843 0004 0F28     		cmp	r0, #15
 844 0006 02D9     		bls	.L69
2317:Generated_Source\PSoC4/CyLib.c **** 
 845              		.loc 1 2317 0 is_stmt 0 discriminator 1
 846 0008 0020     		movs	r0, #0
 847              	.LVL49:
 848 000a FFF7FEFF 		bl	CyHalt
 849              	.LVL50:
 850              	.L69:
2319:Generated_Source\PSoC4/CyLib.c **** }
 851              		.loc 1 2319 0 is_stmt 1
 852 000e A400     		lsls	r4, r4, #2
 853 0010 8023     		movs	r3, #128
 854 0012 9B05     		lsls	r3, r3, #22
 855 0014 9C46     		mov	ip, r3
 856 0016 6444     		add	r4, r4, ip
 857 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2320 0
 859              		@ sp needed
 860 001a 10BD     		pop	{r4, pc}
 861              		.cfi_endproc
 862              	.LFE21:
 863              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 864              		.section	.text.CyIntSetVector,"ax",%progbits
 865              		.align	2
 866              		.global	CyIntSetVector
 867              		.code	16
 868              		.thumb_func
 869              		.type	CyIntSetVector, %function
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 61


 870              	CyIntSetVector:
 871              	.LFB22:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 872              		.loc 1 2336 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL51:
 877 0000 70B5     		push	{r4, r5, r6, lr}
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 0400     		movs	r4, r0
 884 0004 0D00     		movs	r5, r1
 885              	.LVL52:
2340:Generated_Source\PSoC4/CyLib.c **** 
 886              		.loc 1 2340 0
 887 0006 1F28     		cmp	r0, #31
 888 0008 02D9     		bls	.L71
2340:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2340 0 is_stmt 0 discriminator 1
 890 000a 0020     		movs	r0, #0
 891              	.LVL53:
 892 000c FFF7FEFF 		bl	CyHalt
 893              	.LVL54:
 894              	.L71:
2343:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2343 0 is_stmt 1
 896 0010 1034     		adds	r4, r4, #16
 897 0012 A400     		lsls	r4, r4, #2
 898 0014 8023     		movs	r3, #128
 899 0016 9B05     		lsls	r3, r3, #22
 900 0018 9C46     		mov	ip, r3
 901 001a 6444     		add	r4, r4, ip
 902 001c 2068     		ldr	r0, [r4]
 903              	.LVL55:
2346:Generated_Source\PSoC4/CyLib.c **** 
 904              		.loc 1 2346 0
 905 001e 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 906              		.loc 1 2349 0
 907              		@ sp needed
 908              	.LVL56:
 909 0020 70BD     		pop	{r4, r5, r6, pc}
 910              		.cfi_endproc
 911              	.LFE22:
 912              		.size	CyIntSetVector, .-CyIntSetVector
 913 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 914              		.align	2
 915              		.global	CyIntGetVector
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntGetVector, %function
 919              	CyIntGetVector:
 920              	.LFB23:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 62


2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 921              		.loc 1 2364 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL57:
 926 0000 10B5     		push	{r4, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 4, -8
 929              		.cfi_offset 14, -4
 930 0002 0400     		movs	r4, r0
 931              	.LVL58:
2367:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2367 0
 933 0004 1F28     		cmp	r0, #31
 934 0006 02D9     		bls	.L73
2367:Generated_Source\PSoC4/CyLib.c **** 
 935              		.loc 1 2367 0 is_stmt 0 discriminator 1
 936 0008 0020     		movs	r0, #0
 937              	.LVL59:
 938 000a FFF7FEFF 		bl	CyHalt
 939              	.LVL60:
 940              	.L73:
2369:Generated_Source\PSoC4/CyLib.c **** }
 941              		.loc 1 2369 0 is_stmt 1
 942 000e 1034     		adds	r4, r4, #16
 943 0010 A400     		lsls	r4, r4, #2
 944 0012 8023     		movs	r3, #128
 945 0014 9B05     		lsls	r3, r3, #22
 946 0016 9C46     		mov	ip, r3
 947 0018 6444     		add	r4, r4, ip
 948 001a 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2370 0
 950              		@ sp needed
 951 001c 10BD     		pop	{r4, pc}
 952              		.cfi_endproc
 953              	.LFE23:
 954              		.size	CyIntGetVector, .-CyIntGetVector
 955 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 956              		.align	2
 957              		.global	CyIntSetPriority
 958              		.code	16
 959              		.thumb_func
 960              		.type	CyIntSetPriority, %function
 961              	CyIntSetPriority:
 962              	.LFB24:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 963              		.loc 1 2383 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL61:
 968 0000 70B5     		push	{r4, r5, r6, lr}
 969              		.cfi_def_cfa_offset 16
 970              		.cfi_offset 4, -16
 971              		.cfi_offset 5, -12
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 63


 972              		.cfi_offset 6, -8
 973              		.cfi_offset 14, -4
 974 0002 0400     		movs	r4, r0
 975 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 976              		.loc 1 2388 0
 977 0006 0329     		cmp	r1, #3
 978 0008 02D9     		bls	.L75
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 979              		.loc 1 2388 0 is_stmt 0 discriminator 1
 980 000a 0020     		movs	r0, #0
 981              	.LVL62:
 982 000c FFF7FEFF 		bl	CyHalt
 983              	.LVL63:
 984              	.L75:
2389:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2389 0 is_stmt 1
 986 0010 1F2C     		cmp	r4, #31
 987 0012 02D9     		bls	.L76
2389:Generated_Source\PSoC4/CyLib.c **** 
 988              		.loc 1 2389 0 is_stmt 0 discriminator 1
 989 0014 0020     		movs	r0, #0
 990 0016 FFF7FEFF 		bl	CyHalt
 991              	.LVL64:
 992              	.L76:
2391:Generated_Source\PSoC4/CyLib.c **** 
 993              		.loc 1 2391 0 is_stmt 1
 994 001a 0325     		movs	r5, #3
 995 001c 2540     		ands	r5, r4
 996 001e ED00     		lsls	r5, r5, #3
 997 0020 0635     		adds	r5, r5, #6
 998              	.LVL65:
2393:Generated_Source\PSoC4/CyLib.c **** 
 999              		.loc 1 2393 0
 1000 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1001              	.LVL66:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1002              		.loc 1 2395 0
 1003 0026 A408     		lsrs	r4, r4, #2
 1004 0028 A400     		lsls	r4, r4, #2
 1005 002a 074B     		ldr	r3, .L77
 1006 002c 9C46     		mov	ip, r3
 1007 002e 6444     		add	r4, r4, ip
 1008 0030 2168     		ldr	r1, [r4]
 1009              	.LVL67:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1010              		.loc 1 2396 0
 1011 0032 0323     		movs	r3, #3
 1012 0034 AB40     		lsls	r3, r3, r5
 1013 0036 9943     		bics	r1, r3
 1014              	.LVL68:
 1015 0038 0B00     		movs	r3, r1
 1016              	.LVL69:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1017              		.loc 1 2397 0
 1018 003a 3100     		movs	r1, r6
 1019              	.LVL70:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 64


 1020 003c A940     		lsls	r1, r1, r5
 1021 003e 1943     		orrs	r1, r3
 1022              	.LVL71:
2398:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2398 0
 1024 0040 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 1025              		.loc 1 2400 0
 1026 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1027              	.LVL72:
2401:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2401 0
 1029              		@ sp needed
 1030              	.LVL73:
 1031 0046 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L78:
 1033              		.align	2
 1034              	.L77:
 1035 0048 00E400E0 		.word	-536812544
 1036              		.cfi_endproc
 1037              	.LFE24:
 1038              		.size	CyIntSetPriority, .-CyIntSetPriority
 1039              		.section	.text.CyIntGetPriority,"ax",%progbits
 1040              		.align	2
 1041              		.global	CyIntGetPriority
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	CyIntGetPriority, %function
 1045              	CyIntGetPriority:
 1046              	.LFB25:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1047              		.loc 1 2417 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              	.LVL74:
 1052 0000 10B5     		push	{r4, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
 1056 0002 0400     		movs	r4, r0
2420:Generated_Source\PSoC4/CyLib.c **** 
 1057              		.loc 1 2420 0
 1058 0004 1F28     		cmp	r0, #31
 1059 0006 02D9     		bls	.L80
2420:Generated_Source\PSoC4/CyLib.c **** 
 1060              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1061 0008 0020     		movs	r0, #0
 1062              	.LVL75:
 1063 000a FFF7FEFF 		bl	CyHalt
 1064              	.LVL76:
 1065              	.L80:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1066              		.loc 1 2422 0 is_stmt 1
 1067 000e A308     		lsrs	r3, r4, #2
 1068 0010 9B00     		lsls	r3, r3, #2
 1069 0012 054A     		ldr	r2, .L81
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 65


 1070 0014 9446     		mov	ip, r2
 1071 0016 6344     		add	r3, r3, ip
 1072 0018 1868     		ldr	r0, [r3]
 1073 001a 0323     		movs	r3, #3
 1074 001c 1C40     		ands	r4, r3
 1075 001e E400     		lsls	r4, r4, #3
 1076 0020 0634     		adds	r4, r4, #6
 1077 0022 E040     		lsrs	r0, r0, r4
 1078              	.LVL77:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1079              		.loc 1 2424 0
 1080 0024 1840     		ands	r0, r3
 1081              	.LVL78:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1082              		.loc 1 2425 0
 1083              		@ sp needed
 1084 0026 10BD     		pop	{r4, pc}
 1085              	.L82:
 1086              		.align	2
 1087              	.L81:
 1088 0028 00E400E0 		.word	-536812544
 1089              		.cfi_endproc
 1090              	.LFE25:
 1091              		.size	CyIntGetPriority, .-CyIntGetPriority
 1092              		.section	.text.CySoftwareReset,"ax",%progbits
 1093              		.align	2
 1094              		.global	CySoftwareReset
 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CySoftwareReset, %function
 1098              	CySoftwareReset:
 1099              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1100              		.loc 1 2540 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1105              		.loc 1 2545 0
 1106 0000 034A     		ldr	r2, .L84
 1107 0002 1368     		ldr	r3, [r2]
 1108 0004 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 66


 1109 0006 1B0C     		lsrs	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1110              		.loc 1 2546 0
 1111 0008 0249     		ldr	r1, .L84+4
 1112 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1113              		.loc 1 2545 0
 1114 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 2547 0
 1116              		@ sp needed
 1117 000e 7047     		bx	lr
 1118              	.L85:
 1119              		.align	2
 1120              	.L84:
 1121 0010 0CED00E0 		.word	-536810228
 1122 0014 0400FA05 		.word	100270084
 1123              		.cfi_endproc
 1124              	.LFE32:
 1125              		.size	CySoftwareReset, .-CySoftwareReset
 1126              		.section	.text.CyDelay,"ax",%progbits
 1127              		.align	2
 1128              		.global	CyDelay
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CyDelay, %function
 1132              	CyDelay:
 1133              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1134              		.loc 1 2560 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              	.LVL79:
 1139 0000 10B5     		push	{r4, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 4, -8
 1142              		.cfi_offset 14, -4
 1143 0002 0400     		movs	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1144              		.loc 1 2561 0
 1145 0004 06E0     		b	.L87
 1146              	.LVL80:
 1147              	.L88:
2562:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 67


2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1148              		.loc 1 2566 0
 1149 0006 084B     		ldr	r3, .L89
 1150 0008 5868     		ldr	r0, [r3, #4]
 1151 000a FFF7FEFF 		bl	CyDelayCycles
 1152              	.LVL81:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1153              		.loc 1 2567 0
 1154 000e 074B     		ldr	r3, .L89+4
 1155 0010 9C46     		mov	ip, r3
 1156 0012 6444     		add	r4, r4, ip
 1157              	.LVL82:
 1158              	.L87:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1159              		.loc 1 2561 0
 1160 0014 8023     		movs	r3, #128
 1161 0016 1B02     		lsls	r3, r3, #8
 1162 0018 9C42     		cmp	r4, r3
 1163 001a F4D8     		bhi	.L88
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1164              		.loc 1 2570 0
 1165 001c 024B     		ldr	r3, .L89
 1166 001e 9868     		ldr	r0, [r3, #8]
 1167 0020 6043     		muls	r0, r4
 1168 0022 FFF7FEFF 		bl	CyDelayCycles
 1169              	.LVL83:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1170              		.loc 1 2571 0
 1171              		@ sp needed
 1172              	.LVL84:
 1173 0026 10BD     		pop	{r4, pc}
 1174              	.L90:
 1175              		.align	2
 1176              	.L89:
 1177 0028 00000000 		.word	.LANCHOR0
 1178 002c 0080FFFF 		.word	-32768
 1179              		.cfi_endproc
 1180              	.LFE33:
 1181              		.size	CyDelay, .-CyDelay
 1182              		.section	.text.CyDelayUs,"ax",%progbits
 1183              		.align	2
 1184              		.global	CyDelayUs
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	CyDelayUs, %function
 1188              	CyDelayUs:
 1189              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 68


2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1190              		.loc 1 2583 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              	.LVL85:
 1195 0000 10B5     		push	{r4, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 4, -8
 1198              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1199              		.loc 1 2584 0
 1200 0002 034B     		ldr	r3, .L92
 1201 0004 1B7B     		ldrb	r3, [r3, #12]
 1202 0006 5843     		muls	r0, r3
 1203              	.LVL86:
 1204 0008 FFF7FEFF 		bl	CyDelayCycles
 1205              	.LVL87:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1206              		.loc 1 2585 0
 1207              		@ sp needed
 1208 000c 10BD     		pop	{r4, pc}
 1209              	.L93:
 1210 000e C046     		.align	2
 1211              	.L92:
 1212 0010 00000000 		.word	.LANCHOR0
 1213              		.cfi_endproc
 1214              	.LFE34:
 1215              		.size	CyDelayUs, .-CyDelayUs
 1216              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1217              		.align	2
 1218              		.global	CySysClkWriteImoFreq
 1219              		.code	16
 1220              		.thumb_func
 1221              		.type	CySysClkWriteImoFreq, %function
 1222              	CySysClkWriteImoFreq:
 1223              	.LFB8:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1224              		.loc 1 624 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 8
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL88:
 1229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 5746     		mov	r7, r10
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 69


 1237 0004 4E46     		mov	r6, r9
 1238 0006 C0B4     		push	{r6, r7}
 1239              		.cfi_def_cfa_offset 28
 1240              		.cfi_offset 9, -28
 1241              		.cfi_offset 10, -24
 1242 0008 83B0     		sub	sp, sp, #12
 1243              		.cfi_def_cfa_offset 40
 1244 000a 0400     		movs	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1245              		.loc 1 647 0
 1246 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1247              	.LVL89:
 1248 0010 0190     		str	r0, [sp, #4]
 1249              	.LVL90:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1250              		.loc 1 697 0
 1251 0012 E71E     		subs	r7, r4, #3
 1252 0014 2D2F     		cmp	r7, #45
 1253 0016 74D8     		bhi	.L95
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 699 0
 1255 0018 3F4B     		ldr	r3, .L105
 1256 001a 1B78     		ldrb	r3, [r3]
 1257 001c DBB2     		uxtb	r3, r3
 1258 001e 9C42     		cmp	r4, r3
 1259 0020 08D8     		bhi	.L96
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1260              		.loc 1 701 0
 1261 0022 3E4B     		ldr	r3, .L105+4
 1262 0024 1B78     		ldrb	r3, [r3]
 1263 0026 DBB2     		uxtb	r3, r3
 1264 0028 9A46     		mov	r10, r3
 1265              	.LVL91:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1266              		.loc 1 702 0
 1267 002a 3D4B     		ldr	r3, .L105+8
 1268 002c 1B78     		ldrb	r3, [r3]
 1269 002e DBB2     		uxtb	r3, r3
 1270 0030 9946     		mov	r9, r3
 1271              	.LVL92:
 1272 0032 31E0     		b	.L97
 1273              	.LVL93:
 1274              	.L96:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1275              		.loc 1 704 0
 1276 0034 3B4B     		ldr	r3, .L105+12
 1277 0036 1B78     		ldrb	r3, [r3]
 1278 0038 DBB2     		uxtb	r3, r3
 1279 003a 9C42     		cmp	r4, r3
 1280 003c 08D8     		bhi	.L98
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1281              		.loc 1 706 0
 1282 003e 3A4B     		ldr	r3, .L105+16
 1283 0040 1B78     		ldrb	r3, [r3]
 1284 0042 DBB2     		uxtb	r3, r3
 1285 0044 9A46     		mov	r10, r3
 1286              	.LVL94:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 70


 707:Generated_Source\PSoC4/CyLib.c ****             }
 1287              		.loc 1 707 0
 1288 0046 394B     		ldr	r3, .L105+20
 1289 0048 1B78     		ldrb	r3, [r3]
 1290 004a DBB2     		uxtb	r3, r3
 1291 004c 9946     		mov	r9, r3
 1292              	.LVL95:
 1293 004e 23E0     		b	.L97
 1294              	.LVL96:
 1295              	.L98:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1296              		.loc 1 709 0
 1297 0050 374B     		ldr	r3, .L105+24
 1298 0052 1B78     		ldrb	r3, [r3]
 1299 0054 DBB2     		uxtb	r3, r3
 1300 0056 9C42     		cmp	r4, r3
 1301 0058 08D8     		bhi	.L99
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1302              		.loc 1 711 0
 1303 005a 364B     		ldr	r3, .L105+28
 1304 005c 1B78     		ldrb	r3, [r3]
 1305 005e DBB2     		uxtb	r3, r3
 1306 0060 9A46     		mov	r10, r3
 1307              	.LVL97:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1308              		.loc 1 712 0
 1309 0062 354B     		ldr	r3, .L105+32
 1310 0064 1B78     		ldrb	r3, [r3]
 1311 0066 DBB2     		uxtb	r3, r3
 1312 0068 9946     		mov	r9, r3
 1313              	.LVL98:
 1314 006a 15E0     		b	.L97
 1315              	.LVL99:
 1316              	.L99:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1317              		.loc 1 714 0
 1318 006c 334B     		ldr	r3, .L105+36
 1319 006e 1B78     		ldrb	r3, [r3]
 1320 0070 DBB2     		uxtb	r3, r3
 1321 0072 9C42     		cmp	r4, r3
 1322 0074 08D8     		bhi	.L100
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1323              		.loc 1 716 0
 1324 0076 324B     		ldr	r3, .L105+40
 1325 0078 1B78     		ldrb	r3, [r3]
 1326 007a DBB2     		uxtb	r3, r3
 1327 007c 9A46     		mov	r10, r3
 1328              	.LVL100:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1329              		.loc 1 717 0
 1330 007e 314B     		ldr	r3, .L105+44
 1331 0080 1B78     		ldrb	r3, [r3]
 1332 0082 DBB2     		uxtb	r3, r3
 1333 0084 9946     		mov	r9, r3
 1334              	.LVL101:
 1335 0086 07E0     		b	.L97
 1336              	.LVL102:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 71


 1337              	.L100:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1338              		.loc 1 721 0
 1339 0088 2F4B     		ldr	r3, .L105+48
 1340 008a 1B78     		ldrb	r3, [r3]
 1341 008c DBB2     		uxtb	r3, r3
 1342 008e 9A46     		mov	r10, r3
 1343              	.LVL103:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1344              		.loc 1 722 0
 1345 0090 2E4B     		ldr	r3, .L105+52
 1346 0092 1B78     		ldrb	r3, [r3]
 1347 0094 DBB2     		uxtb	r3, r3
 1348 0096 9946     		mov	r9, r3
 1349              	.LVL104:
 1350              	.L97:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 726 0
 1352 0098 2D4B     		ldr	r3, .L105+56
 1353 009a DE5D     		ldrb	r6, [r3, r7]
 1354              	.LVL105:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1355              		.loc 1 738 0
 1356 009c 2F2E     		cmp	r6, #47
 1357 009e 09D9     		bls	.L101
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1358              		.loc 1 738 0 is_stmt 0 discriminator 1
 1359 00a0 2A2C     		cmp	r4, #42
 1360 00a2 07D9     		bls	.L101
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1361              		.loc 1 741 0 is_stmt 1
 1362 00a4 1922     		movs	r2, #25
 1363 00a6 2B4B     		ldr	r3, .L105+60
 1364 00a8 1A60     		str	r2, [r3]
 1365              	.LVL106:
 744:Generated_Source\PSoC4/CyLib.c **** 
 1366              		.loc 1 744 0
 1367 00aa 0520     		movs	r0, #5
 1368 00ac FFF7FEFF 		bl	CyDelayCycles
 1369              	.LVL107:
 746:Generated_Source\PSoC4/CyLib.c ****             }
 1370              		.loc 1 746 0
 1371 00b0 1925     		movs	r5, #25
 1372 00b2 03E0     		b	.L102
 1373              	.LVL108:
 1374              	.L101:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1375              		.loc 1 750 0
 1376 00b4 274B     		ldr	r3, .L105+60
 1377 00b6 1D68     		ldr	r5, [r3]
 1378 00b8 3F23     		movs	r3, #63
 1379 00ba 1D40     		ands	r5, r3
 1380              	.LVL109:
 1381              	.L102:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1382              		.loc 1 762 0
 1383 00bc B542     		cmp	r5, r6
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 72


 1384 00be 06D9     		bls	.L103
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1385              		.loc 1 765 0
 1386 00c0 234B     		ldr	r3, .L105+56
 1387 00c2 DA5D     		ldrb	r2, [r3, r7]
 1388 00c4 234B     		ldr	r3, .L105+60
 1389 00c6 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1390              		.loc 1 766 0
 1391 00c8 0520     		movs	r0, #5
 1392 00ca FFF7FEFF 		bl	CyDelayCycles
 1393              	.LVL110:
 1394              	.L103:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1395              		.loc 1 785 0
 1396 00ce 1F4B     		ldr	r3, .L105+52
 1397 00d0 9C46     		mov	ip, r3
 1398 00d2 6444     		add	r4, r4, ip
 1399              	.LVL111:
 1400 00d4 2378     		ldrb	r3, [r4]
 1401 00d6 DBB2     		uxtb	r3, r3
 1402              	.LVL112:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1403              		.loc 1 789 0
 1404 00d8 1F4A     		ldr	r2, .L105+64
 1405 00da 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1406              		.loc 1 790 0
 1407 00dc 1F4B     		ldr	r3, .L105+68
 1408              	.LVL113:
 1409 00de 5246     		mov	r2, r10
 1410              	.LVL114:
 1411 00e0 1A60     		str	r2, [r3]
 1412              	.LVL115:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1413              		.loc 1 791 0
 1414 00e2 1F4B     		ldr	r3, .L105+72
 1415 00e4 4A46     		mov	r2, r9
 1416 00e6 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1417              		.loc 1 792 0
 1418 00e8 0520     		movs	r0, #5
 1419 00ea FFF7FEFF 		bl	CyDelayUs
 1420              	.LVL116:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1421              		.loc 1 794 0
 1422 00ee B542     		cmp	r5, r6
 1423 00f0 0AD2     		bcs	.L104
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1424              		.loc 1 797 0
 1425 00f2 174B     		ldr	r3, .L105+56
 1426 00f4 DA5D     		ldrb	r2, [r3, r7]
 1427 00f6 174B     		ldr	r3, .L105+60
 1428 00f8 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1429              		.loc 1 798 0
 1430 00fa 0520     		movs	r0, #5
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 73


 1431 00fc FFF7FEFF 		bl	CyDelayCycles
 1432              	.LVL117:
 1433 0100 02E0     		b	.L104
 1434              	.LVL118:
 1435              	.L95:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 1436              		.loc 1 804 0 discriminator 1
 1437 0102 0020     		movs	r0, #0
 1438 0104 FFF7FEFF 		bl	CyHalt
 1439              	.LVL119:
 1440              	.L104:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1441              		.loc 1 823 0
 1442 0108 0198     		ldr	r0, [sp, #4]
 1443 010a FFF7FEFF 		bl	CyExitCriticalSection
 1444              	.LVL120:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1445              		.loc 1 824 0
 1446 010e 03B0     		add	sp, sp, #12
 1447              		@ sp needed
 1448              	.LVL121:
 1449 0110 0CBC     		pop	{r2, r3}
 1450 0112 9146     		mov	r9, r2
 1451 0114 9A46     		mov	r10, r3
 1452 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1453              	.L106:
 1454              		.align	2
 1455              	.L105:
 1456 0118 40F3FF0F 		.word	268432192
 1457 011c 41F3FF0F 		.word	268432193
 1458 0120 42F3FF0F 		.word	268432194
 1459 0124 43F3FF0F 		.word	268432195
 1460 0128 44F3FF0F 		.word	268432196
 1461 012c 45F3FF0F 		.word	268432197
 1462 0130 46F3FF0F 		.word	268432198
 1463 0134 47F3FF0F 		.word	268432199
 1464 0138 48F3FF0F 		.word	268432200
 1465 013c 49F3FF0F 		.word	268432201
 1466 0140 4AF3FF0F 		.word	268432202
 1467 0144 4BF3FF0F 		.word	268432203
 1468 0148 4CF3FF0F 		.word	268432204
 1469 014c 4DF3FF0F 		.word	268432205
 1470 0150 00000000 		.word	.LANCHOR1
 1471 0154 2CFF0B40 		.word	1074528044
 1472 0158 28FF0B40 		.word	1074528040
 1473 015c 1CFF0B40 		.word	1074528028
 1474 0160 20FF0B40 		.word	1074528032
 1475              		.cfi_endproc
 1476              	.LFE8:
 1477              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1478              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1479              		.align	2
 1480              		.global	CySysClkEcoStart
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	CySysClkEcoStart, %function
 1484              	CySysClkEcoStart:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 74


 1485              	.LFB9:
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1486              		.loc 1 1028 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              	.LVL122:
 1491 0000 10B5     		push	{r4, lr}
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 4, -8
 1494              		.cfi_offset 14, -4
 1495 0002 0400     		movs	r4, r0
 1496              	.LVL123:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1497              		.loc 1 1033 0
 1498 0004 0F4A     		ldr	r2, .L112
 1499 0006 1168     		ldr	r1, [r2]
 1500 0008 0123     		movs	r3, #1
 1501 000a 0B43     		orrs	r3, r1
 1502 000c 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CyLib.c **** 
 1503              		.loc 1 1036 0
 1504 000e 0E4A     		ldr	r2, .L112+4
 1505 0010 0E4B     		ldr	r3, .L112+8
 1506 0012 1A60     		str	r2, [r3]
1039:Generated_Source\PSoC4/CyLib.c ****         
 1507              		.loc 1 1039 0
 1508 0014 0E4A     		ldr	r2, .L112+12
 1509 0016 1368     		ldr	r3, [r2]
 1510 0018 8021     		movs	r1, #128
 1511 001a 0902     		lsls	r1, r1, #8
 1512 001c 0B43     		orrs	r3, r1
 1513 001e 1360     		str	r3, [r2]
1137:Generated_Source\PSoC4/CyLib.c ****         {
 1514              		.loc 1 1137 0
 1515 0020 0028     		cmp	r0, #0
 1516 0022 09D1     		bne	.L108
1029:Generated_Source\PSoC4/CyLib.c **** 
 1517              		.loc 1 1029 0
 1518 0024 0020     		movs	r0, #0
 1519              	.LVL124:
 1520 0026 0CE0     		b	.L109
 1521              	.L110:
1143:Generated_Source\PSoC4/CyLib.c **** 
 1522              		.loc 1 1143 0
 1523 0028 0120     		movs	r0, #1
 1524 002a FFF7FEFF 		bl	CyDelayUs
 1525              	.LVL125:
1145:Generated_Source\PSoC4/CyLib.c ****                 {
 1526              		.loc 1 1145 0
 1527 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1528              	.LVL126:
 1529 0032 0028     		cmp	r0, #0
 1530 0034 04D1     		bne	.L111
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1531              		.loc 1 1141 0
 1532 0036 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 75


 1533              	.LVL127:
 1534              	.L108:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1535              		.loc 1 1141 0 is_stmt 0 discriminator 1
 1536 0038 002C     		cmp	r4, #0
 1537 003a F5D1     		bne	.L110
1139:Generated_Source\PSoC4/CyLib.c **** 
 1538              		.loc 1 1139 0 is_stmt 1
 1539 003c 1020     		movs	r0, #16
 1540 003e 00E0     		b	.L109
 1541              	.L111:
1147:Generated_Source\PSoC4/CyLib.c ****                     break;
 1542              		.loc 1 1147 0
 1543 0040 0020     		movs	r0, #0
 1544              	.L109:
 1545              	.LVL128:
1155:Generated_Source\PSoC4/CyLib.c **** 
 1546              		.loc 1 1155 0
 1547              		@ sp needed
 1548              	.LVL129:
 1549 0042 10BD     		pop	{r4, pc}
 1550              	.L113:
 1551              		.align	2
 1552              	.L112:
 1553 0044 60F02E40 		.word	1076818016
 1554 0048 02200000 		.word	8194
 1555 004c 78002E40 		.word	1076756600
 1556 0050 10002E40 		.word	1076756496
 1557              		.cfi_endproc
 1558              	.LFE9:
 1559              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1560              		.section	.text.CySysLvdEnable,"ax",%progbits
 1561              		.align	2
 1562              		.global	CySysLvdEnable
 1563              		.code	16
 1564              		.thumb_func
 1565              		.type	CySysLvdEnable, %function
 1566              	CySysLvdEnable:
 1567              	.LFB13:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1568              		.loc 1 2119 0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 0
 1571              		@ frame_needed = 0, uses_anonymous_args = 0
 1572              	.LVL130:
 1573 0000 70B5     		push	{r4, r5, r6, lr}
 1574              		.cfi_def_cfa_offset 16
 1575              		.cfi_offset 4, -16
 1576              		.cfi_offset 5, -12
 1577              		.cfi_offset 6, -8
 1578              		.cfi_offset 14, -4
 1579 0002 0300     		movs	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1580              		.loc 1 2121 0
 1581 0004 0D4C     		ldr	r4, .L115
 1582 0006 2268     		ldr	r2, [r4]
 1583 0008 0225     		movs	r5, #2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 76


 1584 000a AA43     		bics	r2, r5
 1585 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1586              		.loc 1 2124 0
 1587 000e 0C4A     		ldr	r2, .L115+4
 1588 0010 1168     		ldr	r1, [r2]
 1589 0012 1E20     		movs	r0, #30
 1590              	.LVL131:
 1591 0014 8143     		bics	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1592              		.loc 1 2125 0
 1593 0016 5B00     		lsls	r3, r3, #1
 1594              	.LVL132:
 1595 0018 1840     		ands	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1596              		.loc 1 2124 0
 1597 001a 0843     		orrs	r0, r1
 1598 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1599              		.loc 1 2128 0
 1600 001e 1168     		ldr	r1, [r2]
 1601 0020 0123     		movs	r3, #1
 1602 0022 0B43     		orrs	r3, r1
 1603 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1604              		.loc 1 2131 0
 1605 0026 FA20     		movs	r0, #250
 1606 0028 8000     		lsls	r0, r0, #2
 1607 002a FFF7FEFF 		bl	CyDelayUs
 1608              	.LVL133:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1609              		.loc 1 2134 0
 1610 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1611              	.LVL134:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1612              		.loc 1 2137 0
 1613 0032 2368     		ldr	r3, [r4]
 1614 0034 1D43     		orrs	r5, r3
 1615 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1616              		.loc 1 2138 0
 1617              		@ sp needed
 1618 0038 70BD     		pop	{r4, r5, r6, pc}
 1619              	.L116:
 1620 003a C046     		.align	2
 1621              	.L115:
 1622 003c 08000B40 		.word	1074462728
 1623 0040 18000B40 		.word	1074462744
 1624              		.cfi_endproc
 1625              	.LFE13:
 1626              		.size	CySysLvdEnable, .-CySysLvdEnable
 1627              		.global	__aeabi_uidiv
 1628              		.section	.text.CyDelayFreq,"ax",%progbits
 1629              		.align	2
 1630              		.global	CyDelayFreq
 1631              		.code	16
 1632              		.thumb_func
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 77


 1633              		.type	CyDelayFreq, %function
 1634              	CyDelayFreq:
 1635              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1636              		.loc 1 2597 0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 1640              	.LVL135:
 1641 0000 70B5     		push	{r4, r5, r6, lr}
 1642              		.cfi_def_cfa_offset 16
 1643              		.cfi_offset 4, -16
 1644              		.cfi_offset 5, -12
 1645              		.cfi_offset 6, -8
 1646              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1647              		.loc 1 2598 0
 1648 0002 0028     		cmp	r0, #0
 1649 0004 02D0     		beq	.L118
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1650              		.loc 1 2600 0
 1651 0006 0C4B     		ldr	r3, .L120
 1652 0008 1861     		str	r0, [r3, #16]
 1653 000a 02E0     		b	.L119
 1654              	.L118:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1655              		.loc 1 2604 0
 1656 000c 0B4A     		ldr	r2, .L120+4
 1657 000e 0A4B     		ldr	r3, .L120
 1658 0010 1A61     		str	r2, [r3, #16]
 1659              	.L119:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1660              		.loc 1 2607 0
 1661 0012 094C     		ldr	r4, .L120
 1662 0014 2569     		ldr	r5, [r4, #16]
 1663 0016 0A4B     		ldr	r3, .L120+8
 1664 0018 E818     		adds	r0, r5, r3
 1665              	.LVL136:
 1666 001a 0A49     		ldr	r1, .L120+12
 1667 001c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 78


 1668              	.LVL137:
 1669 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1670              		.loc 1 2608 0
 1671 0022 094B     		ldr	r3, .L120+16
 1672 0024 E818     		adds	r0, r5, r3
 1673 0026 FA21     		movs	r1, #250
 1674 0028 8900     		lsls	r1, r1, #2
 1675 002a FFF7FEFF 		bl	__aeabi_uidiv
 1676              	.LVL138:
 1677 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1678              		.loc 1 2609 0
 1679 0030 C003     		lsls	r0, r0, #15
 1680 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1681              		.loc 1 2610 0
 1682              		@ sp needed
 1683 0034 70BD     		pop	{r4, r5, r6, pc}
 1684              	.L121:
 1685 0036 C046     		.align	2
 1686              	.L120:
 1687 0038 00000000 		.word	.LANCHOR0
 1688 003c 00366E01 		.word	24000000
 1689 0040 3F420F00 		.word	999999
 1690 0044 40420F00 		.word	1000000
 1691 0048 E7030000 		.word	999
 1692              		.cfi_endproc
 1693              	.LFE35:
 1694              		.size	CyDelayFreq, .-CyDelayFreq
 1695              		.section	.text.CySysTickStop,"ax",%progbits
 1696              		.align	2
 1697              		.global	CySysTickStop
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	CySysTickStop, %function
 1701              	CySysTickStop:
 1702              	.LFB39:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 79


2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 80


2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1703              		.loc 1 2705 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1708              		.loc 1 2706 0
 1709 0000 024A     		ldr	r2, .L123
 1710 0002 1368     		ldr	r3, [r2]
 1711 0004 0121     		movs	r1, #1
 1712 0006 8B43     		bics	r3, r1
 1713 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** }
 1714              		.loc 1 2707 0
 1715              		@ sp needed
 1716 000a 7047     		bx	lr
 1717              	.L124:
 1718              		.align	2
 1719              	.L123:
 1720 000c 10E000E0 		.word	-536813552
 1721              		.cfi_endproc
 1722              	.LFE39:
 1723              		.size	CySysTickStop, .-CySysTickStop
 1724              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1725              		.align	2
 1726              		.global	CySysTickEnableInterrupt
 1727              		.code	16
 1728              		.thumb_func
 1729              		.type	CySysTickEnableInterrupt, %function
 1730              	CySysTickEnableInterrupt:
 1731              	.LFB40:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 81


2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 1732              		.loc 1 2721 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1737              		.loc 1 2722 0
 1738 0000 024A     		ldr	r2, .L126
 1739 0002 1168     		ldr	r1, [r2]
 1740 0004 0223     		movs	r3, #2
 1741 0006 0B43     		orrs	r3, r1
 1742 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** }
 1743              		.loc 1 2723 0
 1744              		@ sp needed
 1745 000a 7047     		bx	lr
 1746              	.L127:
 1747              		.align	2
 1748              	.L126:
 1749 000c 10E000E0 		.word	-536813552
 1750              		.cfi_endproc
 1751              	.LFE40:
 1752              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1753              		.section	.text.CySysTickEnable,"ax",%progbits
 1754              		.align	2
 1755              		.global	CySysTickEnable
 1756              		.code	16
 1757              		.thumb_func
 1758              		.type	CySysTickEnable, %function
 1759              	CySysTickEnable:
 1760              	.LFB38:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1761              		.loc 1 2688 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765 0000 10B5     		push	{r4, lr}
 1766              		.cfi_def_cfa_offset 8
 1767              		.cfi_offset 4, -8
 1768              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1769              		.loc 1 2689 0
 1770 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1771              	.LVL139:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1772              		.loc 1 2690 0
 1773 0006 034A     		ldr	r2, .L129
 1774 0008 1168     		ldr	r1, [r2]
 1775 000a 0123     		movs	r3, #1
 1776 000c 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 82


 1777 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1778              		.loc 1 2691 0
 1779              		@ sp needed
 1780 0010 10BD     		pop	{r4, pc}
 1781              	.L130:
 1782 0012 C046     		.align	2
 1783              	.L129:
 1784 0014 10E000E0 		.word	-536813552
 1785              		.cfi_endproc
 1786              	.LFE38:
 1787              		.size	CySysTickEnable, .-CySysTickEnable
 1788              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1789              		.align	2
 1790              		.global	CySysTickDisableInterrupt
 1791              		.code	16
 1792              		.thumb_func
 1793              		.type	CySysTickDisableInterrupt, %function
 1794              	CySysTickDisableInterrupt:
 1795              	.LFB41:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 1796              		.loc 1 2737 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1801              		.loc 1 2738 0
 1802 0000 024A     		ldr	r2, .L132
 1803 0002 1368     		ldr	r3, [r2]
 1804 0004 0221     		movs	r1, #2
 1805 0006 8B43     		bics	r3, r1
 1806 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** }
 1807              		.loc 1 2739 0
 1808              		@ sp needed
 1809 000a 7047     		bx	lr
 1810              	.L133:
 1811              		.align	2
 1812              	.L132:
 1813 000c 10E000E0 		.word	-536813552
 1814              		.cfi_endproc
 1815              	.LFE41:
 1816              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 83


 1817              		.section	.text.CySysTickSetReload,"ax",%progbits
 1818              		.align	2
 1819              		.global	CySysTickSetReload
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	CySysTickSetReload, %function
 1823              	CySysTickSetReload:
 1824              	.LFB42:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 1825              		.loc 1 2754 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830              	.LVL140:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1831              		.loc 1 2755 0
 1832 0000 0002     		lsls	r0, r0, #8
 1833              	.LVL141:
 1834 0002 000A     		lsrs	r0, r0, #8
 1835 0004 014B     		ldr	r3, .L135
 1836 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 1837              		.loc 1 2756 0
 1838              		@ sp needed
 1839 0008 7047     		bx	lr
 1840              	.L136:
 1841 000a C046     		.align	2
 1842              	.L135:
 1843 000c 14E000E0 		.word	-536813548
 1844              		.cfi_endproc
 1845              	.LFE42:
 1846              		.size	CySysTickSetReload, .-CySysTickSetReload
 1847              		.section	.text.CySysTickGetReload,"ax",%progbits
 1848              		.align	2
 1849              		.global	CySysTickGetReload
 1850              		.code	16
 1851              		.thumb_func
 1852              		.type	CySysTickGetReload, %function
 1853              	CySysTickGetReload:
 1854              	.LFB43:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 84


2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 1855              		.loc 1 2770 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1860              		.loc 1 2771 0
 1861 0000 024B     		ldr	r3, .L138
 1862 0002 1868     		ldr	r0, [r3]
 1863 0004 0002     		lsls	r0, r0, #8
 1864 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 1865              		.loc 1 2772 0
 1866              		@ sp needed
 1867 0008 7047     		bx	lr
 1868              	.L139:
 1869 000a C046     		.align	2
 1870              	.L138:
 1871 000c 14E000E0 		.word	-536813548
 1872              		.cfi_endproc
 1873              	.LFE43:
 1874              		.size	CySysTickGetReload, .-CySysTickGetReload
 1875              		.section	.text.CySysTickGetValue,"ax",%progbits
 1876              		.align	2
 1877              		.global	CySysTickGetValue
 1878              		.code	16
 1879              		.thumb_func
 1880              		.type	CySysTickGetValue, %function
 1881              	CySysTickGetValue:
 1882              	.LFB44:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
 1883              		.loc 1 2786 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 85


 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 1887              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1888              		.loc 1 2787 0
 1889 0000 024B     		ldr	r3, .L141
 1890 0002 1868     		ldr	r0, [r3]
 1891 0004 0002     		lsls	r0, r0, #8
 1892 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** }
 1893              		.loc 1 2788 0
 1894              		@ sp needed
 1895 0008 7047     		bx	lr
 1896              	.L142:
 1897 000a C046     		.align	2
 1898              	.L141:
 1899 000c 18E000E0 		.word	-536813544
 1900              		.cfi_endproc
 1901              	.LFE44:
 1902              		.size	CySysTickGetValue, .-CySysTickGetValue
 1903              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1904              		.align	2
 1905              		.global	CySysTickSetClockSource
 1906              		.code	16
 1907              		.thumb_func
 1908              		.type	CySysTickSetClockSource, %function
 1909              	CySysTickSetClockSource:
 1910              	.LFB45:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 86


2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
 1911              		.loc 1 2818 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
 1916              	.LVL142:
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1917              		.loc 1 2819 0
 1918 0000 0128     		cmp	r0, #1
 1919 0002 05D1     		bne	.L144
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1920              		.loc 1 2821 0
 1921 0004 054A     		ldr	r2, .L146
 1922 0006 1168     		ldr	r1, [r2]
 1923 0008 0423     		movs	r3, #4
 1924 000a 0B43     		orrs	r3, r1
 1925 000c 1360     		str	r3, [r2]
 1926 000e 04E0     		b	.L143
 1927              	.L144:
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1928              		.loc 1 2825 0
 1929 0010 024A     		ldr	r2, .L146
 1930 0012 1368     		ldr	r3, [r2]
 1931 0014 0421     		movs	r1, #4
 1932 0016 8B43     		bics	r3, r1
 1933 0018 1360     		str	r3, [r2]
 1934              	.L143:
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
 1935              		.loc 1 2827 0
 1936              		@ sp needed
 1937 001a 7047     		bx	lr
 1938              	.L147:
 1939              		.align	2
 1940              	.L146:
 1941 001c 10E000E0 		.word	-536813552
 1942              		.cfi_endproc
 1943              	.LFE45:
 1944              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1945              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1946              		.align	2
 1947              		.global	CySysTickGetClockSource
 1948              		.code	16
 1949              		.thumb_func
 1950              		.type	CySysTickGetClockSource, %function
 1951              	CySysTickGetClockSource:
 1952              	.LFB46:
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 87


2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
 1953              		.loc 1 2843 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1958              		.loc 1 2844 0
 1959 0000 024B     		ldr	r3, .L149
 1960 0002 1868     		ldr	r0, [r3]
 1961 0004 8008     		lsrs	r0, r0, #2
 1962 0006 0123     		movs	r3, #1
 1963 0008 1840     		ands	r0, r3
2845:Generated_Source\PSoC4/CyLib.c ****     }
 1964              		.loc 1 2845 0
 1965              		@ sp needed
 1966 000a 7047     		bx	lr
 1967              	.L150:
 1968              		.align	2
 1969              	.L149:
 1970 000c 10E000E0 		.word	-536813552
 1971              		.cfi_endproc
 1972              	.LFE46:
 1973              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1974              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1975              		.align	2
 1976              		.global	CySysTickGetCountFlag
 1977              		.code	16
 1978              		.thumb_func
 1979              		.type	CySysTickGetCountFlag, %function
 1980              	CySysTickGetCountFlag:
 1981              	.LFB47:
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 88


2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 1982              		.loc 1 2866 0
 1983              		.cfi_startproc
 1984              		@ args = 0, pretend = 0, frame = 0
 1985              		@ frame_needed = 0, uses_anonymous_args = 0
 1986              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1987              		.loc 1 2867 0
 1988 0000 024B     		ldr	r3, .L152
 1989 0002 1868     		ldr	r0, [r3]
 1990 0004 000C     		lsrs	r0, r0, #16
 1991 0006 0123     		movs	r3, #1
 1992 0008 1840     		ands	r0, r3
2868:Generated_Source\PSoC4/CyLib.c **** }
 1993              		.loc 1 2868 0
 1994              		@ sp needed
 1995 000a 7047     		bx	lr
 1996              	.L153:
 1997              		.align	2
 1998              	.L152:
 1999 000c 10E000E0 		.word	-536813552
 2000              		.cfi_endproc
 2001              	.LFE47:
 2002              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2003              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2004              		.align	2
 2005              		.code	16
 2006              		.thumb_func
 2007              		.type	CySysTickServiceCallbacks, %function
 2008              	CySysTickServiceCallbacks:
 2009              	.LFB51:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 89


2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 90


2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 2010              		.loc 1 2951 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 0
 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014 0000 10B5     		push	{r4, lr}
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 4, -8
 2017              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2018              		.loc 1 2955 0
 2019 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2020              	.LVL143:
 2021 0006 0128     		cmp	r0, #1
 2022 0008 0BD1     		bne	.L154
 2023 000a 07E0     		b	.L159
 2024              	.LVL144:
 2025              	.L158:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2026              		.loc 1 2959 0
 2027 000c A300     		lsls	r3, r4, #2
 2028 000e 054A     		ldr	r2, .L160
 2029 0010 9B58     		ldr	r3, [r3, r2]
 2030 0012 002B     		cmp	r3, #0
 2031 0014 00D0     		beq	.L157
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2032              		.loc 1 2961 0
 2033 0016 9847     		blx	r3
 2034              	.LVL145:
 2035              	.L157:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2036              		.loc 1 2957 0 discriminator 2
 2037 0018 0134     		adds	r4, r4, #1
 2038              	.LVL146:
 2039 001a 00E0     		b	.L155
 2040              	.LVL147:
 2041              	.L159:
 2042 001c 0024     		movs	r4, #0
 2043              	.L155:
 2044              	.LVL148:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2045              		.loc 1 2957 0 is_stmt 0 discriminator 1
 2046 001e 042C     		cmp	r4, #4
 2047 0020 F4D9     		bls	.L158
 2048              	.LVL149:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 91


 2049              	.L154:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 2050              		.loc 1 2965 0 is_stmt 1
 2051              		@ sp needed
 2052 0022 10BD     		pop	{r4, pc}
 2053              	.L161:
 2054              		.align	2
 2055              	.L160:
 2056 0024 00000000 		.word	.LANCHOR2
 2057              		.cfi_endproc
 2058              	.LFE51:
 2059              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2060              		.section	.text.CySysTickClear,"ax",%progbits
 2061              		.align	2
 2062              		.global	CySysTickClear
 2063              		.code	16
 2064              		.thumb_func
 2065              		.type	CySysTickClear, %function
 2066              	CySysTickClear:
 2067              	.LFB48:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2068              		.loc 1 2879 0
 2069              		.cfi_startproc
 2070              		@ args = 0, pretend = 0, frame = 0
 2071              		@ frame_needed = 0, uses_anonymous_args = 0
 2072              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 2073              		.loc 1 2880 0
 2074 0000 0022     		movs	r2, #0
 2075 0002 014B     		ldr	r3, .L163
 2076 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 2077              		.loc 1 2881 0
 2078              		@ sp needed
 2079 0006 7047     		bx	lr
 2080              	.L164:
 2081              		.align	2
 2082              	.L163:
 2083 0008 18E000E0 		.word	-536813544
 2084              		.cfi_endproc
 2085              	.LFE48:
 2086              		.size	CySysTickClear, .-CySysTickClear
 2087              		.section	.text.CySysTickInit,"ax",%progbits
 2088              		.align	2
 2089              		.global	CySysTickInit
 2090              		.code	16
 2091              		.thumb_func
 2092              		.type	CySysTickInit, %function
 2093              	CySysTickInit:
 2094              	.LFB37:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2095              		.loc 1 2658 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 92


 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099 0000 10B5     		push	{r4, lr}
 2100              		.cfi_def_cfa_offset 8
 2101              		.cfi_offset 4, -8
 2102              		.cfi_offset 14, -4
 2103              	.LVL150:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2104              		.loc 1 2661 0
 2105 0002 0023     		movs	r3, #0
 2106 0004 04E0     		b	.L166
 2107              	.LVL151:
 2108              	.L167:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 2109              		.loc 1 2663 0 discriminator 3
 2110 0006 9900     		lsls	r1, r3, #2
 2111 0008 0020     		movs	r0, #0
 2112 000a 0B4A     		ldr	r2, .L168
 2113 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2114              		.loc 1 2661 0 discriminator 3
 2115 000e 0133     		adds	r3, r3, #1
 2116              	.LVL152:
 2117              	.L166:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2118              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2119 0010 042B     		cmp	r3, #4
 2120 0012 F8D9     		bls	.L167
2666:Generated_Source\PSoC4/CyLib.c **** 
 2121              		.loc 1 2666 0 is_stmt 1
 2122 0014 0949     		ldr	r1, .L168+4
 2123 0016 0F20     		movs	r0, #15
 2124 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2125              	.LVL153:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2126              		.loc 1 2669 0
 2127 001c 0120     		movs	r0, #1
 2128 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2129              	.LVL154:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2130              		.loc 1 2672 0
 2131 0022 074B     		ldr	r3, .L168+8
 2132 0024 1869     		ldr	r0, [r3, #16]
 2133 0026 FA21     		movs	r1, #250
 2134 0028 8900     		lsls	r1, r1, #2
 2135 002a FFF7FEFF 		bl	__aeabi_uidiv
 2136              	.LVL155:
 2137 002e FFF7FEFF 		bl	CySysTickSetReload
 2138              	.LVL156:
2673:Generated_Source\PSoC4/CyLib.c **** }
 2139              		.loc 1 2673 0
 2140 0032 FFF7FEFF 		bl	CySysTickClear
 2141              	.LVL157:
2674:Generated_Source\PSoC4/CyLib.c **** 
 2142              		.loc 1 2674 0
 2143              		@ sp needed
 2144 0036 10BD     		pop	{r4, pc}
 2145              	.L169:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 93


 2146              		.align	2
 2147              	.L168:
 2148 0038 00000000 		.word	.LANCHOR2
 2149 003c 00000000 		.word	CySysTickServiceCallbacks
 2150 0040 00000000 		.word	.LANCHOR0
 2151              		.cfi_endproc
 2152              	.LFE37:
 2153              		.size	CySysTickInit, .-CySysTickInit
 2154              		.section	.text.CySysTickStart,"ax",%progbits
 2155              		.align	2
 2156              		.global	CySysTickStart
 2157              		.code	16
 2158              		.thumb_func
 2159              		.type	CySysTickStart, %function
 2160              	CySysTickStart:
 2161              	.LFB36:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2162              		.loc 1 2629 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166 0000 10B5     		push	{r4, lr}
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 4, -8
 2169              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 2170              		.loc 1 2630 0
 2171 0002 064B     		ldr	r3, .L172
 2172 0004 5B69     		ldr	r3, [r3, #20]
 2173 0006 002B     		cmp	r3, #0
 2174 0008 04D1     		bne	.L171
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2175              		.loc 1 2632 0
 2176 000a FFF7FEFF 		bl	CySysTickInit
 2177              	.LVL158:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 2178              		.loc 1 2633 0
 2179 000e 0122     		movs	r2, #1
 2180 0010 024B     		ldr	r3, .L172
 2181 0012 5A61     		str	r2, [r3, #20]
 2182              	.L171:
2636:Generated_Source\PSoC4/CyLib.c **** }
 2183              		.loc 1 2636 0
 2184 0014 FFF7FEFF 		bl	CySysTickEnable
 2185              	.LVL159:
2637:Generated_Source\PSoC4/CyLib.c **** 
 2186              		.loc 1 2637 0
 2187              		@ sp needed
 2188 0018 10BD     		pop	{r4, pc}
 2189              	.L173:
 2190 001a C046     		.align	2
 2191              	.L172:
 2192 001c 00000000 		.word	.LANCHOR2
 2193              		.cfi_endproc
 2194              	.LFE36:
 2195              		.size	CySysTickStart, .-CySysTickStart
 2196              		.section	.text.CySysTickSetCallback,"ax",%progbits
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 94


 2197              		.align	2
 2198              		.global	CySysTickSetCallback
 2199              		.code	16
 2200              		.thumb_func
 2201              		.type	CySysTickSetCallback, %function
 2202              	CySysTickSetCallback:
 2203              	.LFB49:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2204              		.loc 1 2914 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208              		@ link register save eliminated.
 2209              	.LVL160:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2210              		.loc 1 2917 0
 2211 0000 024A     		ldr	r2, .L175
 2212 0002 8300     		lsls	r3, r0, #2
 2213 0004 9858     		ldr	r0, [r3, r2]
 2214              	.LVL161:
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2215              		.loc 1 2918 0
 2216 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2217              		.loc 1 2920 0
 2218              		@ sp needed
 2219 0008 7047     		bx	lr
 2220              	.L176:
 2221 000a C046     		.align	2
 2222              	.L175:
 2223 000c 00000000 		.word	.LANCHOR2
 2224              		.cfi_endproc
 2225              	.LFE49:
 2226              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2227              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2228              		.align	2
 2229              		.global	CySysTickGetCallback
 2230              		.code	16
 2231              		.thumb_func
 2232              		.type	CySysTickGetCallback, %function
 2233              	CySysTickGetCallback:
 2234              	.LFB50:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2235              		.loc 1 2938 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              		@ link register save eliminated.
 2240              	.LVL162:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2241              		.loc 1 2939 0
 2242 0000 8000     		lsls	r0, r0, #2
 2243              	.LVL163:
 2244 0002 014B     		ldr	r3, .L178
 2245 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2246              		.loc 1 2940 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 95


 2247              		@ sp needed
 2248 0006 7047     		bx	lr
 2249              	.L179:
 2250              		.align	2
 2251              	.L178:
 2252 0008 00000000 		.word	.LANCHOR2
 2253              		.cfi_endproc
 2254              	.LFE50:
 2255              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2256              		.section	.text.CyGetUniqueId,"ax",%progbits
 2257              		.align	2
 2258              		.global	CyGetUniqueId
 2259              		.code	16
 2260              		.thumb_func
 2261              		.type	CyGetUniqueId, %function
 2262              	CyGetUniqueId:
 2263              	.LFB52:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2264              		.loc 1 2983 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
 2268              		@ link register save eliminated.
 2269              	.LVL164:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2270              		.loc 1 2985 0
 2271 0000 134B     		ldr	r3, .L181
 2272 0002 1B78     		ldrb	r3, [r3]
 2273 0004 DAB2     		uxtb	r2, r3
 2274 0006 0260     		str	r2, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2275              		.loc 1 2986 0
 2276 0008 124B     		ldr	r3, .L181+4
 2277 000a 1B78     		ldrb	r3, [r3]
 2278 000c 1B02     		lsls	r3, r3, #8
 2279 000e 1343     		orrs	r3, r2
 2280 0010 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2281              		.loc 1 2987 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 96


 2282 0012 114A     		ldr	r2, .L181+8
 2283 0014 1278     		ldrb	r2, [r2]
 2284 0016 1204     		lsls	r2, r2, #16
 2285 0018 1343     		orrs	r3, r2
 2286 001a 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2287              		.loc 1 2988 0
 2288 001c 0F4A     		ldr	r2, .L181+12
 2289 001e 1278     		ldrb	r2, [r2]
 2290 0020 1206     		lsls	r2, r2, #24
 2291 0022 1343     		orrs	r3, r2
 2292 0024 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2293              		.loc 1 2990 0
 2294 0026 0E4B     		ldr	r3, .L181+16
 2295 0028 1B78     		ldrb	r3, [r3]
 2296 002a DAB2     		uxtb	r2, r3
 2297 002c 4260     		str	r2, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2298              		.loc 1 2991 0
 2299 002e 0D4B     		ldr	r3, .L181+20
 2300 0030 1B78     		ldrb	r3, [r3]
 2301 0032 1B02     		lsls	r3, r3, #8
 2302 0034 1343     		orrs	r3, r2
 2303 0036 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2304              		.loc 1 2992 0
 2305 0038 0B4A     		ldr	r2, .L181+24
 2306 003a 1278     		ldrb	r2, [r2]
 2307 003c 1204     		lsls	r2, r2, #16
 2308 003e 1343     		orrs	r3, r2
 2309 0040 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2310              		.loc 1 2993 0
 2311 0042 0A4A     		ldr	r2, .L181+28
 2312 0044 1278     		ldrb	r2, [r2]
 2313 0046 1206     		lsls	r2, r2, #24
 2314 0048 1343     		orrs	r3, r2
 2315 004a 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2316              		.loc 1 3005 0
 2317              		@ sp needed
 2318 004c 7047     		bx	lr
 2319              	.L182:
 2320 004e C046     		.align	2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 97


 2321              	.L181:
 2322 0050 78F2FF0F 		.word	268431992
 2323 0054 79F2FF0F 		.word	268431993
 2324 0058 7AF2FF0F 		.word	268431994
 2325 005c 7BF2FF0F 		.word	268431995
 2326 0060 7CF2FF0F 		.word	268431996
 2327 0064 7DF2FF0F 		.word	268431997
 2328 0068 7EF2FF0F 		.word	268431998
 2329 006c 7FF2FF0F 		.word	268431999
 2330              		.cfi_endproc
 2331              	.LFE52:
 2332              		.size	CyGetUniqueId, .-CyGetUniqueId
 2333              		.global	CySysClkPumpConfig
 2334              		.global	cyImoFreqMhz2Reg
 2335              		.global	CySysTickInitVar
 2336              		.global	cydelay32kMs
 2337              		.global	cydelayFreqMhz
 2338              		.global	cydelayFreqKhz
 2339              		.global	cydelayFreqHz
 2340              		.section	.rodata
 2341              		.align	2
 2342              		.set	.LANCHOR1,. + 0
 2343              		.type	cyImoFreqMhz2Reg, %object
 2344              		.size	cyImoFreqMhz2Reg, 46
 2345              	cyImoFreqMhz2Reg:
 2346 0000 03       		.byte	3
 2347 0001 04       		.byte	4
 2348 0002 05       		.byte	5
 2349 0003 06       		.byte	6
 2350 0004 07       		.byte	7
 2351 0005 08       		.byte	8
 2352 0006 09       		.byte	9
 2353 0007 0A       		.byte	10
 2354 0008 0B       		.byte	11
 2355 0009 0C       		.byte	12
 2356 000a 0E       		.byte	14
 2357 000b 0F       		.byte	15
 2358 000c 10       		.byte	16
 2359 000d 11       		.byte	17
 2360 000e 12       		.byte	18
 2361 000f 13       		.byte	19
 2362 0010 14       		.byte	20
 2363 0011 15       		.byte	21
 2364 0012 16       		.byte	22
 2365 0013 17       		.byte	23
 2366 0014 18       		.byte	24
 2367 0015 19       		.byte	25
 2368 0016 1B       		.byte	27
 2369 0017 1C       		.byte	28
 2370 0018 1D       		.byte	29
 2371 0019 1E       		.byte	30
 2372 001a 1F       		.byte	31
 2373 001b 20       		.byte	32
 2374 001c 21       		.byte	33
 2375 001d 22       		.byte	34
 2376 001e 23       		.byte	35
 2377 001f 25       		.byte	37
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 98


 2378 0020 26       		.byte	38
 2379 0021 27       		.byte	39
 2380 0022 28       		.byte	40
 2381 0023 29       		.byte	41
 2382 0024 2A       		.byte	42
 2383 0025 2B       		.byte	43
 2384 0026 2E       		.byte	46
 2385 0027 2F       		.byte	47
 2386 0028 30       		.byte	48
 2387 0029 31       		.byte	49
 2388 002a 32       		.byte	50
 2389 002b 33       		.byte	51
 2390 002c 34       		.byte	52
 2391 002d 35       		.byte	53
 2392              		.data
 2393              		.align	2
 2394              		.set	.LANCHOR0,. + 0
 2395              		.type	CySysClkPumpConfig, %object
 2396              		.size	CySysClkPumpConfig, 4
 2397              	CySysClkPumpConfig:
 2398 0000 01000000 		.word	1
 2399              		.type	cydelay32kMs, %object
 2400              		.size	cydelay32kMs, 4
 2401              	cydelay32kMs:
 2402 0004 0000E02E 		.word	786432000
 2403              		.type	cydelayFreqKhz, %object
 2404              		.size	cydelayFreqKhz, 4
 2405              	cydelayFreqKhz:
 2406 0008 C05D0000 		.word	24000
 2407              		.type	cydelayFreqMhz, %object
 2408              		.size	cydelayFreqMhz, 1
 2409              	cydelayFreqMhz:
 2410 000c 18       		.byte	24
 2411 000d 000000   		.space	3
 2412              		.type	cydelayFreqHz, %object
 2413              		.size	cydelayFreqHz, 4
 2414              	cydelayFreqHz:
 2415 0010 00366E01 		.word	24000000
 2416              		.bss
 2417              		.align	2
 2418              		.set	.LANCHOR2,. + 0
 2419              		.type	CySysTickCallbacks, %object
 2420              		.size	CySysTickCallbacks, 20
 2421              	CySysTickCallbacks:
 2422 0000 00000000 		.space	20
 2422      00000000 
 2422      00000000 
 2422      00000000 
 2422      00000000 
 2423              		.type	CySysTickInitVar, %object
 2424              		.size	CySysTickInitVar, 4
 2425              	CySysTickInitVar:
 2426 0014 00000000 		.space	4
 2427              		.text
 2428              	.Letext0:
 2429              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2430              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 99


 2431              		.section	.debug_info,"",%progbits
 2432              	.Ldebug_info0:
 2433 0000 3C0C0000 		.4byte	0xc3c
 2434 0004 0400     		.2byte	0x4
 2435 0006 00000000 		.4byte	.Ldebug_abbrev0
 2436 000a 04       		.byte	0x4
 2437 000b 01       		.uleb128 0x1
 2438 000c 84000000 		.4byte	.LASF115
 2439 0010 0C       		.byte	0xc
 2440 0011 30070000 		.4byte	.LASF116
 2441 0015 9E050000 		.4byte	.LASF117
 2442 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2443 001d 00000000 		.4byte	0
 2444 0021 00000000 		.4byte	.Ldebug_line0
 2445 0025 02       		.uleb128 0x2
 2446 0026 01       		.byte	0x1
 2447 0027 06       		.byte	0x6
 2448 0028 8C010000 		.4byte	.LASF0
 2449 002c 02       		.uleb128 0x2
 2450 002d 01       		.byte	0x1
 2451 002e 08       		.byte	0x8
 2452 002f 1A050000 		.4byte	.LASF1
 2453 0033 02       		.uleb128 0x2
 2454 0034 02       		.byte	0x2
 2455 0035 05       		.byte	0x5
 2456 0036 28050000 		.4byte	.LASF2
 2457 003a 02       		.uleb128 0x2
 2458 003b 02       		.byte	0x2
 2459 003c 07       		.byte	0x7
 2460 003d 66030000 		.4byte	.LASF3
 2461 0041 02       		.uleb128 0x2
 2462 0042 04       		.byte	0x4
 2463 0043 05       		.byte	0x5
 2464 0044 CB010000 		.4byte	.LASF4
 2465 0048 02       		.uleb128 0x2
 2466 0049 04       		.byte	0x4
 2467 004a 07       		.byte	0x7
 2468 004b EE020000 		.4byte	.LASF5
 2469 004f 02       		.uleb128 0x2
 2470 0050 08       		.byte	0x8
 2471 0051 05       		.byte	0x5
 2472 0052 7E010000 		.4byte	.LASF6
 2473 0056 02       		.uleb128 0x2
 2474 0057 08       		.byte	0x8
 2475 0058 07       		.byte	0x7
 2476 0059 12010000 		.4byte	.LASF7
 2477 005d 03       		.uleb128 0x3
 2478 005e 04       		.byte	0x4
 2479 005f 05       		.byte	0x5
 2480 0060 696E7400 		.ascii	"int\000"
 2481 0064 02       		.uleb128 0x2
 2482 0065 04       		.byte	0x4
 2483 0066 07       		.byte	0x7
 2484 0067 D2020000 		.4byte	.LASF8
 2485 006b 04       		.uleb128 0x4
 2486 006c F6010000 		.4byte	.LASF9
 2487 0070 02       		.byte	0x2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 100


 2488 0071 D201     		.2byte	0x1d2
 2489 0073 2C000000 		.4byte	0x2c
 2490 0077 04       		.uleb128 0x4
 2491 0078 17000000 		.4byte	.LASF10
 2492 007c 02       		.byte	0x2
 2493 007d D301     		.2byte	0x1d3
 2494 007f 3A000000 		.4byte	0x3a
 2495 0083 04       		.uleb128 0x4
 2496 0084 36020000 		.4byte	.LASF11
 2497 0088 02       		.byte	0x2
 2498 0089 D401     		.2byte	0x1d4
 2499 008b 48000000 		.4byte	0x48
 2500 008f 02       		.uleb128 0x2
 2501 0090 04       		.byte	0x4
 2502 0091 04       		.byte	0x4
 2503 0092 9D040000 		.4byte	.LASF12
 2504 0096 02       		.uleb128 0x2
 2505 0097 08       		.byte	0x8
 2506 0098 04       		.byte	0x4
 2507 0099 12020000 		.4byte	.LASF13
 2508 009d 02       		.uleb128 0x2
 2509 009e 01       		.byte	0x1
 2510 009f 08       		.byte	0x8
 2511 00a0 7C050000 		.4byte	.LASF14
 2512 00a4 04       		.uleb128 0x4
 2513 00a5 05070000 		.4byte	.LASF15
 2514 00a9 02       		.byte	0x2
 2515 00aa 7402     		.2byte	0x274
 2516 00ac 48000000 		.4byte	0x48
 2517 00b0 04       		.uleb128 0x4
 2518 00b1 04050000 		.4byte	.LASF16
 2519 00b5 02       		.byte	0x2
 2520 00b6 7C02     		.2byte	0x27c
 2521 00b8 BC000000 		.4byte	0xbc
 2522 00bc 05       		.uleb128 0x5
 2523 00bd 6B000000 		.4byte	0x6b
 2524 00c1 04       		.uleb128 0x4
 2525 00c2 EC030000 		.4byte	.LASF17
 2526 00c6 02       		.byte	0x2
 2527 00c7 7E02     		.2byte	0x27e
 2528 00c9 CD000000 		.4byte	0xcd
 2529 00cd 05       		.uleb128 0x5
 2530 00ce 83000000 		.4byte	0x83
 2531 00d2 04       		.uleb128 0x4
 2532 00d3 81050000 		.4byte	.LASF18
 2533 00d7 02       		.byte	0x2
 2534 00d8 8E02     		.2byte	0x28e
 2535 00da DE000000 		.4byte	0xde
 2536 00de 06       		.uleb128 0x6
 2537 00df 04       		.byte	0x4
 2538 00e0 E4000000 		.4byte	0xe4
 2539 00e4 07       		.uleb128 0x7
 2540 00e5 02       		.uleb128 0x2
 2541 00e6 08       		.byte	0x8
 2542 00e7 04       		.byte	0x4
 2543 00e8 29040000 		.4byte	.LASF19
 2544 00ec 02       		.uleb128 0x2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 101


 2545 00ed 04       		.byte	0x4
 2546 00ee 07       		.byte	0x7
 2547 00ef 0E040000 		.4byte	.LASF20
 2548 00f3 08       		.uleb128 0x8
 2549 00f4 C8040000 		.4byte	.LASF21
 2550 00f8 03       		.byte	0x3
 2551 00f9 F5       		.byte	0xf5
 2552 00fa DE000000 		.4byte	0xde
 2553 00fe 09       		.uleb128 0x9
 2554 00ff 0E070000 		.4byte	.LASF22
 2555 0103 01       		.byte	0x1
 2556 0104 6B       		.byte	0x6b
 2557 0105 00000000 		.4byte	.LFB2
 2558 0109 14000000 		.4byte	.LFE2-.LFB2
 2559 010d 01       		.uleb128 0x1
 2560 010e 9C       		.byte	0x9c
 2561 010f 09       		.uleb128 0x9
 2562 0110 1B030000 		.4byte	.LASF23
 2563 0114 01       		.byte	0x1
 2564 0115 8B       		.byte	0x8b
 2565 0116 00000000 		.4byte	.LFB3
 2566 011a 10000000 		.4byte	.LFE3-.LFB3
 2567 011e 01       		.uleb128 0x1
 2568 011f 9C       		.byte	0x9c
 2569 0120 0A       		.uleb128 0xa
 2570 0121 27000000 		.4byte	.LASF26
 2571 0125 01       		.byte	0x1
 2572 0126 AD01     		.2byte	0x1ad
 2573 0128 00000000 		.4byte	.LFB4
 2574 012c 20000000 		.4byte	.LFE4-.LFB4
 2575 0130 01       		.uleb128 0x1
 2576 0131 9C       		.byte	0x9c
 2577 0132 79010000 		.4byte	0x179
 2578 0136 0B       		.uleb128 0xb
 2579 0137 50050000 		.4byte	.LASF28
 2580 013b 01       		.byte	0x1
 2581 013c AD01     		.2byte	0x1ad
 2582 013e 83000000 		.4byte	0x83
 2583 0142 00000000 		.4byte	.LLST0
 2584 0146 0C       		.uleb128 0xc
 2585 0147 A9010000 		.4byte	.LASF24
 2586 014b 01       		.byte	0x1
 2587 014c AF01     		.2byte	0x1af
 2588 014e 6B000000 		.4byte	0x6b
 2589 0152 2C000000 		.4byte	.LLST1
 2590 0156 0C       		.uleb128 0xc
 2591 0157 5C070000 		.4byte	.LASF25
 2592 015b 01       		.byte	0x1
 2593 015c B001     		.2byte	0x1b0
 2594 015e 83000000 		.4byte	0x83
 2595 0162 3F000000 		.4byte	.LLST2
 2596 0166 0D       		.uleb128 0xd
 2597 0167 08000000 		.4byte	.LVL1
 2598 016b 1E0C0000 		.4byte	0xc1e
 2599 016f 0D       		.uleb128 0xd
 2600 0170 1A000000 		.4byte	.LVL5
 2601 0174 290C0000 		.4byte	0xc29
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 102


 2602 0178 00       		.byte	0
 2603 0179 0A       		.uleb128 0xa
 2604 017a D7030000 		.4byte	.LASF27
 2605 017e 01       		.byte	0x1
 2606 017f D901     		.2byte	0x1d9
 2607 0181 00000000 		.4byte	.LFB5
 2608 0185 38000000 		.4byte	.LFE5-.LFB5
 2609 0189 01       		.uleb128 0x1
 2610 018a 9C       		.byte	0x9c
 2611 018b 9E010000 		.4byte	0x19e
 2612 018f 0E       		.uleb128 0xe
 2613 0190 0B020000 		.4byte	.LASF29
 2614 0194 01       		.byte	0x1
 2615 0195 D901     		.2byte	0x1d9
 2616 0197 83000000 		.4byte	0x83
 2617 019b 01       		.uleb128 0x1
 2618 019c 50       		.byte	0x50
 2619 019d 00       		.byte	0
 2620 019e 0F       		.uleb128 0xf
 2621 019f 58020000 		.4byte	.LASF34
 2622 01a3 01       		.byte	0x1
 2623 01a4 FE01     		.2byte	0x1fe
 2624 01a6 83000000 		.4byte	0x83
 2625 01aa 00000000 		.4byte	.LFB6
 2626 01ae 1C000000 		.4byte	.LFE6-.LFB6
 2627 01b2 01       		.uleb128 0x1
 2628 01b3 9C       		.byte	0x9c
 2629 01b4 EB010000 		.4byte	0x1eb
 2630 01b8 0C       		.uleb128 0xc
 2631 01b9 A9010000 		.4byte	.LASF24
 2632 01bd 01       		.byte	0x1
 2633 01be 0002     		.2byte	0x200
 2634 01c0 6B000000 		.4byte	0x6b
 2635 01c4 5D000000 		.4byte	.LLST3
 2636 01c8 0C       		.uleb128 0xc
 2637 01c9 45040000 		.4byte	.LASF30
 2638 01cd 01       		.byte	0x1
 2639 01ce 0102     		.2byte	0x201
 2640 01d0 83000000 		.4byte	0x83
 2641 01d4 70000000 		.4byte	.LLST4
 2642 01d8 0D       		.uleb128 0xd
 2643 01d9 06000000 		.4byte	.LVL8
 2644 01dd 1E0C0000 		.4byte	0xc1e
 2645 01e1 0D       		.uleb128 0xd
 2646 01e2 12000000 		.4byte	.LVL10
 2647 01e6 290C0000 		.4byte	0xc29
 2648 01ea 00       		.byte	0
 2649 01eb 0A       		.uleb128 0xa
 2650 01ec 12060000 		.4byte	.LASF31
 2651 01f0 01       		.byte	0x1
 2652 01f1 3502     		.2byte	0x235
 2653 01f3 00000000 		.4byte	.LFB7
 2654 01f7 30000000 		.4byte	.LFE7-.LFB7
 2655 01fb 01       		.uleb128 0x1
 2656 01fc 9C       		.byte	0x9c
 2657 01fd 34020000 		.4byte	0x234
 2658 0201 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 103


 2659 0202 E9060000 		.4byte	.LASF32
 2660 0206 01       		.byte	0x1
 2661 0207 3502     		.2byte	0x235
 2662 0209 83000000 		.4byte	0x83
 2663 020d 8E000000 		.4byte	.LLST5
 2664 0211 0C       		.uleb128 0xc
 2665 0212 A9010000 		.4byte	.LASF24
 2666 0216 01       		.byte	0x1
 2667 0217 3702     		.2byte	0x237
 2668 0219 6B000000 		.4byte	0x6b
 2669 021d BA000000 		.4byte	.LLST6
 2670 0221 0D       		.uleb128 0xd
 2671 0222 08000000 		.4byte	.LVL13
 2672 0226 1E0C0000 		.4byte	0xc1e
 2673 022a 0D       		.uleb128 0xd
 2674 022b 24000000 		.4byte	.LVL15
 2675 022f 290C0000 		.4byte	0xc29
 2676 0233 00       		.byte	0
 2677 0234 10       		.uleb128 0x10
 2678 0235 C1060000 		.4byte	.LASF33
 2679 0239 01       		.byte	0x1
 2680 023a 9104     		.2byte	0x491
 2681 023c 00000000 		.4byte	.LFB10
 2682 0240 24000000 		.4byte	.LFE10-.LFB10
 2683 0244 01       		.uleb128 0x1
 2684 0245 9C       		.byte	0x9c
 2685 0246 0F       		.uleb128 0xf
 2686 0247 3D020000 		.4byte	.LASF35
 2687 024b 01       		.byte	0x1
 2688 024c B304     		.2byte	0x4b3
 2689 024e 83000000 		.4byte	0x83
 2690 0252 00000000 		.4byte	.LFB11
 2691 0256 10000000 		.4byte	.LFE11-.LFB11
 2692 025a 01       		.uleb128 0x1
 2693 025b 9C       		.byte	0x9c
 2694 025c 6F020000 		.4byte	0x26f
 2695 0260 11       		.uleb128 0x11
 2696 0261 90070000 		.4byte	.LASF36
 2697 0265 01       		.byte	0x1
 2698 0266 B504     		.2byte	0x4b5
 2699 0268 83000000 		.4byte	0x83
 2700 026c 01       		.uleb128 0x1
 2701 026d 50       		.byte	0x50
 2702 026e 00       		.byte	0
 2703 026f 10       		.uleb128 0x10
 2704 0270 A2060000 		.4byte	.LASF37
 2705 0274 01       		.byte	0x1
 2706 0275 6408     		.2byte	0x864
 2707 0277 00000000 		.4byte	.LFB14
 2708 027b 20000000 		.4byte	.LFE14-.LFB14
 2709 027f 01       		.uleb128 0x1
 2710 0280 9C       		.byte	0x9c
 2711 0281 12       		.uleb128 0x12
 2712 0282 00030000 		.4byte	.LASF88
 2713 0286 01       		.byte	0x1
 2714 0287 7608     		.2byte	0x876
 2715 0289 83000000 		.4byte	0x83
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 104


 2716 028d 00000000 		.4byte	.LFB15
 2717 0291 10000000 		.4byte	.LFE15-.LFB15
 2718 0295 01       		.uleb128 0x1
 2719 0296 9C       		.byte	0x9c
 2720 0297 10       		.uleb128 0x10
 2721 0298 1F020000 		.4byte	.LASF38
 2722 029c 01       		.byte	0x1
 2723 029d 8608     		.2byte	0x886
 2724 029f 00000000 		.4byte	.LFB16
 2725 02a3 0C000000 		.4byte	.LFE16-.LFB16
 2726 02a7 01       		.uleb128 0x1
 2727 02a8 9C       		.byte	0x9c
 2728 02a9 0F       		.uleb128 0xf
 2729 02aa 52030000 		.4byte	.LASF39
 2730 02ae 01       		.byte	0x1
 2731 02af A008     		.2byte	0x8a0
 2732 02b1 83000000 		.4byte	0x83
 2733 02b5 00000000 		.4byte	.LFB17
 2734 02b9 14000000 		.4byte	.LFE17-.LFB17
 2735 02bd 01       		.uleb128 0x1
 2736 02be 9C       		.byte	0x9c
 2737 02bf E2020000 		.4byte	0x2e2
 2738 02c3 0B       		.uleb128 0xb
 2739 02c4 75050000 		.4byte	.LASF40
 2740 02c8 01       		.byte	0x1
 2741 02c9 A008     		.2byte	0x8a0
 2742 02cb 83000000 		.4byte	0x83
 2743 02cf CD000000 		.4byte	.LLST7
 2744 02d3 11       		.uleb128 0x11
 2745 02d4 01040000 		.4byte	.LASF41
 2746 02d8 01       		.byte	0x1
 2747 02d9 A208     		.2byte	0x8a2
 2748 02db 83000000 		.4byte	0x83
 2749 02df 01       		.uleb128 0x1
 2750 02e0 50       		.byte	0x50
 2751 02e1 00       		.byte	0
 2752 02e2 0F       		.uleb128 0xf
 2753 02e3 61000000 		.4byte	.LASF42
 2754 02e7 01       		.byte	0x1
 2755 02e8 B708     		.2byte	0x8b7
 2756 02ea 83000000 		.4byte	0x83
 2757 02ee 00000000 		.4byte	.LFB18
 2758 02f2 10000000 		.4byte	.LFE18-.LFB18
 2759 02f6 01       		.uleb128 0x1
 2760 02f7 9C       		.byte	0x9c
 2761 02f8 0B030000 		.4byte	0x30b
 2762 02fc 11       		.uleb128 0x11
 2763 02fd 1E000000 		.4byte	.LASF43
 2764 0301 01       		.byte	0x1
 2765 0302 B908     		.2byte	0x8b9
 2766 0304 83000000 		.4byte	0x83
 2767 0308 01       		.uleb128 0x1
 2768 0309 50       		.byte	0x50
 2769 030a 00       		.byte	0
 2770 030b 0A       		.uleb128 0xa
 2771 030c 3A010000 		.4byte	.LASF44
 2772 0310 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 105


 2773 0311 CE08     		.2byte	0x8ce
 2774 0313 00000000 		.4byte	.LFB19
 2775 0317 0C000000 		.4byte	.LFE19-.LFB19
 2776 031b 01       		.uleb128 0x1
 2777 031c 9C       		.byte	0x9c
 2778 031d 30030000 		.4byte	0x330
 2779 0321 0E       		.uleb128 0xe
 2780 0322 53020000 		.4byte	.LASF45
 2781 0326 01       		.byte	0x1
 2782 0327 CE08     		.2byte	0x8ce
 2783 0329 83000000 		.4byte	0x83
 2784 032d 01       		.uleb128 0x1
 2785 032e 50       		.byte	0x50
 2786 032f 00       		.byte	0
 2787 0330 0A       		.uleb128 0xa
 2788 0331 32050000 		.4byte	.LASF46
 2789 0335 01       		.byte	0x1
 2790 0336 8509     		.2byte	0x985
 2791 0338 00000000 		.4byte	.LFB26
 2792 033c 14000000 		.4byte	.LFE26-.LFB26
 2793 0340 01       		.uleb128 0x1
 2794 0341 9C       		.byte	0x9c
 2795 0342 57030000 		.4byte	0x357
 2796 0346 0B       		.uleb128 0xb
 2797 0347 A0030000 		.4byte	.LASF47
 2798 034b 01       		.byte	0x1
 2799 034c 8509     		.2byte	0x985
 2800 034e 6B000000 		.4byte	0x6b
 2801 0352 EB000000 		.4byte	.LLST8
 2802 0356 00       		.byte	0
 2803 0357 0F       		.uleb128 0xf
 2804 0358 70010000 		.4byte	.LASF48
 2805 035c 01       		.byte	0x1
 2806 035d 9709     		.2byte	0x997
 2807 035f 6B000000 		.4byte	0x6b
 2808 0363 00000000 		.4byte	.LFB27
 2809 0367 18000000 		.4byte	.LFE27-.LFB27
 2810 036b 01       		.uleb128 0x1
 2811 036c 9C       		.byte	0x9c
 2812 036d 82030000 		.4byte	0x382
 2813 0371 0B       		.uleb128 0xb
 2814 0372 A0030000 		.4byte	.LASF47
 2815 0376 01       		.byte	0x1
 2816 0377 9709     		.2byte	0x997
 2817 0379 6B000000 		.4byte	0x6b
 2818 037d 0C010000 		.4byte	.LLST9
 2819 0381 00       		.byte	0
 2820 0382 0A       		.uleb128 0xa
 2821 0383 D4010000 		.4byte	.LASF49
 2822 0387 01       		.byte	0x1
 2823 0388 A709     		.2byte	0x9a7
 2824 038a 00000000 		.4byte	.LFB28
 2825 038e 14000000 		.4byte	.LFE28-.LFB28
 2826 0392 01       		.uleb128 0x1
 2827 0393 9C       		.byte	0x9c
 2828 0394 A9030000 		.4byte	0x3a9
 2829 0398 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 106


 2830 0399 A0030000 		.4byte	.LASF47
 2831 039d 01       		.byte	0x1
 2832 039e A709     		.2byte	0x9a7
 2833 03a0 6B000000 		.4byte	0x6b
 2834 03a4 2D010000 		.4byte	.LLST10
 2835 03a8 00       		.byte	0
 2836 03a9 0A       		.uleb128 0xa
 2837 03aa 42030000 		.4byte	.LASF50
 2838 03ae 01       		.byte	0x1
 2839 03af B509     		.2byte	0x9b5
 2840 03b1 00000000 		.4byte	.LFB29
 2841 03b5 14000000 		.4byte	.LFE29-.LFB29
 2842 03b9 01       		.uleb128 0x1
 2843 03ba 9C       		.byte	0x9c
 2844 03bb D0030000 		.4byte	0x3d0
 2845 03bf 0B       		.uleb128 0xb
 2846 03c0 A0030000 		.4byte	.LASF47
 2847 03c4 01       		.byte	0x1
 2848 03c5 B509     		.2byte	0x9b5
 2849 03c7 6B000000 		.4byte	0x6b
 2850 03cb 4E010000 		.4byte	.LLST11
 2851 03cf 00       		.byte	0
 2852 03d0 0A       		.uleb128 0xa
 2853 03d1 17040000 		.4byte	.LASF51
 2854 03d5 01       		.byte	0x1
 2855 03d6 C409     		.2byte	0x9c4
 2856 03d8 00000000 		.4byte	.LFB30
 2857 03dc 14000000 		.4byte	.LFE30-.LFB30
 2858 03e0 01       		.uleb128 0x1
 2859 03e1 9C       		.byte	0x9c
 2860 03e2 F7030000 		.4byte	0x3f7
 2861 03e6 0B       		.uleb128 0xb
 2862 03e7 A0030000 		.4byte	.LASF47
 2863 03eb 01       		.byte	0x1
 2864 03ec C409     		.2byte	0x9c4
 2865 03ee 6B000000 		.4byte	0x6b
 2866 03f2 6F010000 		.4byte	.LLST12
 2867 03f6 00       		.byte	0
 2868 03f7 0A       		.uleb128 0xa
 2869 03f8 13050000 		.4byte	.LASF52
 2870 03fc 01       		.byte	0x1
 2871 03fd D309     		.2byte	0x9d3
 2872 03ff 00000000 		.4byte	.LFB31
 2873 0403 04000000 		.4byte	.LFE31-.LFB31
 2874 0407 01       		.uleb128 0x1
 2875 0408 9C       		.byte	0x9c
 2876 0409 1C040000 		.4byte	0x41c
 2877 040d 0E       		.uleb128 0xe
 2878 040e 75050000 		.4byte	.LASF40
 2879 0412 01       		.byte	0x1
 2880 0413 D309     		.2byte	0x9d3
 2881 0415 6B000000 		.4byte	0x6b
 2882 0419 01       		.uleb128 0x1
 2883 041a 50       		.byte	0x50
 2884 041b 00       		.byte	0
 2885 041c 0A       		.uleb128 0xa
 2886 041d F1060000 		.4byte	.LASF53
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 107


 2887 0421 01       		.byte	0x1
 2888 0422 E204     		.2byte	0x4e2
 2889 0424 00000000 		.4byte	.LFB12
 2890 0428 38000000 		.4byte	.LFE12-.LFB12
 2891 042c 01       		.uleb128 0x1
 2892 042d 9C       		.byte	0x9c
 2893 042e 74040000 		.4byte	0x474
 2894 0432 0B       		.uleb128 0xb
 2895 0433 E9060000 		.4byte	.LASF32
 2896 0437 01       		.byte	0x1
 2897 0438 E204     		.2byte	0x4e2
 2898 043a 83000000 		.4byte	0x83
 2899 043e 90010000 		.4byte	.LLST13
 2900 0442 0C       		.uleb128 0xc
 2901 0443 A9010000 		.4byte	.LASF24
 2902 0447 01       		.byte	0x1
 2903 0448 E404     		.2byte	0x4e4
 2904 044a 6B000000 		.4byte	0x6b
 2905 044e E0010000 		.4byte	.LLST14
 2906 0452 0D       		.uleb128 0xd
 2907 0453 14000000 		.4byte	.LVL35
 2908 0457 1E0C0000 		.4byte	0xc1e
 2909 045b 0D       		.uleb128 0xd
 2910 045c 26000000 		.4byte	.LVL37
 2911 0460 290C0000 		.4byte	0xc29
 2912 0464 13       		.uleb128 0x13
 2913 0465 2E000000 		.4byte	.LVL40
 2914 0469 F7030000 		.4byte	0x3f7
 2915 046d 14       		.uleb128 0x14
 2916 046e 01       		.uleb128 0x1
 2917 046f 50       		.byte	0x50
 2918 0470 01       		.uleb128 0x1
 2919 0471 30       		.byte	0x30
 2920 0472 00       		.byte	0
 2921 0473 00       		.byte	0
 2922 0474 0F       		.uleb128 0xf
 2923 0475 C5030000 		.4byte	.LASF54
 2924 0479 01       		.byte	0x1
 2925 047a E708     		.2byte	0x8e7
 2926 047c D2000000 		.4byte	0xd2
 2927 0480 00000000 		.4byte	.LFB20
 2928 0484 20000000 		.4byte	.LFE20-.LFB20
 2929 0488 01       		.uleb128 0x1
 2930 0489 9C       		.byte	0x9c
 2931 048a DC040000 		.4byte	0x4dc
 2932 048e 0B       		.uleb128 0xb
 2933 048f A0030000 		.4byte	.LASF47
 2934 0493 01       		.byte	0x1
 2935 0494 E708     		.2byte	0x8e7
 2936 0496 6B000000 		.4byte	0x6b
 2937 049a F3010000 		.4byte	.LLST15
 2938 049e 0B       		.uleb128 0xb
 2939 049f 35040000 		.4byte	.LASF55
 2940 04a3 01       		.byte	0x1
 2941 04a4 E708     		.2byte	0x8e7
 2942 04a6 D2000000 		.4byte	0xd2
 2943 04aa 14020000 		.4byte	.LLST16
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 108


 2944 04ae 11       		.uleb128 0x11
 2945 04af 53000000 		.4byte	.LASF56
 2946 04b3 01       		.byte	0x1
 2947 04b4 E908     		.2byte	0x8e9
 2948 04b6 D2000000 		.4byte	0xd2
 2949 04ba 01       		.uleb128 0x1
 2950 04bb 50       		.byte	0x50
 2951 04bc 15       		.uleb128 0x15
 2952 04bd 00000000 		.4byte	.LASF57
 2953 04c1 01       		.byte	0x1
 2954 04c2 EA08     		.2byte	0x8ea
 2955 04c4 DC040000 		.4byte	0x4dc
 2956 04c8 00000020 		.4byte	0x20000000
 2957 04cc 13       		.uleb128 0x13
 2958 04cd 10000000 		.4byte	.LVL44
 2959 04d1 F7030000 		.4byte	0x3f7
 2960 04d5 14       		.uleb128 0x14
 2961 04d6 01       		.uleb128 0x1
 2962 04d7 50       		.byte	0x50
 2963 04d8 01       		.uleb128 0x1
 2964 04d9 30       		.byte	0x30
 2965 04da 00       		.byte	0
 2966 04db 00       		.byte	0
 2967 04dc 06       		.uleb128 0x6
 2968 04dd 04       		.byte	0x4
 2969 04de D2000000 		.4byte	0xd2
 2970 04e2 0F       		.uleb128 0xf
 2971 04e3 3E050000 		.4byte	.LASF58
 2972 04e7 01       		.byte	0x1
 2973 04e8 0909     		.2byte	0x909
 2974 04ea D2000000 		.4byte	0xd2
 2975 04ee 00000000 		.4byte	.LFB21
 2976 04f2 1C000000 		.4byte	.LFE21-.LFB21
 2977 04f6 01       		.uleb128 0x1
 2978 04f7 9C       		.byte	0x9c
 2979 04f8 2C050000 		.4byte	0x52c
 2980 04fc 0B       		.uleb128 0xb
 2981 04fd A0030000 		.4byte	.LASF47
 2982 0501 01       		.byte	0x1
 2983 0502 0909     		.2byte	0x909
 2984 0504 6B000000 		.4byte	0x6b
 2985 0508 40020000 		.4byte	.LLST17
 2986 050c 15       		.uleb128 0x15
 2987 050d 00000000 		.4byte	.LASF57
 2988 0511 01       		.byte	0x1
 2989 0512 0B09     		.2byte	0x90b
 2990 0514 DC040000 		.4byte	0x4dc
 2991 0518 00000020 		.4byte	0x20000000
 2992 051c 13       		.uleb128 0x13
 2993 051d 0E000000 		.4byte	.LVL50
 2994 0521 F7030000 		.4byte	0x3f7
 2995 0525 14       		.uleb128 0x14
 2996 0526 01       		.uleb128 0x1
 2997 0527 50       		.byte	0x50
 2998 0528 01       		.uleb128 0x1
 2999 0529 30       		.byte	0x30
 3000 052a 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 109


 3001 052b 00       		.byte	0
 3002 052c 0F       		.uleb128 0xf
 3003 052d 91030000 		.4byte	.LASF59
 3004 0531 01       		.byte	0x1
 3005 0532 1F09     		.2byte	0x91f
 3006 0534 D2000000 		.4byte	0xd2
 3007 0538 00000000 		.4byte	.LFB22
 3008 053c 22000000 		.4byte	.LFE22-.LFB22
 3009 0540 01       		.uleb128 0x1
 3010 0541 9C       		.byte	0x9c
 3011 0542 94050000 		.4byte	0x594
 3012 0546 0B       		.uleb128 0xb
 3013 0547 A0030000 		.4byte	.LASF47
 3014 054b 01       		.byte	0x1
 3015 054c 1F09     		.2byte	0x91f
 3016 054e 6B000000 		.4byte	0x6b
 3017 0552 61020000 		.4byte	.LLST18
 3018 0556 0B       		.uleb128 0xb
 3019 0557 35040000 		.4byte	.LASF55
 3020 055b 01       		.byte	0x1
 3021 055c 1F09     		.2byte	0x91f
 3022 055e D2000000 		.4byte	0xd2
 3023 0562 82020000 		.4byte	.LLST19
 3024 0566 11       		.uleb128 0x11
 3025 0567 53000000 		.4byte	.LASF56
 3026 056b 01       		.byte	0x1
 3027 056c 2109     		.2byte	0x921
 3028 056e D2000000 		.4byte	0xd2
 3029 0572 01       		.uleb128 0x1
 3030 0573 50       		.byte	0x50
 3031 0574 15       		.uleb128 0x15
 3032 0575 00000000 		.4byte	.LASF57
 3033 0579 01       		.byte	0x1
 3034 057a 2209     		.2byte	0x922
 3035 057c DC040000 		.4byte	0x4dc
 3036 0580 00000020 		.4byte	0x20000000
 3037 0584 13       		.uleb128 0x13
 3038 0585 10000000 		.4byte	.LVL54
 3039 0589 F7030000 		.4byte	0x3f7
 3040 058d 14       		.uleb128 0x14
 3041 058e 01       		.uleb128 0x1
 3042 058f 50       		.byte	0x50
 3043 0590 01       		.uleb128 0x1
 3044 0591 30       		.byte	0x30
 3045 0592 00       		.byte	0
 3046 0593 00       		.byte	0
 3047 0594 0F       		.uleb128 0xf
 3048 0595 DA040000 		.4byte	.LASF60
 3049 0599 01       		.byte	0x1
 3050 059a 3B09     		.2byte	0x93b
 3051 059c D2000000 		.4byte	0xd2
 3052 05a0 00000000 		.4byte	.LFB23
 3053 05a4 1E000000 		.4byte	.LFE23-.LFB23
 3054 05a8 01       		.uleb128 0x1
 3055 05a9 9C       		.byte	0x9c
 3056 05aa DE050000 		.4byte	0x5de
 3057 05ae 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 110


 3058 05af A0030000 		.4byte	.LASF47
 3059 05b3 01       		.byte	0x1
 3060 05b4 3B09     		.2byte	0x93b
 3061 05b6 6B000000 		.4byte	0x6b
 3062 05ba AE020000 		.4byte	.LLST20
 3063 05be 15       		.uleb128 0x15
 3064 05bf 00000000 		.4byte	.LASF57
 3065 05c3 01       		.byte	0x1
 3066 05c4 3D09     		.2byte	0x93d
 3067 05c6 DC040000 		.4byte	0x4dc
 3068 05ca 00000020 		.4byte	0x20000000
 3069 05ce 13       		.uleb128 0x13
 3070 05cf 0E000000 		.4byte	.LVL60
 3071 05d3 F7030000 		.4byte	0x3f7
 3072 05d7 14       		.uleb128 0x14
 3073 05d8 01       		.uleb128 0x1
 3074 05d9 50       		.byte	0x50
 3075 05da 01       		.uleb128 0x1
 3076 05db 30       		.byte	0x30
 3077 05dc 00       		.byte	0
 3078 05dd 00       		.byte	0
 3079 05de 0A       		.uleb128 0xa
 3080 05df 8C040000 		.4byte	.LASF61
 3081 05e3 01       		.byte	0x1
 3082 05e4 4E09     		.2byte	0x94e
 3083 05e6 00000000 		.4byte	.LFB24
 3084 05ea 4C000000 		.4byte	.LFE24-.LFB24
 3085 05ee 01       		.uleb128 0x1
 3086 05ef 9C       		.byte	0x9c
 3087 05f0 7D060000 		.4byte	0x67d
 3088 05f4 0B       		.uleb128 0xb
 3089 05f5 A0030000 		.4byte	.LASF47
 3090 05f9 01       		.byte	0x1
 3091 05fa 4E09     		.2byte	0x94e
 3092 05fc 6B000000 		.4byte	0x6b
 3093 0600 CF020000 		.4byte	.LLST21
 3094 0604 0B       		.uleb128 0xb
 3095 0605 A7030000 		.4byte	.LASF62
 3096 0609 01       		.byte	0x1
 3097 060a 4E09     		.2byte	0x94e
 3098 060c 6B000000 		.4byte	0x6b
 3099 0610 F0020000 		.4byte	.LLST22
 3100 0614 0C       		.uleb128 0xc
 3101 0615 A9010000 		.4byte	.LASF24
 3102 0619 01       		.byte	0x1
 3103 061a 5009     		.2byte	0x950
 3104 061c 6B000000 		.4byte	0x6b
 3105 0620 11030000 		.4byte	.LLST23
 3106 0624 0C       		.uleb128 0xc
 3107 0625 19020000 		.4byte	.LASF63
 3108 0629 01       		.byte	0x1
 3109 062a 5109     		.2byte	0x951
 3110 062c 83000000 		.4byte	0x83
 3111 0630 24030000 		.4byte	.LLST24
 3112 0634 0C       		.uleb128 0xc
 3113 0635 9C020000 		.4byte	.LASF64
 3114 0639 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 111


 3115 063a 5209     		.2byte	0x952
 3116 063c 83000000 		.4byte	0x83
 3117 0640 37030000 		.4byte	.LLST25
 3118 0644 16       		.uleb128 0x16
 3119 0645 10000000 		.4byte	.LVL63
 3120 0649 F7030000 		.4byte	0x3f7
 3121 064d 57060000 		.4byte	0x657
 3122 0651 14       		.uleb128 0x14
 3123 0652 01       		.uleb128 0x1
 3124 0653 50       		.byte	0x50
 3125 0654 01       		.uleb128 0x1
 3126 0655 30       		.byte	0x30
 3127 0656 00       		.byte	0
 3128 0657 16       		.uleb128 0x16
 3129 0658 1A000000 		.4byte	.LVL64
 3130 065c F7030000 		.4byte	0x3f7
 3131 0660 6A060000 		.4byte	0x66a
 3132 0664 14       		.uleb128 0x14
 3133 0665 01       		.uleb128 0x1
 3134 0666 50       		.byte	0x50
 3135 0667 01       		.uleb128 0x1
 3136 0668 30       		.byte	0x30
 3137 0669 00       		.byte	0
 3138 066a 0D       		.uleb128 0xd
 3139 066b 26000000 		.4byte	.LVL66
 3140 066f 1E0C0000 		.4byte	0xc1e
 3141 0673 0D       		.uleb128 0xd
 3142 0674 46000000 		.4byte	.LVL72
 3143 0678 290C0000 		.4byte	0xc29
 3144 067c 00       		.byte	0
 3145 067d 0F       		.uleb128 0xf
 3146 067e 70020000 		.4byte	.LASF65
 3147 0682 01       		.byte	0x1
 3148 0683 7009     		.2byte	0x970
 3149 0685 6B000000 		.4byte	0x6b
 3150 0689 00000000 		.4byte	.LFB25
 3151 068d 2C000000 		.4byte	.LFE25-.LFB25
 3152 0691 01       		.uleb128 0x1
 3153 0692 9C       		.byte	0x9c
 3154 0693 C7060000 		.4byte	0x6c7
 3155 0697 0B       		.uleb128 0xb
 3156 0698 A0030000 		.4byte	.LASF47
 3157 069c 01       		.byte	0x1
 3158 069d 7009     		.2byte	0x970
 3159 069f 6B000000 		.4byte	0x6b
 3160 06a3 6B030000 		.4byte	.LLST26
 3161 06a7 0C       		.uleb128 0xc
 3162 06a8 A7030000 		.4byte	.LASF62
 3163 06ac 01       		.byte	0x1
 3164 06ad 7209     		.2byte	0x972
 3165 06af 6B000000 		.4byte	0x6b
 3166 06b3 8C030000 		.4byte	.LLST27
 3167 06b7 13       		.uleb128 0x13
 3168 06b8 0E000000 		.4byte	.LVL76
 3169 06bc F7030000 		.4byte	0x3f7
 3170 06c0 14       		.uleb128 0x14
 3171 06c1 01       		.uleb128 0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 112


 3172 06c2 50       		.byte	0x50
 3173 06c3 01       		.uleb128 0x1
 3174 06c4 30       		.byte	0x30
 3175 06c5 00       		.byte	0
 3176 06c6 00       		.byte	0
 3177 06c7 10       		.uleb128 0x10
 3178 06c8 47010000 		.4byte	.LASF66
 3179 06cc 01       		.byte	0x1
 3180 06cd EB09     		.2byte	0x9eb
 3181 06cf 00000000 		.4byte	.LFB32
 3182 06d3 18000000 		.4byte	.LFE32-.LFB32
 3183 06d7 01       		.uleb128 0x1
 3184 06d8 9C       		.byte	0x9c
 3185 06d9 0A       		.uleb128 0xa
 3186 06da 68060000 		.4byte	.LASF67
 3187 06de 01       		.byte	0x1
 3188 06df FF09     		.2byte	0x9ff
 3189 06e1 00000000 		.4byte	.LFB33
 3190 06e5 30000000 		.4byte	.LFE33-.LFB33
 3191 06e9 01       		.uleb128 0x1
 3192 06ea 9C       		.byte	0x9c
 3193 06eb 12070000 		.4byte	0x712
 3194 06ef 0B       		.uleb128 0xb
 3195 06f0 E9040000 		.4byte	.LASF68
 3196 06f4 01       		.byte	0x1
 3197 06f5 FF09     		.2byte	0x9ff
 3198 06f7 83000000 		.4byte	0x83
 3199 06fb 9F030000 		.4byte	.LLST28
 3200 06ff 0D       		.uleb128 0xd
 3201 0700 0E000000 		.4byte	.LVL81
 3202 0704 340C0000 		.4byte	0xc34
 3203 0708 0D       		.uleb128 0xd
 3204 0709 26000000 		.4byte	.LVL83
 3205 070d 340C0000 		.4byte	0xc34
 3206 0711 00       		.byte	0
 3207 0712 0A       		.uleb128 0xa
 3208 0713 6B050000 		.4byte	.LASF69
 3209 0717 01       		.byte	0x1
 3210 0718 160A     		.2byte	0xa16
 3211 071a 00000000 		.4byte	.LFB34
 3212 071e 14000000 		.4byte	.LFE34-.LFB34
 3213 0722 01       		.uleb128 0x1
 3214 0723 9C       		.byte	0x9c
 3215 0724 42070000 		.4byte	0x742
 3216 0728 0B       		.uleb128 0xb
 3217 0729 4F070000 		.4byte	.LASF70
 3218 072d 01       		.byte	0x1
 3219 072e 160A     		.2byte	0xa16
 3220 0730 77000000 		.4byte	0x77
 3221 0734 BD030000 		.4byte	.LLST29
 3222 0738 0D       		.uleb128 0xd
 3223 0739 0C000000 		.4byte	.LVL87
 3224 073d 340C0000 		.4byte	0xc34
 3225 0741 00       		.byte	0
 3226 0742 0A       		.uleb128 0xa
 3227 0743 B0030000 		.4byte	.LASF71
 3228 0747 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 113


 3229 0748 6F02     		.2byte	0x26f
 3230 074a 00000000 		.4byte	.LFB8
 3231 074e 64010000 		.4byte	.LFE8-.LFB8
 3232 0752 01       		.uleb128 0x1
 3233 0753 9C       		.byte	0x9c
 3234 0754 43080000 		.4byte	0x843
 3235 0758 0B       		.uleb128 0xb
 3236 0759 98010000 		.4byte	.LASF72
 3237 075d 01       		.byte	0x1
 3238 075e 6F02     		.2byte	0x26f
 3239 0760 83000000 		.4byte	0x83
 3240 0764 DE030000 		.4byte	.LLST30
 3241 0768 0C       		.uleb128 0xc
 3242 0769 0F000000 		.4byte	.LASF73
 3243 076d 01       		.byte	0x1
 3244 076e 7502     		.2byte	0x275
 3245 0770 6B000000 		.4byte	0x6b
 3246 0774 33040000 		.4byte	.LLST31
 3247 0778 0C       		.uleb128 0xc
 3248 0779 3D040000 		.4byte	.LASF74
 3249 077d 01       		.byte	0x1
 3250 077e 7602     		.2byte	0x276
 3251 0780 6B000000 		.4byte	0x6b
 3252 0784 72040000 		.4byte	.LLST32
 3253 0788 0C       		.uleb128 0xc
 3254 0789 1F070000 		.4byte	.LASF75
 3255 078d 01       		.byte	0x1
 3256 078e 7702     		.2byte	0x277
 3257 0790 6B000000 		.4byte	0x6b
 3258 0794 B1040000 		.4byte	.LLST33
 3259 0798 0C       		.uleb128 0xc
 3260 0799 6F000000 		.4byte	.LASF76
 3261 079d 01       		.byte	0x1
 3262 079e 7802     		.2byte	0x278
 3263 07a0 6B000000 		.4byte	0x6b
 3264 07a4 C4040000 		.4byte	.LLST34
 3265 07a8 0C       		.uleb128 0xc
 3266 07a9 51060000 		.4byte	.LASF77
 3267 07ad 01       		.byte	0x1
 3268 07ae 7902     		.2byte	0x279
 3269 07b0 6B000000 		.4byte	0x6b
 3270 07b4 E3040000 		.4byte	.LLST35
 3271 07b8 0C       		.uleb128 0xc
 3272 07b9 A9010000 		.4byte	.LASF24
 3273 07bd 01       		.byte	0x1
 3274 07be 8402     		.2byte	0x284
 3275 07c0 6B000000 		.4byte	0x6b
 3276 07c4 15050000 		.4byte	.LLST36
 3277 07c8 0D       		.uleb128 0xd
 3278 07c9 10000000 		.4byte	.LVL89
 3279 07cd 1E0C0000 		.4byte	0xc1e
 3280 07d1 16       		.uleb128 0x16
 3281 07d2 B0000000 		.4byte	.LVL107
 3282 07d6 340C0000 		.4byte	0xc34
 3283 07da E4070000 		.4byte	0x7e4
 3284 07de 14       		.uleb128 0x14
 3285 07df 01       		.uleb128 0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 114


 3286 07e0 50       		.byte	0x50
 3287 07e1 01       		.uleb128 0x1
 3288 07e2 35       		.byte	0x35
 3289 07e3 00       		.byte	0
 3290 07e4 16       		.uleb128 0x16
 3291 07e5 CE000000 		.4byte	.LVL110
 3292 07e9 340C0000 		.4byte	0xc34
 3293 07ed F7070000 		.4byte	0x7f7
 3294 07f1 14       		.uleb128 0x14
 3295 07f2 01       		.uleb128 0x1
 3296 07f3 50       		.byte	0x50
 3297 07f4 01       		.uleb128 0x1
 3298 07f5 35       		.byte	0x35
 3299 07f6 00       		.byte	0
 3300 07f7 16       		.uleb128 0x16
 3301 07f8 EE000000 		.4byte	.LVL116
 3302 07fc 12070000 		.4byte	0x712
 3303 0800 0A080000 		.4byte	0x80a
 3304 0804 14       		.uleb128 0x14
 3305 0805 01       		.uleb128 0x1
 3306 0806 50       		.byte	0x50
 3307 0807 01       		.uleb128 0x1
 3308 0808 35       		.byte	0x35
 3309 0809 00       		.byte	0
 3310 080a 16       		.uleb128 0x16
 3311 080b 00010000 		.4byte	.LVL117
 3312 080f 340C0000 		.4byte	0xc34
 3313 0813 1D080000 		.4byte	0x81d
 3314 0817 14       		.uleb128 0x14
 3315 0818 01       		.uleb128 0x1
 3316 0819 50       		.byte	0x50
 3317 081a 01       		.uleb128 0x1
 3318 081b 35       		.byte	0x35
 3319 081c 00       		.byte	0
 3320 081d 16       		.uleb128 0x16
 3321 081e 08010000 		.4byte	.LVL119
 3322 0822 F7030000 		.4byte	0x3f7
 3323 0826 30080000 		.4byte	0x830
 3324 082a 14       		.uleb128 0x14
 3325 082b 01       		.uleb128 0x1
 3326 082c 50       		.byte	0x50
 3327 082d 01       		.uleb128 0x1
 3328 082e 30       		.byte	0x30
 3329 082f 00       		.byte	0
 3330 0830 13       		.uleb128 0x13
 3331 0831 0E010000 		.4byte	.LVL120
 3332 0835 290C0000 		.4byte	0xc29
 3333 0839 14       		.uleb128 0x14
 3334 083a 01       		.uleb128 0x1
 3335 083b 50       		.byte	0x50
 3336 083c 04       		.uleb128 0x4
 3337 083d 91       		.byte	0x91
 3338 083e 5C       		.sleb128 -36
 3339 083f 94       		.byte	0x94
 3340 0840 01       		.byte	0x1
 3341 0841 00       		.byte	0
 3342 0842 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 115


 3343 0843 0F       		.uleb128 0xf
 3344 0844 5A050000 		.4byte	.LASF78
 3345 0848 01       		.byte	0x1
 3346 0849 0304     		.2byte	0x403
 3347 084b A4000000 		.4byte	0xa4
 3348 084f 00000000 		.4byte	.LFB9
 3349 0853 54000000 		.4byte	.LFE9-.LFB9
 3350 0857 01       		.uleb128 0x1
 3351 0858 9C       		.byte	0x9c
 3352 0859 9A080000 		.4byte	0x89a
 3353 085d 0B       		.uleb128 0xb
 3354 085e DF060000 		.4byte	.LASF79
 3355 0862 01       		.byte	0x1
 3356 0863 0304     		.2byte	0x403
 3357 0865 83000000 		.4byte	0x83
 3358 0869 41050000 		.4byte	.LLST37
 3359 086d 0C       		.uleb128 0xc
 3360 086e 01040000 		.4byte	.LASF41
 3361 0872 01       		.byte	0x1
 3362 0873 0504     		.2byte	0x405
 3363 0875 A4000000 		.4byte	0xa4
 3364 0879 5F050000 		.4byte	.LLST38
 3365 087d 16       		.uleb128 0x16
 3366 087e 2E000000 		.4byte	.LVL125
 3367 0882 12070000 		.4byte	0x712
 3368 0886 90080000 		.4byte	0x890
 3369 088a 14       		.uleb128 0x14
 3370 088b 01       		.uleb128 0x1
 3371 088c 50       		.byte	0x50
 3372 088d 01       		.uleb128 0x1
 3373 088e 31       		.byte	0x31
 3374 088f 00       		.byte	0
 3375 0890 0D       		.uleb128 0xd
 3376 0891 32000000 		.4byte	.LVL126
 3377 0895 46020000 		.4byte	0x246
 3378 0899 00       		.byte	0
 3379 089a 0A       		.uleb128 0xa
 3380 089b B9040000 		.4byte	.LASF80
 3381 089f 01       		.byte	0x1
 3382 08a0 4608     		.2byte	0x846
 3383 08a2 00000000 		.4byte	.LFB13
 3384 08a6 44000000 		.4byte	.LFE13-.LFB13
 3385 08aa 01       		.uleb128 0x1
 3386 08ab 9C       		.byte	0x9c
 3387 08ac DF080000 		.4byte	0x8df
 3388 08b0 0B       		.uleb128 0xb
 3389 08b1 09050000 		.4byte	.LASF81
 3390 08b5 01       		.byte	0x1
 3391 08b6 4608     		.2byte	0x846
 3392 08b8 83000000 		.4byte	0x83
 3393 08bc 7E050000 		.4byte	.LLST39
 3394 08c0 16       		.uleb128 0x16
 3395 08c1 2E000000 		.4byte	.LVL133
 3396 08c5 12070000 		.4byte	0x712
 3397 08c9 D5080000 		.4byte	0x8d5
 3398 08cd 14       		.uleb128 0x14
 3399 08ce 01       		.uleb128 0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 116


 3400 08cf 50       		.byte	0x50
 3401 08d0 03       		.uleb128 0x3
 3402 08d1 0A       		.byte	0xa
 3403 08d2 E803     		.2byte	0x3e8
 3404 08d4 00       		.byte	0
 3405 08d5 0D       		.uleb128 0xd
 3406 08d6 32000000 		.4byte	.LVL134
 3407 08da 97020000 		.4byte	0x297
 3408 08de 00       		.byte	0
 3409 08df 17       		.uleb128 0x17
 3410 08e0 9D010000 		.4byte	.LASF82
 3411 08e4 01       		.byte	0x1
 3412 08e5 240A     		.2byte	0xa24
 3413 08e7 00000000 		.4byte	.LFB35
 3414 08eb 4C000000 		.4byte	.LFE35-.LFB35
 3415 08ef 01       		.uleb128 0x1
 3416 08f0 9C       		.byte	0x9c
 3417 08f1 06090000 		.4byte	0x906
 3418 08f5 0B       		.uleb128 0xb
 3419 08f6 98010000 		.4byte	.LASF72
 3420 08fa 01       		.byte	0x1
 3421 08fb 240A     		.2byte	0xa24
 3422 08fd 83000000 		.4byte	0x83
 3423 0901 AA050000 		.4byte	.LLST40
 3424 0905 00       		.byte	0
 3425 0906 10       		.uleb128 0x10
 3426 0907 D1060000 		.4byte	.LASF83
 3427 090b 01       		.byte	0x1
 3428 090c 900A     		.2byte	0xa90
 3429 090e 00000000 		.4byte	.LFB39
 3430 0912 10000000 		.4byte	.LFE39-.LFB39
 3431 0916 01       		.uleb128 0x1
 3432 0917 9C       		.byte	0x9c
 3433 0918 10       		.uleb128 0x10
 3434 0919 57010000 		.4byte	.LASF84
 3435 091d 01       		.byte	0x1
 3436 091e A00A     		.2byte	0xaa0
 3437 0920 00000000 		.4byte	.LFB40
 3438 0924 10000000 		.4byte	.LFE40-.LFB40
 3439 0928 01       		.uleb128 0x1
 3440 0929 9C       		.byte	0x9c
 3441 092a 0A       		.uleb128 0xa
 3442 092b 8E050000 		.4byte	.LASF85
 3443 092f 01       		.byte	0x1
 3444 0930 7F0A     		.2byte	0xa7f
 3445 0932 00000000 		.4byte	.LFB38
 3446 0936 18000000 		.4byte	.LFE38-.LFB38
 3447 093a 01       		.uleb128 0x1
 3448 093b 9C       		.byte	0x9c
 3449 093c 4A090000 		.4byte	0x94a
 3450 0940 0D       		.uleb128 0xd
 3451 0941 06000000 		.4byte	.LVL139
 3452 0945 18090000 		.4byte	0x918
 3453 0949 00       		.byte	0
 3454 094a 10       		.uleb128 0x10
 3455 094b 88060000 		.4byte	.LASF86
 3456 094f 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 117


 3457 0950 B00A     		.2byte	0xab0
 3458 0952 00000000 		.4byte	.LFB41
 3459 0956 10000000 		.4byte	.LFE41-.LFB41
 3460 095a 01       		.uleb128 0x1
 3461 095b 9C       		.byte	0x9c
 3462 095c 0A       		.uleb128 0xa
 3463 095d 63070000 		.4byte	.LASF87
 3464 0961 01       		.byte	0x1
 3465 0962 C10A     		.2byte	0xac1
 3466 0964 00000000 		.4byte	.LFB42
 3467 0968 10000000 		.4byte	.LFE42-.LFB42
 3468 096c 01       		.uleb128 0x1
 3469 096d 9C       		.byte	0x9c
 3470 096e 83090000 		.4byte	0x983
 3471 0972 0B       		.uleb128 0xb
 3472 0973 9C020000 		.4byte	.LASF64
 3473 0977 01       		.byte	0x1
 3474 0978 C10A     		.2byte	0xac1
 3475 097a 83000000 		.4byte	0x83
 3476 097e CB050000 		.4byte	.LLST41
 3477 0982 00       		.byte	0
 3478 0983 12       		.uleb128 0x12
 3479 0984 B8010000 		.4byte	.LASF89
 3480 0988 01       		.byte	0x1
 3481 0989 D10A     		.2byte	0xad1
 3482 098b 83000000 		.4byte	0x83
 3483 098f 00000000 		.4byte	.LFB43
 3484 0993 10000000 		.4byte	.LFE43-.LFB43
 3485 0997 01       		.uleb128 0x1
 3486 0998 9C       		.byte	0x9c
 3487 0999 12       		.uleb128 0x12
 3488 099a 6C040000 		.4byte	.LASF90
 3489 099e 01       		.byte	0x1
 3490 099f E10A     		.2byte	0xae1
 3491 09a1 83000000 		.4byte	0x83
 3492 09a5 00000000 		.4byte	.LFB44
 3493 09a9 10000000 		.4byte	.LFE44-.LFB44
 3494 09ad 01       		.uleb128 0x1
 3495 09ae 9C       		.byte	0x9c
 3496 09af 0A       		.uleb128 0xa
 3497 09b0 79030000 		.4byte	.LASF91
 3498 09b4 01       		.byte	0x1
 3499 09b5 010B     		.2byte	0xb01
 3500 09b7 00000000 		.4byte	.LFB45
 3501 09bb 20000000 		.4byte	.LFE45-.LFB45
 3502 09bf 01       		.uleb128 0x1
 3503 09c0 9C       		.byte	0x9c
 3504 09c1 D4090000 		.4byte	0x9d4
 3505 09c5 0E       		.uleb128 0xe
 3506 09c6 A2020000 		.4byte	.LASF92
 3507 09ca 01       		.byte	0x1
 3508 09cb 010B     		.2byte	0xb01
 3509 09cd 83000000 		.4byte	0x83
 3510 09d1 01       		.uleb128 0x1
 3511 09d2 50       		.byte	0x50
 3512 09d3 00       		.byte	0
 3513 09d4 12       		.uleb128 0x12
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 118


 3514 09d5 70060000 		.4byte	.LASF93
 3515 09d9 01       		.byte	0x1
 3516 09da 1A0B     		.2byte	0xb1a
 3517 09dc 83000000 		.4byte	0x83
 3518 09e0 00000000 		.4byte	.LFB46
 3519 09e4 10000000 		.4byte	.LFE46-.LFB46
 3520 09e8 01       		.uleb128 0x1
 3521 09e9 9C       		.byte	0x9c
 3522 09ea 12       		.uleb128 0x12
 3523 09eb BC020000 		.4byte	.LASF94
 3524 09ef 01       		.byte	0x1
 3525 09f0 310B     		.2byte	0xb31
 3526 09f2 83000000 		.4byte	0x83
 3527 09f6 00000000 		.4byte	.LFB47
 3528 09fa 10000000 		.4byte	.LFE47-.LFB47
 3529 09fe 01       		.uleb128 0x1
 3530 09ff 9C       		.byte	0x9c
 3531 0a00 18       		.uleb128 0x18
 3532 0a01 76070000 		.4byte	.LASF118
 3533 0a05 01       		.byte	0x1
 3534 0a06 860B     		.2byte	0xb86
 3535 0a08 00000000 		.4byte	.LFB51
 3536 0a0c 28000000 		.4byte	.LFE51-.LFB51
 3537 0a10 01       		.uleb128 0x1
 3538 0a11 9C       		.byte	0x9c
 3539 0a12 2E0A0000 		.4byte	0xa2e
 3540 0a16 19       		.uleb128 0x19
 3541 0a17 6900     		.ascii	"i\000"
 3542 0a19 01       		.byte	0x1
 3543 0a1a 880B     		.2byte	0xb88
 3544 0a1c 83000000 		.4byte	0x83
 3545 0a20 EC050000 		.4byte	.LLST42
 3546 0a24 0D       		.uleb128 0xd
 3547 0a25 06000000 		.4byte	.LVL143
 3548 0a29 EA090000 		.4byte	0x9ea
 3549 0a2d 00       		.byte	0
 3550 0a2e 10       		.uleb128 0x10
 3551 0a2f DF020000 		.4byte	.LASF95
 3552 0a33 01       		.byte	0x1
 3553 0a34 3E0B     		.2byte	0xb3e
 3554 0a36 00000000 		.4byte	.LFB48
 3555 0a3a 0C000000 		.4byte	.LFE48-.LFB48
 3556 0a3e 01       		.uleb128 0x1
 3557 0a3f 9C       		.byte	0x9c
 3558 0a40 17       		.uleb128 0x17
 3559 0a41 8E020000 		.4byte	.LASF96
 3560 0a45 01       		.byte	0x1
 3561 0a46 610A     		.2byte	0xa61
 3562 0a48 00000000 		.4byte	.LFB37
 3563 0a4c 44000000 		.4byte	.LFE37-.LFB37
 3564 0a50 01       		.uleb128 0x1
 3565 0a51 9C       		.byte	0x9c
 3566 0a52 A60A0000 		.4byte	0xaa6
 3567 0a56 19       		.uleb128 0x19
 3568 0a57 6900     		.ascii	"i\000"
 3569 0a59 01       		.byte	0x1
 3570 0a5a 630A     		.2byte	0xa63
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 119


 3571 0a5c 83000000 		.4byte	0x83
 3572 0a60 0A060000 		.4byte	.LLST43
 3573 0a64 16       		.uleb128 0x16
 3574 0a65 1C000000 		.4byte	.LVL153
 3575 0a69 74040000 		.4byte	0x474
 3576 0a6d 800A0000 		.4byte	0xa80
 3577 0a71 14       		.uleb128 0x14
 3578 0a72 01       		.uleb128 0x1
 3579 0a73 50       		.byte	0x50
 3580 0a74 01       		.uleb128 0x1
 3581 0a75 3F       		.byte	0x3f
 3582 0a76 14       		.uleb128 0x14
 3583 0a77 01       		.uleb128 0x1
 3584 0a78 51       		.byte	0x51
 3585 0a79 05       		.uleb128 0x5
 3586 0a7a 03       		.byte	0x3
 3587 0a7b 00000000 		.4byte	CySysTickServiceCallbacks
 3588 0a7f 00       		.byte	0
 3589 0a80 16       		.uleb128 0x16
 3590 0a81 22000000 		.4byte	.LVL154
 3591 0a85 AF090000 		.4byte	0x9af
 3592 0a89 930A0000 		.4byte	0xa93
 3593 0a8d 14       		.uleb128 0x14
 3594 0a8e 01       		.uleb128 0x1
 3595 0a8f 50       		.byte	0x50
 3596 0a90 01       		.uleb128 0x1
 3597 0a91 31       		.byte	0x31
 3598 0a92 00       		.byte	0
 3599 0a93 0D       		.uleb128 0xd
 3600 0a94 32000000 		.4byte	.LVL156
 3601 0a98 5C090000 		.4byte	0x95c
 3602 0a9c 0D       		.uleb128 0xd
 3603 0a9d 36000000 		.4byte	.LVL157
 3604 0aa1 2E0A0000 		.4byte	0xa2e
 3605 0aa5 00       		.byte	0
 3606 0aa6 0A       		.uleb128 0xa
 3607 0aa7 F2030000 		.4byte	.LASF97
 3608 0aab 01       		.byte	0x1
 3609 0aac 440A     		.2byte	0xa44
 3610 0aae 00000000 		.4byte	.LFB36
 3611 0ab2 20000000 		.4byte	.LFE36-.LFB36
 3612 0ab6 01       		.uleb128 0x1
 3613 0ab7 9C       		.byte	0x9c
 3614 0ab8 CF0A0000 		.4byte	0xacf
 3615 0abc 0D       		.uleb128 0xd
 3616 0abd 0E000000 		.4byte	.LVL158
 3617 0ac1 400A0000 		.4byte	0xa40
 3618 0ac5 0D       		.uleb128 0xd
 3619 0ac6 18000000 		.4byte	.LVL159
 3620 0aca 2A090000 		.4byte	0x92a
 3621 0ace 00       		.byte	0
 3622 0acf 0F       		.uleb128 0xf
 3623 0ad0 29060000 		.4byte	.LASF98
 3624 0ad4 01       		.byte	0x1
 3625 0ad5 610B     		.2byte	0xb61
 3626 0ad7 F3000000 		.4byte	0xf3
 3627 0adb 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 120


 3628 0adf 10000000 		.4byte	.LFE49-.LFB49
 3629 0ae3 01       		.uleb128 0x1
 3630 0ae4 9C       		.byte	0x9c
 3631 0ae5 160B0000 		.4byte	0xb16
 3632 0ae9 0B       		.uleb128 0xb
 3633 0aea A0030000 		.4byte	.LASF47
 3634 0aee 01       		.byte	0x1
 3635 0aef 610B     		.2byte	0xb61
 3636 0af1 83000000 		.4byte	0x83
 3637 0af5 29060000 		.4byte	.LLST44
 3638 0af9 0E       		.uleb128 0xe
 3639 0afa 52040000 		.4byte	.LASF99
 3640 0afe 01       		.byte	0x1
 3641 0aff 610B     		.2byte	0xb61
 3642 0b01 F3000000 		.4byte	0xf3
 3643 0b05 01       		.uleb128 0x1
 3644 0b06 51       		.byte	0x51
 3645 0b07 11       		.uleb128 0x11
 3646 0b08 5A000000 		.4byte	.LASF100
 3647 0b0c 01       		.byte	0x1
 3648 0b0d 630B     		.2byte	0xb63
 3649 0b0f F3000000 		.4byte	0xf3
 3650 0b13 01       		.uleb128 0x1
 3651 0b14 50       		.byte	0x50
 3652 0b15 00       		.byte	0
 3653 0b16 0F       		.uleb128 0xf
 3654 0b17 E1010000 		.4byte	.LASF101
 3655 0b1b 01       		.byte	0x1
 3656 0b1c 790B     		.2byte	0xb79
 3657 0b1e F3000000 		.4byte	0xf3
 3658 0b22 00000000 		.4byte	.LFB50
 3659 0b26 0C000000 		.4byte	.LFE50-.LFB50
 3660 0b2a 01       		.uleb128 0x1
 3661 0b2b 9C       		.byte	0x9c
 3662 0b2c 410B0000 		.4byte	0xb41
 3663 0b30 0B       		.uleb128 0xb
 3664 0b31 A0030000 		.4byte	.LASF47
 3665 0b35 01       		.byte	0x1
 3666 0b36 790B     		.2byte	0xb79
 3667 0b38 83000000 		.4byte	0x83
 3668 0b3c 4A060000 		.4byte	.LLST45
 3669 0b40 00       		.byte	0
 3670 0b41 0A       		.uleb128 0xa
 3671 0b42 AE020000 		.4byte	.LASF102
 3672 0b46 01       		.byte	0x1
 3673 0b47 A60B     		.2byte	0xba6
 3674 0b49 00000000 		.4byte	.LFB52
 3675 0b4d 70000000 		.4byte	.LFE52-.LFB52
 3676 0b51 01       		.uleb128 0x1
 3677 0b52 9C       		.byte	0x9c
 3678 0b53 660B0000 		.4byte	0xb66
 3679 0b57 0E       		.uleb128 0xe
 3680 0b58 5F060000 		.4byte	.LASF103
 3681 0b5c 01       		.byte	0x1
 3682 0b5d A60B     		.2byte	0xba6
 3683 0b5f 660B0000 		.4byte	0xb66
 3684 0b63 01       		.uleb128 0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 121


 3685 0b64 50       		.byte	0x50
 3686 0b65 00       		.byte	0
 3687 0b66 06       		.uleb128 0x6
 3688 0b67 04       		.byte	0x4
 3689 0b68 83000000 		.4byte	0x83
 3690 0b6c 1A       		.uleb128 0x1a
 3691 0b6d F3000000 		.4byte	0xf3
 3692 0b71 7C0B0000 		.4byte	0xb7c
 3693 0b75 1B       		.uleb128 0x1b
 3694 0b76 EC000000 		.4byte	0xec
 3695 0b7a 04       		.byte	0x4
 3696 0b7b 00       		.byte	0
 3697 0b7c 1C       		.uleb128 0x1c
 3698 0b7d 3E060000 		.4byte	.LASF104
 3699 0b81 01       		.byte	0x1
 3700 0b82 22       		.byte	0x22
 3701 0b83 6C0B0000 		.4byte	0xb6c
 3702 0b87 05       		.uleb128 0x5
 3703 0b88 03       		.byte	0x3
 3704 0b89 00000000 		.4byte	CySysTickCallbacks
 3705 0b8d 1D       		.uleb128 0x1d
 3706 0b8e 7E040000 		.4byte	.LASF105
 3707 0b92 01       		.byte	0x1
 3708 0b93 1B       		.byte	0x1b
 3709 0b94 83000000 		.4byte	0x83
 3710 0b98 05       		.uleb128 0x5
 3711 0b99 03       		.byte	0x3
 3712 0b9a 00000000 		.4byte	cydelayFreqHz
 3713 0b9e 1D       		.uleb128 0x1d
 3714 0b9f FC010000 		.4byte	.LASF106
 3715 0ba3 01       		.byte	0x1
 3716 0ba4 1C       		.byte	0x1c
 3717 0ba5 83000000 		.4byte	0x83
 3718 0ba9 05       		.uleb128 0x5
 3719 0baa 03       		.byte	0x3
 3720 0bab 00000000 		.4byte	cydelayFreqKhz
 3721 0baf 1D       		.uleb128 0x1d
 3722 0bb0 B2060000 		.4byte	.LASF107
 3723 0bb4 01       		.byte	0x1
 3724 0bb5 1D       		.byte	0x1d
 3725 0bb6 6B000000 		.4byte	0x6b
 3726 0bba 05       		.uleb128 0x5
 3727 0bbb 03       		.byte	0x3
 3728 0bbc 00000000 		.4byte	cydelayFreqMhz
 3729 0bc0 1D       		.uleb128 0x1d
 3730 0bc1 81020000 		.4byte	.LASF108
 3731 0bc5 01       		.byte	0x1
 3732 0bc6 1E       		.byte	0x1e
 3733 0bc7 83000000 		.4byte	0x83
 3734 0bcb 05       		.uleb128 0x5
 3735 0bcc 03       		.byte	0x3
 3736 0bcd 00000000 		.4byte	cydelay32kMs
 3737 0bd1 1D       		.uleb128 0x1d
 3738 0bd2 29010000 		.4byte	.LASF109
 3739 0bd6 01       		.byte	0x1
 3740 0bd7 36       		.byte	0x36
 3741 0bd8 83000000 		.4byte	0x83
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 122


 3742 0bdc 05       		.uleb128 0x5
 3743 0bdd 03       		.byte	0x3
 3744 0bde 00000000 		.4byte	CySysTickInitVar
 3745 0be2 1A       		.uleb128 0x1a
 3746 0be3 F20B0000 		.4byte	0xbf2
 3747 0be7 F20B0000 		.4byte	0xbf2
 3748 0beb 1B       		.uleb128 0x1b
 3749 0bec EC000000 		.4byte	0xec
 3750 0bf0 2D       		.byte	0x2d
 3751 0bf1 00       		.byte	0
 3752 0bf2 1E       		.uleb128 0x1e
 3753 0bf3 6B000000 		.4byte	0x6b
 3754 0bf7 1D       		.uleb128 0x1d
 3755 0bf8 5B040000 		.4byte	.LASF110
 3756 0bfc 01       		.byte	0x1
 3757 0bfd 3B       		.byte	0x3b
 3758 0bfe 080C0000 		.4byte	0xc08
 3759 0c02 05       		.uleb128 0x5
 3760 0c03 03       		.byte	0x3
 3761 0c04 00000000 		.4byte	cyImoFreqMhz2Reg
 3762 0c08 1E       		.uleb128 0x1e
 3763 0c09 E20B0000 		.4byte	0xbe2
 3764 0c0d 1D       		.uleb128 0x1d
 3765 0c0e 40000000 		.4byte	.LASF111
 3766 0c12 01       		.byte	0x1
 3767 0c13 5B       		.byte	0x5b
 3768 0c14 83000000 		.4byte	0x83
 3769 0c18 05       		.uleb128 0x5
 3770 0c19 03       		.byte	0x3
 3771 0c1a 00000000 		.4byte	CySysClkPumpConfig
 3772 0c1e 1F       		.uleb128 0x1f
 3773 0c1f 2B030000 		.4byte	.LASF112
 3774 0c23 2B030000 		.4byte	.LASF112
 3775 0c27 03       		.byte	0x3
 3776 0c28 E5       		.byte	0xe5
 3777 0c29 1F       		.uleb128 0x1f
 3778 0c2a A3040000 		.4byte	.LASF113
 3779 0c2e A3040000 		.4byte	.LASF113
 3780 0c32 03       		.byte	0x3
 3781 0c33 E6       		.byte	0xe6
 3782 0c34 1F       		.uleb128 0x1f
 3783 0c35 F6040000 		.4byte	.LASF114
 3784 0c39 F6040000 		.4byte	.LASF114
 3785 0c3d 03       		.byte	0x3
 3786 0c3e DC       		.byte	0xdc
 3787 0c3f 00       		.byte	0
 3788              		.section	.debug_abbrev,"",%progbits
 3789              	.Ldebug_abbrev0:
 3790 0000 01       		.uleb128 0x1
 3791 0001 11       		.uleb128 0x11
 3792 0002 01       		.byte	0x1
 3793 0003 25       		.uleb128 0x25
 3794 0004 0E       		.uleb128 0xe
 3795 0005 13       		.uleb128 0x13
 3796 0006 0B       		.uleb128 0xb
 3797 0007 03       		.uleb128 0x3
 3798 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 123


 3799 0009 1B       		.uleb128 0x1b
 3800 000a 0E       		.uleb128 0xe
 3801 000b 55       		.uleb128 0x55
 3802 000c 17       		.uleb128 0x17
 3803 000d 11       		.uleb128 0x11
 3804 000e 01       		.uleb128 0x1
 3805 000f 10       		.uleb128 0x10
 3806 0010 17       		.uleb128 0x17
 3807 0011 00       		.byte	0
 3808 0012 00       		.byte	0
 3809 0013 02       		.uleb128 0x2
 3810 0014 24       		.uleb128 0x24
 3811 0015 00       		.byte	0
 3812 0016 0B       		.uleb128 0xb
 3813 0017 0B       		.uleb128 0xb
 3814 0018 3E       		.uleb128 0x3e
 3815 0019 0B       		.uleb128 0xb
 3816 001a 03       		.uleb128 0x3
 3817 001b 0E       		.uleb128 0xe
 3818 001c 00       		.byte	0
 3819 001d 00       		.byte	0
 3820 001e 03       		.uleb128 0x3
 3821 001f 24       		.uleb128 0x24
 3822 0020 00       		.byte	0
 3823 0021 0B       		.uleb128 0xb
 3824 0022 0B       		.uleb128 0xb
 3825 0023 3E       		.uleb128 0x3e
 3826 0024 0B       		.uleb128 0xb
 3827 0025 03       		.uleb128 0x3
 3828 0026 08       		.uleb128 0x8
 3829 0027 00       		.byte	0
 3830 0028 00       		.byte	0
 3831 0029 04       		.uleb128 0x4
 3832 002a 16       		.uleb128 0x16
 3833 002b 00       		.byte	0
 3834 002c 03       		.uleb128 0x3
 3835 002d 0E       		.uleb128 0xe
 3836 002e 3A       		.uleb128 0x3a
 3837 002f 0B       		.uleb128 0xb
 3838 0030 3B       		.uleb128 0x3b
 3839 0031 05       		.uleb128 0x5
 3840 0032 49       		.uleb128 0x49
 3841 0033 13       		.uleb128 0x13
 3842 0034 00       		.byte	0
 3843 0035 00       		.byte	0
 3844 0036 05       		.uleb128 0x5
 3845 0037 35       		.uleb128 0x35
 3846 0038 00       		.byte	0
 3847 0039 49       		.uleb128 0x49
 3848 003a 13       		.uleb128 0x13
 3849 003b 00       		.byte	0
 3850 003c 00       		.byte	0
 3851 003d 06       		.uleb128 0x6
 3852 003e 0F       		.uleb128 0xf
 3853 003f 00       		.byte	0
 3854 0040 0B       		.uleb128 0xb
 3855 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 124


 3856 0042 49       		.uleb128 0x49
 3857 0043 13       		.uleb128 0x13
 3858 0044 00       		.byte	0
 3859 0045 00       		.byte	0
 3860 0046 07       		.uleb128 0x7
 3861 0047 15       		.uleb128 0x15
 3862 0048 00       		.byte	0
 3863 0049 27       		.uleb128 0x27
 3864 004a 19       		.uleb128 0x19
 3865 004b 00       		.byte	0
 3866 004c 00       		.byte	0
 3867 004d 08       		.uleb128 0x8
 3868 004e 16       		.uleb128 0x16
 3869 004f 00       		.byte	0
 3870 0050 03       		.uleb128 0x3
 3871 0051 0E       		.uleb128 0xe
 3872 0052 3A       		.uleb128 0x3a
 3873 0053 0B       		.uleb128 0xb
 3874 0054 3B       		.uleb128 0x3b
 3875 0055 0B       		.uleb128 0xb
 3876 0056 49       		.uleb128 0x49
 3877 0057 13       		.uleb128 0x13
 3878 0058 00       		.byte	0
 3879 0059 00       		.byte	0
 3880 005a 09       		.uleb128 0x9
 3881 005b 2E       		.uleb128 0x2e
 3882 005c 00       		.byte	0
 3883 005d 3F       		.uleb128 0x3f
 3884 005e 19       		.uleb128 0x19
 3885 005f 03       		.uleb128 0x3
 3886 0060 0E       		.uleb128 0xe
 3887 0061 3A       		.uleb128 0x3a
 3888 0062 0B       		.uleb128 0xb
 3889 0063 3B       		.uleb128 0x3b
 3890 0064 0B       		.uleb128 0xb
 3891 0065 27       		.uleb128 0x27
 3892 0066 19       		.uleb128 0x19
 3893 0067 11       		.uleb128 0x11
 3894 0068 01       		.uleb128 0x1
 3895 0069 12       		.uleb128 0x12
 3896 006a 06       		.uleb128 0x6
 3897 006b 40       		.uleb128 0x40
 3898 006c 18       		.uleb128 0x18
 3899 006d 9742     		.uleb128 0x2117
 3900 006f 19       		.uleb128 0x19
 3901 0070 00       		.byte	0
 3902 0071 00       		.byte	0
 3903 0072 0A       		.uleb128 0xa
 3904 0073 2E       		.uleb128 0x2e
 3905 0074 01       		.byte	0x1
 3906 0075 3F       		.uleb128 0x3f
 3907 0076 19       		.uleb128 0x19
 3908 0077 03       		.uleb128 0x3
 3909 0078 0E       		.uleb128 0xe
 3910 0079 3A       		.uleb128 0x3a
 3911 007a 0B       		.uleb128 0xb
 3912 007b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 125


 3913 007c 05       		.uleb128 0x5
 3914 007d 27       		.uleb128 0x27
 3915 007e 19       		.uleb128 0x19
 3916 007f 11       		.uleb128 0x11
 3917 0080 01       		.uleb128 0x1
 3918 0081 12       		.uleb128 0x12
 3919 0082 06       		.uleb128 0x6
 3920 0083 40       		.uleb128 0x40
 3921 0084 18       		.uleb128 0x18
 3922 0085 9742     		.uleb128 0x2117
 3923 0087 19       		.uleb128 0x19
 3924 0088 01       		.uleb128 0x1
 3925 0089 13       		.uleb128 0x13
 3926 008a 00       		.byte	0
 3927 008b 00       		.byte	0
 3928 008c 0B       		.uleb128 0xb
 3929 008d 05       		.uleb128 0x5
 3930 008e 00       		.byte	0
 3931 008f 03       		.uleb128 0x3
 3932 0090 0E       		.uleb128 0xe
 3933 0091 3A       		.uleb128 0x3a
 3934 0092 0B       		.uleb128 0xb
 3935 0093 3B       		.uleb128 0x3b
 3936 0094 05       		.uleb128 0x5
 3937 0095 49       		.uleb128 0x49
 3938 0096 13       		.uleb128 0x13
 3939 0097 02       		.uleb128 0x2
 3940 0098 17       		.uleb128 0x17
 3941 0099 00       		.byte	0
 3942 009a 00       		.byte	0
 3943 009b 0C       		.uleb128 0xc
 3944 009c 34       		.uleb128 0x34
 3945 009d 00       		.byte	0
 3946 009e 03       		.uleb128 0x3
 3947 009f 0E       		.uleb128 0xe
 3948 00a0 3A       		.uleb128 0x3a
 3949 00a1 0B       		.uleb128 0xb
 3950 00a2 3B       		.uleb128 0x3b
 3951 00a3 05       		.uleb128 0x5
 3952 00a4 49       		.uleb128 0x49
 3953 00a5 13       		.uleb128 0x13
 3954 00a6 02       		.uleb128 0x2
 3955 00a7 17       		.uleb128 0x17
 3956 00a8 00       		.byte	0
 3957 00a9 00       		.byte	0
 3958 00aa 0D       		.uleb128 0xd
 3959 00ab 898201   		.uleb128 0x4109
 3960 00ae 00       		.byte	0
 3961 00af 11       		.uleb128 0x11
 3962 00b0 01       		.uleb128 0x1
 3963 00b1 31       		.uleb128 0x31
 3964 00b2 13       		.uleb128 0x13
 3965 00b3 00       		.byte	0
 3966 00b4 00       		.byte	0
 3967 00b5 0E       		.uleb128 0xe
 3968 00b6 05       		.uleb128 0x5
 3969 00b7 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 126


 3970 00b8 03       		.uleb128 0x3
 3971 00b9 0E       		.uleb128 0xe
 3972 00ba 3A       		.uleb128 0x3a
 3973 00bb 0B       		.uleb128 0xb
 3974 00bc 3B       		.uleb128 0x3b
 3975 00bd 05       		.uleb128 0x5
 3976 00be 49       		.uleb128 0x49
 3977 00bf 13       		.uleb128 0x13
 3978 00c0 02       		.uleb128 0x2
 3979 00c1 18       		.uleb128 0x18
 3980 00c2 00       		.byte	0
 3981 00c3 00       		.byte	0
 3982 00c4 0F       		.uleb128 0xf
 3983 00c5 2E       		.uleb128 0x2e
 3984 00c6 01       		.byte	0x1
 3985 00c7 3F       		.uleb128 0x3f
 3986 00c8 19       		.uleb128 0x19
 3987 00c9 03       		.uleb128 0x3
 3988 00ca 0E       		.uleb128 0xe
 3989 00cb 3A       		.uleb128 0x3a
 3990 00cc 0B       		.uleb128 0xb
 3991 00cd 3B       		.uleb128 0x3b
 3992 00ce 05       		.uleb128 0x5
 3993 00cf 27       		.uleb128 0x27
 3994 00d0 19       		.uleb128 0x19
 3995 00d1 49       		.uleb128 0x49
 3996 00d2 13       		.uleb128 0x13
 3997 00d3 11       		.uleb128 0x11
 3998 00d4 01       		.uleb128 0x1
 3999 00d5 12       		.uleb128 0x12
 4000 00d6 06       		.uleb128 0x6
 4001 00d7 40       		.uleb128 0x40
 4002 00d8 18       		.uleb128 0x18
 4003 00d9 9742     		.uleb128 0x2117
 4004 00db 19       		.uleb128 0x19
 4005 00dc 01       		.uleb128 0x1
 4006 00dd 13       		.uleb128 0x13
 4007 00de 00       		.byte	0
 4008 00df 00       		.byte	0
 4009 00e0 10       		.uleb128 0x10
 4010 00e1 2E       		.uleb128 0x2e
 4011 00e2 00       		.byte	0
 4012 00e3 3F       		.uleb128 0x3f
 4013 00e4 19       		.uleb128 0x19
 4014 00e5 03       		.uleb128 0x3
 4015 00e6 0E       		.uleb128 0xe
 4016 00e7 3A       		.uleb128 0x3a
 4017 00e8 0B       		.uleb128 0xb
 4018 00e9 3B       		.uleb128 0x3b
 4019 00ea 05       		.uleb128 0x5
 4020 00eb 27       		.uleb128 0x27
 4021 00ec 19       		.uleb128 0x19
 4022 00ed 11       		.uleb128 0x11
 4023 00ee 01       		.uleb128 0x1
 4024 00ef 12       		.uleb128 0x12
 4025 00f0 06       		.uleb128 0x6
 4026 00f1 40       		.uleb128 0x40
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 127


 4027 00f2 18       		.uleb128 0x18
 4028 00f3 9742     		.uleb128 0x2117
 4029 00f5 19       		.uleb128 0x19
 4030 00f6 00       		.byte	0
 4031 00f7 00       		.byte	0
 4032 00f8 11       		.uleb128 0x11
 4033 00f9 34       		.uleb128 0x34
 4034 00fa 00       		.byte	0
 4035 00fb 03       		.uleb128 0x3
 4036 00fc 0E       		.uleb128 0xe
 4037 00fd 3A       		.uleb128 0x3a
 4038 00fe 0B       		.uleb128 0xb
 4039 00ff 3B       		.uleb128 0x3b
 4040 0100 05       		.uleb128 0x5
 4041 0101 49       		.uleb128 0x49
 4042 0102 13       		.uleb128 0x13
 4043 0103 02       		.uleb128 0x2
 4044 0104 18       		.uleb128 0x18
 4045 0105 00       		.byte	0
 4046 0106 00       		.byte	0
 4047 0107 12       		.uleb128 0x12
 4048 0108 2E       		.uleb128 0x2e
 4049 0109 00       		.byte	0
 4050 010a 3F       		.uleb128 0x3f
 4051 010b 19       		.uleb128 0x19
 4052 010c 03       		.uleb128 0x3
 4053 010d 0E       		.uleb128 0xe
 4054 010e 3A       		.uleb128 0x3a
 4055 010f 0B       		.uleb128 0xb
 4056 0110 3B       		.uleb128 0x3b
 4057 0111 05       		.uleb128 0x5
 4058 0112 27       		.uleb128 0x27
 4059 0113 19       		.uleb128 0x19
 4060 0114 49       		.uleb128 0x49
 4061 0115 13       		.uleb128 0x13
 4062 0116 11       		.uleb128 0x11
 4063 0117 01       		.uleb128 0x1
 4064 0118 12       		.uleb128 0x12
 4065 0119 06       		.uleb128 0x6
 4066 011a 40       		.uleb128 0x40
 4067 011b 18       		.uleb128 0x18
 4068 011c 9742     		.uleb128 0x2117
 4069 011e 19       		.uleb128 0x19
 4070 011f 00       		.byte	0
 4071 0120 00       		.byte	0
 4072 0121 13       		.uleb128 0x13
 4073 0122 898201   		.uleb128 0x4109
 4074 0125 01       		.byte	0x1
 4075 0126 11       		.uleb128 0x11
 4076 0127 01       		.uleb128 0x1
 4077 0128 31       		.uleb128 0x31
 4078 0129 13       		.uleb128 0x13
 4079 012a 00       		.byte	0
 4080 012b 00       		.byte	0
 4081 012c 14       		.uleb128 0x14
 4082 012d 8A8201   		.uleb128 0x410a
 4083 0130 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 128


 4084 0131 02       		.uleb128 0x2
 4085 0132 18       		.uleb128 0x18
 4086 0133 9142     		.uleb128 0x2111
 4087 0135 18       		.uleb128 0x18
 4088 0136 00       		.byte	0
 4089 0137 00       		.byte	0
 4090 0138 15       		.uleb128 0x15
 4091 0139 34       		.uleb128 0x34
 4092 013a 00       		.byte	0
 4093 013b 03       		.uleb128 0x3
 4094 013c 0E       		.uleb128 0xe
 4095 013d 3A       		.uleb128 0x3a
 4096 013e 0B       		.uleb128 0xb
 4097 013f 3B       		.uleb128 0x3b
 4098 0140 05       		.uleb128 0x5
 4099 0141 49       		.uleb128 0x49
 4100 0142 13       		.uleb128 0x13
 4101 0143 1C       		.uleb128 0x1c
 4102 0144 06       		.uleb128 0x6
 4103 0145 00       		.byte	0
 4104 0146 00       		.byte	0
 4105 0147 16       		.uleb128 0x16
 4106 0148 898201   		.uleb128 0x4109
 4107 014b 01       		.byte	0x1
 4108 014c 11       		.uleb128 0x11
 4109 014d 01       		.uleb128 0x1
 4110 014e 31       		.uleb128 0x31
 4111 014f 13       		.uleb128 0x13
 4112 0150 01       		.uleb128 0x1
 4113 0151 13       		.uleb128 0x13
 4114 0152 00       		.byte	0
 4115 0153 00       		.byte	0
 4116 0154 17       		.uleb128 0x17
 4117 0155 2E       		.uleb128 0x2e
 4118 0156 01       		.byte	0x1
 4119 0157 3F       		.uleb128 0x3f
 4120 0158 19       		.uleb128 0x19
 4121 0159 03       		.uleb128 0x3
 4122 015a 0E       		.uleb128 0xe
 4123 015b 3A       		.uleb128 0x3a
 4124 015c 0B       		.uleb128 0xb
 4125 015d 3B       		.uleb128 0x3b
 4126 015e 05       		.uleb128 0x5
 4127 015f 27       		.uleb128 0x27
 4128 0160 19       		.uleb128 0x19
 4129 0161 11       		.uleb128 0x11
 4130 0162 01       		.uleb128 0x1
 4131 0163 12       		.uleb128 0x12
 4132 0164 06       		.uleb128 0x6
 4133 0165 40       		.uleb128 0x40
 4134 0166 18       		.uleb128 0x18
 4135 0167 9642     		.uleb128 0x2116
 4136 0169 19       		.uleb128 0x19
 4137 016a 01       		.uleb128 0x1
 4138 016b 13       		.uleb128 0x13
 4139 016c 00       		.byte	0
 4140 016d 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 129


 4141 016e 18       		.uleb128 0x18
 4142 016f 2E       		.uleb128 0x2e
 4143 0170 01       		.byte	0x1
 4144 0171 03       		.uleb128 0x3
 4145 0172 0E       		.uleb128 0xe
 4146 0173 3A       		.uleb128 0x3a
 4147 0174 0B       		.uleb128 0xb
 4148 0175 3B       		.uleb128 0x3b
 4149 0176 05       		.uleb128 0x5
 4150 0177 27       		.uleb128 0x27
 4151 0178 19       		.uleb128 0x19
 4152 0179 11       		.uleb128 0x11
 4153 017a 01       		.uleb128 0x1
 4154 017b 12       		.uleb128 0x12
 4155 017c 06       		.uleb128 0x6
 4156 017d 40       		.uleb128 0x40
 4157 017e 18       		.uleb128 0x18
 4158 017f 9642     		.uleb128 0x2116
 4159 0181 19       		.uleb128 0x19
 4160 0182 01       		.uleb128 0x1
 4161 0183 13       		.uleb128 0x13
 4162 0184 00       		.byte	0
 4163 0185 00       		.byte	0
 4164 0186 19       		.uleb128 0x19
 4165 0187 34       		.uleb128 0x34
 4166 0188 00       		.byte	0
 4167 0189 03       		.uleb128 0x3
 4168 018a 08       		.uleb128 0x8
 4169 018b 3A       		.uleb128 0x3a
 4170 018c 0B       		.uleb128 0xb
 4171 018d 3B       		.uleb128 0x3b
 4172 018e 05       		.uleb128 0x5
 4173 018f 49       		.uleb128 0x49
 4174 0190 13       		.uleb128 0x13
 4175 0191 02       		.uleb128 0x2
 4176 0192 17       		.uleb128 0x17
 4177 0193 00       		.byte	0
 4178 0194 00       		.byte	0
 4179 0195 1A       		.uleb128 0x1a
 4180 0196 01       		.uleb128 0x1
 4181 0197 01       		.byte	0x1
 4182 0198 49       		.uleb128 0x49
 4183 0199 13       		.uleb128 0x13
 4184 019a 01       		.uleb128 0x1
 4185 019b 13       		.uleb128 0x13
 4186 019c 00       		.byte	0
 4187 019d 00       		.byte	0
 4188 019e 1B       		.uleb128 0x1b
 4189 019f 21       		.uleb128 0x21
 4190 01a0 00       		.byte	0
 4191 01a1 49       		.uleb128 0x49
 4192 01a2 13       		.uleb128 0x13
 4193 01a3 2F       		.uleb128 0x2f
 4194 01a4 0B       		.uleb128 0xb
 4195 01a5 00       		.byte	0
 4196 01a6 00       		.byte	0
 4197 01a7 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 130


 4198 01a8 34       		.uleb128 0x34
 4199 01a9 00       		.byte	0
 4200 01aa 03       		.uleb128 0x3
 4201 01ab 0E       		.uleb128 0xe
 4202 01ac 3A       		.uleb128 0x3a
 4203 01ad 0B       		.uleb128 0xb
 4204 01ae 3B       		.uleb128 0x3b
 4205 01af 0B       		.uleb128 0xb
 4206 01b0 49       		.uleb128 0x49
 4207 01b1 13       		.uleb128 0x13
 4208 01b2 02       		.uleb128 0x2
 4209 01b3 18       		.uleb128 0x18
 4210 01b4 00       		.byte	0
 4211 01b5 00       		.byte	0
 4212 01b6 1D       		.uleb128 0x1d
 4213 01b7 34       		.uleb128 0x34
 4214 01b8 00       		.byte	0
 4215 01b9 03       		.uleb128 0x3
 4216 01ba 0E       		.uleb128 0xe
 4217 01bb 3A       		.uleb128 0x3a
 4218 01bc 0B       		.uleb128 0xb
 4219 01bd 3B       		.uleb128 0x3b
 4220 01be 0B       		.uleb128 0xb
 4221 01bf 49       		.uleb128 0x49
 4222 01c0 13       		.uleb128 0x13
 4223 01c1 3F       		.uleb128 0x3f
 4224 01c2 19       		.uleb128 0x19
 4225 01c3 02       		.uleb128 0x2
 4226 01c4 18       		.uleb128 0x18
 4227 01c5 00       		.byte	0
 4228 01c6 00       		.byte	0
 4229 01c7 1E       		.uleb128 0x1e
 4230 01c8 26       		.uleb128 0x26
 4231 01c9 00       		.byte	0
 4232 01ca 49       		.uleb128 0x49
 4233 01cb 13       		.uleb128 0x13
 4234 01cc 00       		.byte	0
 4235 01cd 00       		.byte	0
 4236 01ce 1F       		.uleb128 0x1f
 4237 01cf 2E       		.uleb128 0x2e
 4238 01d0 00       		.byte	0
 4239 01d1 3F       		.uleb128 0x3f
 4240 01d2 19       		.uleb128 0x19
 4241 01d3 3C       		.uleb128 0x3c
 4242 01d4 19       		.uleb128 0x19
 4243 01d5 6E       		.uleb128 0x6e
 4244 01d6 0E       		.uleb128 0xe
 4245 01d7 03       		.uleb128 0x3
 4246 01d8 0E       		.uleb128 0xe
 4247 01d9 3A       		.uleb128 0x3a
 4248 01da 0B       		.uleb128 0xb
 4249 01db 3B       		.uleb128 0x3b
 4250 01dc 0B       		.uleb128 0xb
 4251 01dd 00       		.byte	0
 4252 01de 00       		.byte	0
 4253 01df 00       		.byte	0
 4254              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 131


 4255              	.Ldebug_loc0:
 4256              	.LLST0:
 4257 0000 00000000 		.4byte	.LVL0
 4258 0004 07000000 		.4byte	.LVL1-1
 4259 0008 0100     		.2byte	0x1
 4260 000a 50       		.byte	0x50
 4261 000b 07000000 		.4byte	.LVL1-1
 4262 000f 12000000 		.4byte	.LVL3
 4263 0013 0100     		.2byte	0x1
 4264 0015 54       		.byte	0x54
 4265 0016 12000000 		.4byte	.LVL3
 4266 001a 20000000 		.4byte	.LFE4
 4267 001e 0400     		.2byte	0x4
 4268 0020 F3       		.byte	0xf3
 4269 0021 01       		.uleb128 0x1
 4270 0022 50       		.byte	0x50
 4271 0023 9F       		.byte	0x9f
 4272 0024 00000000 		.4byte	0
 4273 0028 00000000 		.4byte	0
 4274              	.LLST1:
 4275 002c 08000000 		.4byte	.LVL1
 4276 0030 19000000 		.4byte	.LVL5-1
 4277 0034 0100     		.2byte	0x1
 4278 0036 50       		.byte	0x50
 4279 0037 00000000 		.4byte	0
 4280 003b 00000000 		.4byte	0
 4281              	.LLST2:
 4282 003f 10000000 		.4byte	.LVL2
 4283 0043 14000000 		.4byte	.LVL4
 4284 0047 0100     		.2byte	0x1
 4285 0049 53       		.byte	0x53
 4286 004a 14000000 		.4byte	.LVL4
 4287 004e 1A000000 		.4byte	.LVL6
 4288 0052 0100     		.2byte	0x1
 4289 0054 54       		.byte	0x54
 4290 0055 00000000 		.4byte	0
 4291 0059 00000000 		.4byte	0
 4292              	.LLST3:
 4293 005d 06000000 		.4byte	.LVL8
 4294 0061 11000000 		.4byte	.LVL10-1
 4295 0065 0100     		.2byte	0x1
 4296 0067 50       		.byte	0x50
 4297 0068 00000000 		.4byte	0
 4298 006c 00000000 		.4byte	0
 4299              	.LLST4:
 4300 0070 0E000000 		.4byte	.LVL9
 4301 0074 14000000 		.4byte	.LVL11
 4302 0078 0100     		.2byte	0x1
 4303 007a 54       		.byte	0x54
 4304 007b 14000000 		.4byte	.LVL11
 4305 007f 1C000000 		.4byte	.LFE6
 4306 0083 0100     		.2byte	0x1
 4307 0085 50       		.byte	0x50
 4308 0086 00000000 		.4byte	0
 4309 008a 00000000 		.4byte	0
 4310              	.LLST5:
 4311 008e 00000000 		.4byte	.LVL12
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 132


 4312 0092 07000000 		.4byte	.LVL13-1
 4313 0096 0100     		.2byte	0x1
 4314 0098 50       		.byte	0x50
 4315 0099 07000000 		.4byte	.LVL13-1
 4316 009d 14000000 		.4byte	.LVL14
 4317 00a1 0100     		.2byte	0x1
 4318 00a3 54       		.byte	0x54
 4319 00a4 14000000 		.4byte	.LVL14
 4320 00a8 30000000 		.4byte	.LFE7
 4321 00ac 0400     		.2byte	0x4
 4322 00ae F3       		.byte	0xf3
 4323 00af 01       		.uleb128 0x1
 4324 00b0 50       		.byte	0x50
 4325 00b1 9F       		.byte	0x9f
 4326 00b2 00000000 		.4byte	0
 4327 00b6 00000000 		.4byte	0
 4328              	.LLST6:
 4329 00ba 08000000 		.4byte	.LVL13
 4330 00be 23000000 		.4byte	.LVL15-1
 4331 00c2 0100     		.2byte	0x1
 4332 00c4 50       		.byte	0x50
 4333 00c5 00000000 		.4byte	0
 4334 00c9 00000000 		.4byte	0
 4335              	.LLST7:
 4336 00cd 00000000 		.4byte	.LVL17
 4337 00d1 04000000 		.4byte	.LVL18
 4338 00d5 0100     		.2byte	0x1
 4339 00d7 50       		.byte	0x50
 4340 00d8 04000000 		.4byte	.LVL18
 4341 00dc 14000000 		.4byte	.LFE17
 4342 00e0 0100     		.2byte	0x1
 4343 00e2 52       		.byte	0x52
 4344 00e3 00000000 		.4byte	0
 4345 00e7 00000000 		.4byte	0
 4346              	.LLST8:
 4347 00eb 00000000 		.4byte	.LVL23
 4348 00ef 04000000 		.4byte	.LVL24
 4349 00f3 0100     		.2byte	0x1
 4350 00f5 50       		.byte	0x50
 4351 00f6 04000000 		.4byte	.LVL24
 4352 00fa 14000000 		.4byte	.LFE26
 4353 00fe 0400     		.2byte	0x4
 4354 0100 F3       		.byte	0xf3
 4355 0101 01       		.uleb128 0x1
 4356 0102 50       		.byte	0x50
 4357 0103 9F       		.byte	0x9f
 4358 0104 00000000 		.4byte	0
 4359 0108 00000000 		.4byte	0
 4360              	.LLST9:
 4361 010c 00000000 		.4byte	.LVL25
 4362 0110 08000000 		.4byte	.LVL26
 4363 0114 0100     		.2byte	0x1
 4364 0116 50       		.byte	0x50
 4365 0117 08000000 		.4byte	.LVL26
 4366 011b 18000000 		.4byte	.LFE27
 4367 011f 0400     		.2byte	0x4
 4368 0121 F3       		.byte	0xf3
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 133


 4369 0122 01       		.uleb128 0x1
 4370 0123 50       		.byte	0x50
 4371 0124 9F       		.byte	0x9f
 4372 0125 00000000 		.4byte	0
 4373 0129 00000000 		.4byte	0
 4374              	.LLST10:
 4375 012d 00000000 		.4byte	.LVL27
 4376 0131 04000000 		.4byte	.LVL28
 4377 0135 0100     		.2byte	0x1
 4378 0137 50       		.byte	0x50
 4379 0138 04000000 		.4byte	.LVL28
 4380 013c 14000000 		.4byte	.LFE28
 4381 0140 0400     		.2byte	0x4
 4382 0142 F3       		.byte	0xf3
 4383 0143 01       		.uleb128 0x1
 4384 0144 50       		.byte	0x50
 4385 0145 9F       		.byte	0x9f
 4386 0146 00000000 		.4byte	0
 4387 014a 00000000 		.4byte	0
 4388              	.LLST11:
 4389 014e 00000000 		.4byte	.LVL29
 4390 0152 04000000 		.4byte	.LVL30
 4391 0156 0100     		.2byte	0x1
 4392 0158 50       		.byte	0x50
 4393 0159 04000000 		.4byte	.LVL30
 4394 015d 14000000 		.4byte	.LFE29
 4395 0161 0400     		.2byte	0x4
 4396 0163 F3       		.byte	0xf3
 4397 0164 01       		.uleb128 0x1
 4398 0165 50       		.byte	0x50
 4399 0166 9F       		.byte	0x9f
 4400 0167 00000000 		.4byte	0
 4401 016b 00000000 		.4byte	0
 4402              	.LLST12:
 4403 016f 00000000 		.4byte	.LVL31
 4404 0173 04000000 		.4byte	.LVL32
 4405 0177 0100     		.2byte	0x1
 4406 0179 50       		.byte	0x50
 4407 017a 04000000 		.4byte	.LVL32
 4408 017e 14000000 		.4byte	.LFE30
 4409 0182 0400     		.2byte	0x4
 4410 0184 F3       		.byte	0xf3
 4411 0185 01       		.uleb128 0x1
 4412 0186 50       		.byte	0x50
 4413 0187 9F       		.byte	0x9f
 4414 0188 00000000 		.4byte	0
 4415 018c 00000000 		.4byte	0
 4416              	.LLST13:
 4417 0190 00000000 		.4byte	.LVL34
 4418 0194 13000000 		.4byte	.LVL35-1
 4419 0198 0100     		.2byte	0x1
 4420 019a 50       		.byte	0x50
 4421 019b 13000000 		.4byte	.LVL35-1
 4422 019f 18000000 		.4byte	.LVL36
 4423 01a3 0100     		.2byte	0x1
 4424 01a5 54       		.byte	0x54
 4425 01a6 18000000 		.4byte	.LVL36
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 134


 4426 01aa 28000000 		.4byte	.LVL38
 4427 01ae 0400     		.2byte	0x4
 4428 01b0 F3       		.byte	0xf3
 4429 01b1 01       		.uleb128 0x1
 4430 01b2 50       		.byte	0x50
 4431 01b3 9F       		.byte	0x9f
 4432 01b4 28000000 		.4byte	.LVL38
 4433 01b8 2A000000 		.4byte	.LVL39
 4434 01bc 0100     		.2byte	0x1
 4435 01be 50       		.byte	0x50
 4436 01bf 2A000000 		.4byte	.LVL39
 4437 01c3 2E000000 		.4byte	.LVL40
 4438 01c7 0100     		.2byte	0x1
 4439 01c9 54       		.byte	0x54
 4440 01ca 2E000000 		.4byte	.LVL40
 4441 01ce 38000000 		.4byte	.LFE12
 4442 01d2 0400     		.2byte	0x4
 4443 01d4 F3       		.byte	0xf3
 4444 01d5 01       		.uleb128 0x1
 4445 01d6 50       		.byte	0x50
 4446 01d7 9F       		.byte	0x9f
 4447 01d8 00000000 		.4byte	0
 4448 01dc 00000000 		.4byte	0
 4449              	.LLST14:
 4450 01e0 14000000 		.4byte	.LVL35
 4451 01e4 25000000 		.4byte	.LVL37-1
 4452 01e8 0100     		.2byte	0x1
 4453 01ea 50       		.byte	0x50
 4454 01eb 00000000 		.4byte	0
 4455 01ef 00000000 		.4byte	0
 4456              	.LLST15:
 4457 01f3 00000000 		.4byte	.LVL41
 4458 01f7 0C000000 		.4byte	.LVL43
 4459 01fb 0100     		.2byte	0x1
 4460 01fd 50       		.byte	0x50
 4461 01fe 0C000000 		.4byte	.LVL43
 4462 0202 20000000 		.4byte	.LFE20
 4463 0206 0400     		.2byte	0x4
 4464 0208 F3       		.byte	0xf3
 4465 0209 01       		.uleb128 0x1
 4466 020a 50       		.byte	0x50
 4467 020b 9F       		.byte	0x9f
 4468 020c 00000000 		.4byte	0
 4469 0210 00000000 		.4byte	0
 4470              	.LLST16:
 4471 0214 00000000 		.4byte	.LVL41
 4472 0218 0F000000 		.4byte	.LVL44-1
 4473 021c 0100     		.2byte	0x1
 4474 021e 51       		.byte	0x51
 4475 021f 0F000000 		.4byte	.LVL44-1
 4476 0223 1E000000 		.4byte	.LVL46
 4477 0227 0100     		.2byte	0x1
 4478 0229 55       		.byte	0x55
 4479 022a 1E000000 		.4byte	.LVL46
 4480 022e 20000000 		.4byte	.LFE20
 4481 0232 0400     		.2byte	0x4
 4482 0234 F3       		.byte	0xf3
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 135


 4483 0235 01       		.uleb128 0x1
 4484 0236 51       		.byte	0x51
 4485 0237 9F       		.byte	0x9f
 4486 0238 00000000 		.4byte	0
 4487 023c 00000000 		.4byte	0
 4488              	.LLST17:
 4489 0240 00000000 		.4byte	.LVL47
 4490 0244 0A000000 		.4byte	.LVL49
 4491 0248 0100     		.2byte	0x1
 4492 024a 50       		.byte	0x50
 4493 024b 0A000000 		.4byte	.LVL49
 4494 024f 1C000000 		.4byte	.LFE21
 4495 0253 0400     		.2byte	0x4
 4496 0255 F3       		.byte	0xf3
 4497 0256 01       		.uleb128 0x1
 4498 0257 50       		.byte	0x50
 4499 0258 9F       		.byte	0x9f
 4500 0259 00000000 		.4byte	0
 4501 025d 00000000 		.4byte	0
 4502              	.LLST18:
 4503 0261 00000000 		.4byte	.LVL51
 4504 0265 0C000000 		.4byte	.LVL53
 4505 0269 0100     		.2byte	0x1
 4506 026b 50       		.byte	0x50
 4507 026c 0C000000 		.4byte	.LVL53
 4508 0270 22000000 		.4byte	.LFE22
 4509 0274 0400     		.2byte	0x4
 4510 0276 F3       		.byte	0xf3
 4511 0277 01       		.uleb128 0x1
 4512 0278 50       		.byte	0x50
 4513 0279 9F       		.byte	0x9f
 4514 027a 00000000 		.4byte	0
 4515 027e 00000000 		.4byte	0
 4516              	.LLST19:
 4517 0282 00000000 		.4byte	.LVL51
 4518 0286 0F000000 		.4byte	.LVL54-1
 4519 028a 0100     		.2byte	0x1
 4520 028c 51       		.byte	0x51
 4521 028d 0F000000 		.4byte	.LVL54-1
 4522 0291 20000000 		.4byte	.LVL56
 4523 0295 0100     		.2byte	0x1
 4524 0297 55       		.byte	0x55
 4525 0298 20000000 		.4byte	.LVL56
 4526 029c 22000000 		.4byte	.LFE22
 4527 02a0 0400     		.2byte	0x4
 4528 02a2 F3       		.byte	0xf3
 4529 02a3 01       		.uleb128 0x1
 4530 02a4 51       		.byte	0x51
 4531 02a5 9F       		.byte	0x9f
 4532 02a6 00000000 		.4byte	0
 4533 02aa 00000000 		.4byte	0
 4534              	.LLST20:
 4535 02ae 00000000 		.4byte	.LVL57
 4536 02b2 0A000000 		.4byte	.LVL59
 4537 02b6 0100     		.2byte	0x1
 4538 02b8 50       		.byte	0x50
 4539 02b9 0A000000 		.4byte	.LVL59
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 136


 4540 02bd 1E000000 		.4byte	.LFE23
 4541 02c1 0400     		.2byte	0x4
 4542 02c3 F3       		.byte	0xf3
 4543 02c4 01       		.uleb128 0x1
 4544 02c5 50       		.byte	0x50
 4545 02c6 9F       		.byte	0x9f
 4546 02c7 00000000 		.4byte	0
 4547 02cb 00000000 		.4byte	0
 4548              	.LLST21:
 4549 02cf 00000000 		.4byte	.LVL61
 4550 02d3 0C000000 		.4byte	.LVL62
 4551 02d7 0100     		.2byte	0x1
 4552 02d9 50       		.byte	0x50
 4553 02da 0C000000 		.4byte	.LVL62
 4554 02de 4C000000 		.4byte	.LFE24
 4555 02e2 0400     		.2byte	0x4
 4556 02e4 F3       		.byte	0xf3
 4557 02e5 01       		.uleb128 0x1
 4558 02e6 50       		.byte	0x50
 4559 02e7 9F       		.byte	0x9f
 4560 02e8 00000000 		.4byte	0
 4561 02ec 00000000 		.4byte	0
 4562              	.LLST22:
 4563 02f0 00000000 		.4byte	.LVL61
 4564 02f4 0F000000 		.4byte	.LVL63-1
 4565 02f8 0100     		.2byte	0x1
 4566 02fa 51       		.byte	0x51
 4567 02fb 0F000000 		.4byte	.LVL63-1
 4568 02ff 4C000000 		.4byte	.LFE24
 4569 0303 0400     		.2byte	0x4
 4570 0305 F3       		.byte	0xf3
 4571 0306 01       		.uleb128 0x1
 4572 0307 51       		.byte	0x51
 4573 0308 9F       		.byte	0x9f
 4574 0309 00000000 		.4byte	0
 4575 030d 00000000 		.4byte	0
 4576              	.LLST23:
 4577 0311 26000000 		.4byte	.LVL66
 4578 0315 45000000 		.4byte	.LVL72-1
 4579 0319 0100     		.2byte	0x1
 4580 031b 50       		.byte	0x50
 4581 031c 00000000 		.4byte	0
 4582 0320 00000000 		.4byte	0
 4583              	.LLST24:
 4584 0324 22000000 		.4byte	.LVL65
 4585 0328 46000000 		.4byte	.LVL73
 4586 032c 0100     		.2byte	0x1
 4587 032e 55       		.byte	0x55
 4588 032f 00000000 		.4byte	0
 4589 0333 00000000 		.4byte	0
 4590              	.LLST25:
 4591 0337 32000000 		.4byte	.LVL67
 4592 033b 38000000 		.4byte	.LVL68
 4593 033f 0100     		.2byte	0x1
 4594 0341 51       		.byte	0x51
 4595 0342 3A000000 		.4byte	.LVL69
 4596 0346 3C000000 		.4byte	.LVL70
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 137


 4597 034a 0100     		.2byte	0x1
 4598 034c 51       		.byte	0x51
 4599 034d 3C000000 		.4byte	.LVL70
 4600 0351 40000000 		.4byte	.LVL71
 4601 0355 0100     		.2byte	0x1
 4602 0357 53       		.byte	0x53
 4603 0358 40000000 		.4byte	.LVL71
 4604 035c 45000000 		.4byte	.LVL72-1
 4605 0360 0100     		.2byte	0x1
 4606 0362 51       		.byte	0x51
 4607 0363 00000000 		.4byte	0
 4608 0367 00000000 		.4byte	0
 4609              	.LLST26:
 4610 036b 00000000 		.4byte	.LVL74
 4611 036f 0A000000 		.4byte	.LVL75
 4612 0373 0100     		.2byte	0x1
 4613 0375 50       		.byte	0x50
 4614 0376 0A000000 		.4byte	.LVL75
 4615 037a 2C000000 		.4byte	.LFE25
 4616 037e 0400     		.2byte	0x4
 4617 0380 F3       		.byte	0xf3
 4618 0381 01       		.uleb128 0x1
 4619 0382 50       		.byte	0x50
 4620 0383 9F       		.byte	0x9f
 4621 0384 00000000 		.4byte	0
 4622 0388 00000000 		.4byte	0
 4623              	.LLST27:
 4624 038c 24000000 		.4byte	.LVL77
 4625 0390 26000000 		.4byte	.LVL78
 4626 0394 0100     		.2byte	0x1
 4627 0396 50       		.byte	0x50
 4628 0397 00000000 		.4byte	0
 4629 039b 00000000 		.4byte	0
 4630              	.LLST28:
 4631 039f 00000000 		.4byte	.LVL79
 4632 03a3 06000000 		.4byte	.LVL80
 4633 03a7 0100     		.2byte	0x1
 4634 03a9 50       		.byte	0x50
 4635 03aa 06000000 		.4byte	.LVL80
 4636 03ae 26000000 		.4byte	.LVL84
 4637 03b2 0100     		.2byte	0x1
 4638 03b4 54       		.byte	0x54
 4639 03b5 00000000 		.4byte	0
 4640 03b9 00000000 		.4byte	0
 4641              	.LLST29:
 4642 03bd 00000000 		.4byte	.LVL85
 4643 03c1 08000000 		.4byte	.LVL86
 4644 03c5 0100     		.2byte	0x1
 4645 03c7 50       		.byte	0x50
 4646 03c8 08000000 		.4byte	.LVL86
 4647 03cc 14000000 		.4byte	.LFE34
 4648 03d0 0400     		.2byte	0x4
 4649 03d2 F3       		.byte	0xf3
 4650 03d3 01       		.uleb128 0x1
 4651 03d4 50       		.byte	0x50
 4652 03d5 9F       		.byte	0x9f
 4653 03d6 00000000 		.4byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 138


 4654 03da 00000000 		.4byte	0
 4655              	.LLST30:
 4656 03de 00000000 		.4byte	.LVL88
 4657 03e2 0F000000 		.4byte	.LVL89-1
 4658 03e6 0100     		.2byte	0x1
 4659 03e8 50       		.byte	0x50
 4660 03e9 0F000000 		.4byte	.LVL89-1
 4661 03ed D4000000 		.4byte	.LVL111
 4662 03f1 0100     		.2byte	0x1
 4663 03f3 54       		.byte	0x54
 4664 03f4 D4000000 		.4byte	.LVL111
 4665 03f8 02010000 		.4byte	.LVL118
 4666 03fc 0700     		.2byte	0x7
 4667 03fe 74       		.byte	0x74
 4668 03ff B3998080 		.sleb128 -268432205
 4668      7F
 4669 0404 9F       		.byte	0x9f
 4670 0405 02010000 		.4byte	.LVL118
 4671 0409 08010000 		.4byte	.LVL119
 4672 040d 0100     		.2byte	0x1
 4673 040f 54       		.byte	0x54
 4674 0410 08010000 		.4byte	.LVL119
 4675 0414 10010000 		.4byte	.LVL121
 4676 0418 0300     		.2byte	0x3
 4677 041a 77       		.byte	0x77
 4678 041b 03       		.sleb128 3
 4679 041c 9F       		.byte	0x9f
 4680 041d 10010000 		.4byte	.LVL121
 4681 0421 64010000 		.4byte	.LFE8
 4682 0425 0400     		.2byte	0x4
 4683 0427 F3       		.byte	0xf3
 4684 0428 01       		.uleb128 0x1
 4685 0429 50       		.byte	0x50
 4686 042a 9F       		.byte	0x9f
 4687 042b 00000000 		.4byte	0
 4688 042f 00000000 		.4byte	0
 4689              	.LLST31:
 4690 0433 2A000000 		.4byte	.LVL91
 4691 0437 34000000 		.4byte	.LVL93
 4692 043b 0100     		.2byte	0x1
 4693 043d 5A       		.byte	0x5a
 4694 043e 46000000 		.4byte	.LVL94
 4695 0442 50000000 		.4byte	.LVL96
 4696 0446 0100     		.2byte	0x1
 4697 0448 5A       		.byte	0x5a
 4698 0449 62000000 		.4byte	.LVL97
 4699 044d 6C000000 		.4byte	.LVL99
 4700 0451 0100     		.2byte	0x1
 4701 0453 5A       		.byte	0x5a
 4702 0454 7E000000 		.4byte	.LVL100
 4703 0458 88000000 		.4byte	.LVL102
 4704 045c 0100     		.2byte	0x1
 4705 045e 5A       		.byte	0x5a
 4706 045f 90000000 		.4byte	.LVL103
 4707 0463 02010000 		.4byte	.LVL118
 4708 0467 0100     		.2byte	0x1
 4709 0469 5A       		.byte	0x5a
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 139


 4710 046a 00000000 		.4byte	0
 4711 046e 00000000 		.4byte	0
 4712              	.LLST32:
 4713 0472 32000000 		.4byte	.LVL92
 4714 0476 34000000 		.4byte	.LVL93
 4715 047a 0100     		.2byte	0x1
 4716 047c 59       		.byte	0x59
 4717 047d 4E000000 		.4byte	.LVL95
 4718 0481 50000000 		.4byte	.LVL96
 4719 0485 0100     		.2byte	0x1
 4720 0487 59       		.byte	0x59
 4721 0488 6A000000 		.4byte	.LVL98
 4722 048c 6C000000 		.4byte	.LVL99
 4723 0490 0100     		.2byte	0x1
 4724 0492 59       		.byte	0x59
 4725 0493 86000000 		.4byte	.LVL101
 4726 0497 88000000 		.4byte	.LVL102
 4727 049b 0100     		.2byte	0x1
 4728 049d 59       		.byte	0x59
 4729 049e 98000000 		.4byte	.LVL104
 4730 04a2 02010000 		.4byte	.LVL118
 4731 04a6 0100     		.2byte	0x1
 4732 04a8 59       		.byte	0x59
 4733 04a9 00000000 		.4byte	0
 4734 04ad 00000000 		.4byte	0
 4735              	.LLST33:
 4736 04b1 9C000000 		.4byte	.LVL105
 4737 04b5 02010000 		.4byte	.LVL118
 4738 04b9 0100     		.2byte	0x1
 4739 04bb 56       		.byte	0x56
 4740 04bc 00000000 		.4byte	0
 4741 04c0 00000000 		.4byte	0
 4742              	.LLST34:
 4743 04c4 B0000000 		.4byte	.LVL107
 4744 04c8 B4000000 		.4byte	.LVL108
 4745 04cc 0200     		.2byte	0x2
 4746 04ce 49       		.byte	0x49
 4747 04cf 9F       		.byte	0x9f
 4748 04d0 BC000000 		.4byte	.LVL109
 4749 04d4 02010000 		.4byte	.LVL118
 4750 04d8 0100     		.2byte	0x1
 4751 04da 55       		.byte	0x55
 4752 04db 00000000 		.4byte	0
 4753 04df 00000000 		.4byte	0
 4754              	.LLST35:
 4755 04e3 D8000000 		.4byte	.LVL112
 4756 04e7 DE000000 		.4byte	.LVL113
 4757 04eb 0100     		.2byte	0x1
 4758 04ed 53       		.byte	0x53
 4759 04ee DE000000 		.4byte	.LVL113
 4760 04f2 E0000000 		.4byte	.LVL114
 4761 04f6 0400     		.2byte	0x4
 4762 04f8 72       		.byte	0x72
 4763 04f9 00       		.sleb128 0
 4764 04fa 06       		.byte	0x6
 4765 04fb 9F       		.byte	0x9f
 4766 04fc E0000000 		.4byte	.LVL114
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 140


 4767 0500 E2000000 		.4byte	.LVL115
 4768 0504 0700     		.2byte	0x7
 4769 0506 0C       		.byte	0xc
 4770 0507 28FF0B40 		.4byte	0x400bff28
 4771 050b 06       		.byte	0x6
 4772 050c 9F       		.byte	0x9f
 4773 050d 00000000 		.4byte	0
 4774 0511 00000000 		.4byte	0
 4775              	.LLST36:
 4776 0515 12000000 		.4byte	.LVL90
 4777 0519 AA000000 		.4byte	.LVL106
 4778 051d 0200     		.2byte	0x2
 4779 051f 91       		.byte	0x91
 4780 0520 5C       		.sleb128 -36
 4781 0521 B4000000 		.4byte	.LVL108
 4782 0525 BC000000 		.4byte	.LVL109
 4783 0529 0200     		.2byte	0x2
 4784 052b 91       		.byte	0x91
 4785 052c 5C       		.sleb128 -36
 4786 052d 02010000 		.4byte	.LVL118
 4787 0531 08010000 		.4byte	.LVL119
 4788 0535 0200     		.2byte	0x2
 4789 0537 91       		.byte	0x91
 4790 0538 5C       		.sleb128 -36
 4791 0539 00000000 		.4byte	0
 4792 053d 00000000 		.4byte	0
 4793              	.LLST37:
 4794 0541 00000000 		.4byte	.LVL122
 4795 0545 26000000 		.4byte	.LVL124
 4796 0549 0100     		.2byte	0x1
 4797 054b 50       		.byte	0x50
 4798 054c 26000000 		.4byte	.LVL124
 4799 0550 42000000 		.4byte	.LVL129
 4800 0554 0100     		.2byte	0x1
 4801 0556 54       		.byte	0x54
 4802 0557 00000000 		.4byte	0
 4803 055b 00000000 		.4byte	0
 4804              	.LLST38:
 4805 055f 04000000 		.4byte	.LVL123
 4806 0563 42000000 		.4byte	.LVL128
 4807 0567 0200     		.2byte	0x2
 4808 0569 30       		.byte	0x30
 4809 056a 9F       		.byte	0x9f
 4810 056b 42000000 		.4byte	.LVL128
 4811 056f 54000000 		.4byte	.LFE9
 4812 0573 0100     		.2byte	0x1
 4813 0575 50       		.byte	0x50
 4814 0576 00000000 		.4byte	0
 4815 057a 00000000 		.4byte	0
 4816              	.LLST39:
 4817 057e 00000000 		.4byte	.LVL130
 4818 0582 14000000 		.4byte	.LVL131
 4819 0586 0100     		.2byte	0x1
 4820 0588 50       		.byte	0x50
 4821 0589 14000000 		.4byte	.LVL131
 4822 058d 18000000 		.4byte	.LVL132
 4823 0591 0100     		.2byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 141


 4824 0593 53       		.byte	0x53
 4825 0594 18000000 		.4byte	.LVL132
 4826 0598 44000000 		.4byte	.LFE13
 4827 059c 0400     		.2byte	0x4
 4828 059e F3       		.byte	0xf3
 4829 059f 01       		.uleb128 0x1
 4830 05a0 50       		.byte	0x50
 4831 05a1 9F       		.byte	0x9f
 4832 05a2 00000000 		.4byte	0
 4833 05a6 00000000 		.4byte	0
 4834              	.LLST40:
 4835 05aa 00000000 		.4byte	.LVL135
 4836 05ae 1A000000 		.4byte	.LVL136
 4837 05b2 0100     		.2byte	0x1
 4838 05b4 50       		.byte	0x50
 4839 05b5 1A000000 		.4byte	.LVL136
 4840 05b9 4C000000 		.4byte	.LFE35
 4841 05bd 0400     		.2byte	0x4
 4842 05bf F3       		.byte	0xf3
 4843 05c0 01       		.uleb128 0x1
 4844 05c1 50       		.byte	0x50
 4845 05c2 9F       		.byte	0x9f
 4846 05c3 00000000 		.4byte	0
 4847 05c7 00000000 		.4byte	0
 4848              	.LLST41:
 4849 05cb 00000000 		.4byte	.LVL140
 4850 05cf 02000000 		.4byte	.LVL141
 4851 05d3 0100     		.2byte	0x1
 4852 05d5 50       		.byte	0x50
 4853 05d6 02000000 		.4byte	.LVL141
 4854 05da 10000000 		.4byte	.LFE42
 4855 05de 0400     		.2byte	0x4
 4856 05e0 F3       		.byte	0xf3
 4857 05e1 01       		.uleb128 0x1
 4858 05e2 50       		.byte	0x50
 4859 05e3 9F       		.byte	0x9f
 4860 05e4 00000000 		.4byte	0
 4861 05e8 00000000 		.4byte	0
 4862              	.LLST42:
 4863 05ec 0C000000 		.4byte	.LVL144
 4864 05f0 1C000000 		.4byte	.LVL147
 4865 05f4 0100     		.2byte	0x1
 4866 05f6 54       		.byte	0x54
 4867 05f7 1E000000 		.4byte	.LVL148
 4868 05fb 22000000 		.4byte	.LVL149
 4869 05ff 0100     		.2byte	0x1
 4870 0601 54       		.byte	0x54
 4871 0602 00000000 		.4byte	0
 4872 0606 00000000 		.4byte	0
 4873              	.LLST43:
 4874 060a 02000000 		.4byte	.LVL150
 4875 060e 06000000 		.4byte	.LVL151
 4876 0612 0200     		.2byte	0x2
 4877 0614 30       		.byte	0x30
 4878 0615 9F       		.byte	0x9f
 4879 0616 06000000 		.4byte	.LVL151
 4880 061a 1B000000 		.4byte	.LVL153-1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 142


 4881 061e 0100     		.2byte	0x1
 4882 0620 53       		.byte	0x53
 4883 0621 00000000 		.4byte	0
 4884 0625 00000000 		.4byte	0
 4885              	.LLST44:
 4886 0629 00000000 		.4byte	.LVL160
 4887 062d 06000000 		.4byte	.LVL161
 4888 0631 0100     		.2byte	0x1
 4889 0633 50       		.byte	0x50
 4890 0634 06000000 		.4byte	.LVL161
 4891 0638 10000000 		.4byte	.LFE49
 4892 063c 0400     		.2byte	0x4
 4893 063e F3       		.byte	0xf3
 4894 063f 01       		.uleb128 0x1
 4895 0640 50       		.byte	0x50
 4896 0641 9F       		.byte	0x9f
 4897 0642 00000000 		.4byte	0
 4898 0646 00000000 		.4byte	0
 4899              	.LLST45:
 4900 064a 00000000 		.4byte	.LVL162
 4901 064e 02000000 		.4byte	.LVL163
 4902 0652 0100     		.2byte	0x1
 4903 0654 50       		.byte	0x50
 4904 0655 02000000 		.4byte	.LVL163
 4905 0659 0C000000 		.4byte	.LFE50
 4906 065d 0400     		.2byte	0x4
 4907 065f F3       		.byte	0xf3
 4908 0660 01       		.uleb128 0x1
 4909 0661 50       		.byte	0x50
 4910 0662 9F       		.byte	0x9f
 4911 0663 00000000 		.4byte	0
 4912 0667 00000000 		.4byte	0
 4913              		.section	.debug_aranges,"",%progbits
 4914 0000 AC010000 		.4byte	0x1ac
 4915 0004 0200     		.2byte	0x2
 4916 0006 00000000 		.4byte	.Ldebug_info0
 4917 000a 04       		.byte	0x4
 4918 000b 00       		.byte	0
 4919 000c 0000     		.2byte	0
 4920 000e 0000     		.2byte	0
 4921 0010 00000000 		.4byte	.LFB2
 4922 0014 14000000 		.4byte	.LFE2-.LFB2
 4923 0018 00000000 		.4byte	.LFB3
 4924 001c 10000000 		.4byte	.LFE3-.LFB3
 4925 0020 00000000 		.4byte	.LFB4
 4926 0024 20000000 		.4byte	.LFE4-.LFB4
 4927 0028 00000000 		.4byte	.LFB5
 4928 002c 38000000 		.4byte	.LFE5-.LFB5
 4929 0030 00000000 		.4byte	.LFB6
 4930 0034 1C000000 		.4byte	.LFE6-.LFB6
 4931 0038 00000000 		.4byte	.LFB7
 4932 003c 30000000 		.4byte	.LFE7-.LFB7
 4933 0040 00000000 		.4byte	.LFB10
 4934 0044 24000000 		.4byte	.LFE10-.LFB10
 4935 0048 00000000 		.4byte	.LFB11
 4936 004c 10000000 		.4byte	.LFE11-.LFB11
 4937 0050 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 143


 4938 0054 20000000 		.4byte	.LFE14-.LFB14
 4939 0058 00000000 		.4byte	.LFB15
 4940 005c 10000000 		.4byte	.LFE15-.LFB15
 4941 0060 00000000 		.4byte	.LFB16
 4942 0064 0C000000 		.4byte	.LFE16-.LFB16
 4943 0068 00000000 		.4byte	.LFB17
 4944 006c 14000000 		.4byte	.LFE17-.LFB17
 4945 0070 00000000 		.4byte	.LFB18
 4946 0074 10000000 		.4byte	.LFE18-.LFB18
 4947 0078 00000000 		.4byte	.LFB19
 4948 007c 0C000000 		.4byte	.LFE19-.LFB19
 4949 0080 00000000 		.4byte	.LFB26
 4950 0084 14000000 		.4byte	.LFE26-.LFB26
 4951 0088 00000000 		.4byte	.LFB27
 4952 008c 18000000 		.4byte	.LFE27-.LFB27
 4953 0090 00000000 		.4byte	.LFB28
 4954 0094 14000000 		.4byte	.LFE28-.LFB28
 4955 0098 00000000 		.4byte	.LFB29
 4956 009c 14000000 		.4byte	.LFE29-.LFB29
 4957 00a0 00000000 		.4byte	.LFB30
 4958 00a4 14000000 		.4byte	.LFE30-.LFB30
 4959 00a8 00000000 		.4byte	.LFB31
 4960 00ac 04000000 		.4byte	.LFE31-.LFB31
 4961 00b0 00000000 		.4byte	.LFB12
 4962 00b4 38000000 		.4byte	.LFE12-.LFB12
 4963 00b8 00000000 		.4byte	.LFB20
 4964 00bc 20000000 		.4byte	.LFE20-.LFB20
 4965 00c0 00000000 		.4byte	.LFB21
 4966 00c4 1C000000 		.4byte	.LFE21-.LFB21
 4967 00c8 00000000 		.4byte	.LFB22
 4968 00cc 22000000 		.4byte	.LFE22-.LFB22
 4969 00d0 00000000 		.4byte	.LFB23
 4970 00d4 1E000000 		.4byte	.LFE23-.LFB23
 4971 00d8 00000000 		.4byte	.LFB24
 4972 00dc 4C000000 		.4byte	.LFE24-.LFB24
 4973 00e0 00000000 		.4byte	.LFB25
 4974 00e4 2C000000 		.4byte	.LFE25-.LFB25
 4975 00e8 00000000 		.4byte	.LFB32
 4976 00ec 18000000 		.4byte	.LFE32-.LFB32
 4977 00f0 00000000 		.4byte	.LFB33
 4978 00f4 30000000 		.4byte	.LFE33-.LFB33
 4979 00f8 00000000 		.4byte	.LFB34
 4980 00fc 14000000 		.4byte	.LFE34-.LFB34
 4981 0100 00000000 		.4byte	.LFB8
 4982 0104 64010000 		.4byte	.LFE8-.LFB8
 4983 0108 00000000 		.4byte	.LFB9
 4984 010c 54000000 		.4byte	.LFE9-.LFB9
 4985 0110 00000000 		.4byte	.LFB13
 4986 0114 44000000 		.4byte	.LFE13-.LFB13
 4987 0118 00000000 		.4byte	.LFB35
 4988 011c 4C000000 		.4byte	.LFE35-.LFB35
 4989 0120 00000000 		.4byte	.LFB39
 4990 0124 10000000 		.4byte	.LFE39-.LFB39
 4991 0128 00000000 		.4byte	.LFB40
 4992 012c 10000000 		.4byte	.LFE40-.LFB40
 4993 0130 00000000 		.4byte	.LFB38
 4994 0134 18000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 144


 4995 0138 00000000 		.4byte	.LFB41
 4996 013c 10000000 		.4byte	.LFE41-.LFB41
 4997 0140 00000000 		.4byte	.LFB42
 4998 0144 10000000 		.4byte	.LFE42-.LFB42
 4999 0148 00000000 		.4byte	.LFB43
 5000 014c 10000000 		.4byte	.LFE43-.LFB43
 5001 0150 00000000 		.4byte	.LFB44
 5002 0154 10000000 		.4byte	.LFE44-.LFB44
 5003 0158 00000000 		.4byte	.LFB45
 5004 015c 20000000 		.4byte	.LFE45-.LFB45
 5005 0160 00000000 		.4byte	.LFB46
 5006 0164 10000000 		.4byte	.LFE46-.LFB46
 5007 0168 00000000 		.4byte	.LFB47
 5008 016c 10000000 		.4byte	.LFE47-.LFB47
 5009 0170 00000000 		.4byte	.LFB51
 5010 0174 28000000 		.4byte	.LFE51-.LFB51
 5011 0178 00000000 		.4byte	.LFB48
 5012 017c 0C000000 		.4byte	.LFE48-.LFB48
 5013 0180 00000000 		.4byte	.LFB37
 5014 0184 44000000 		.4byte	.LFE37-.LFB37
 5015 0188 00000000 		.4byte	.LFB36
 5016 018c 20000000 		.4byte	.LFE36-.LFB36
 5017 0190 00000000 		.4byte	.LFB49
 5018 0194 10000000 		.4byte	.LFE49-.LFB49
 5019 0198 00000000 		.4byte	.LFB50
 5020 019c 0C000000 		.4byte	.LFE50-.LFB50
 5021 01a0 00000000 		.4byte	.LFB52
 5022 01a4 70000000 		.4byte	.LFE52-.LFB52
 5023 01a8 00000000 		.4byte	0
 5024 01ac 00000000 		.4byte	0
 5025              		.section	.debug_ranges,"",%progbits
 5026              	.Ldebug_ranges0:
 5027 0000 00000000 		.4byte	.LFB2
 5028 0004 14000000 		.4byte	.LFE2
 5029 0008 00000000 		.4byte	.LFB3
 5030 000c 10000000 		.4byte	.LFE3
 5031 0010 00000000 		.4byte	.LFB4
 5032 0014 20000000 		.4byte	.LFE4
 5033 0018 00000000 		.4byte	.LFB5
 5034 001c 38000000 		.4byte	.LFE5
 5035 0020 00000000 		.4byte	.LFB6
 5036 0024 1C000000 		.4byte	.LFE6
 5037 0028 00000000 		.4byte	.LFB7
 5038 002c 30000000 		.4byte	.LFE7
 5039 0030 00000000 		.4byte	.LFB10
 5040 0034 24000000 		.4byte	.LFE10
 5041 0038 00000000 		.4byte	.LFB11
 5042 003c 10000000 		.4byte	.LFE11
 5043 0040 00000000 		.4byte	.LFB14
 5044 0044 20000000 		.4byte	.LFE14
 5045 0048 00000000 		.4byte	.LFB15
 5046 004c 10000000 		.4byte	.LFE15
 5047 0050 00000000 		.4byte	.LFB16
 5048 0054 0C000000 		.4byte	.LFE16
 5049 0058 00000000 		.4byte	.LFB17
 5050 005c 14000000 		.4byte	.LFE17
 5051 0060 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 145


 5052 0064 10000000 		.4byte	.LFE18
 5053 0068 00000000 		.4byte	.LFB19
 5054 006c 0C000000 		.4byte	.LFE19
 5055 0070 00000000 		.4byte	.LFB26
 5056 0074 14000000 		.4byte	.LFE26
 5057 0078 00000000 		.4byte	.LFB27
 5058 007c 18000000 		.4byte	.LFE27
 5059 0080 00000000 		.4byte	.LFB28
 5060 0084 14000000 		.4byte	.LFE28
 5061 0088 00000000 		.4byte	.LFB29
 5062 008c 14000000 		.4byte	.LFE29
 5063 0090 00000000 		.4byte	.LFB30
 5064 0094 14000000 		.4byte	.LFE30
 5065 0098 00000000 		.4byte	.LFB31
 5066 009c 04000000 		.4byte	.LFE31
 5067 00a0 00000000 		.4byte	.LFB12
 5068 00a4 38000000 		.4byte	.LFE12
 5069 00a8 00000000 		.4byte	.LFB20
 5070 00ac 20000000 		.4byte	.LFE20
 5071 00b0 00000000 		.4byte	.LFB21
 5072 00b4 1C000000 		.4byte	.LFE21
 5073 00b8 00000000 		.4byte	.LFB22
 5074 00bc 22000000 		.4byte	.LFE22
 5075 00c0 00000000 		.4byte	.LFB23
 5076 00c4 1E000000 		.4byte	.LFE23
 5077 00c8 00000000 		.4byte	.LFB24
 5078 00cc 4C000000 		.4byte	.LFE24
 5079 00d0 00000000 		.4byte	.LFB25
 5080 00d4 2C000000 		.4byte	.LFE25
 5081 00d8 00000000 		.4byte	.LFB32
 5082 00dc 18000000 		.4byte	.LFE32
 5083 00e0 00000000 		.4byte	.LFB33
 5084 00e4 30000000 		.4byte	.LFE33
 5085 00e8 00000000 		.4byte	.LFB34
 5086 00ec 14000000 		.4byte	.LFE34
 5087 00f0 00000000 		.4byte	.LFB8
 5088 00f4 64010000 		.4byte	.LFE8
 5089 00f8 00000000 		.4byte	.LFB9
 5090 00fc 54000000 		.4byte	.LFE9
 5091 0100 00000000 		.4byte	.LFB13
 5092 0104 44000000 		.4byte	.LFE13
 5093 0108 00000000 		.4byte	.LFB35
 5094 010c 4C000000 		.4byte	.LFE35
 5095 0110 00000000 		.4byte	.LFB39
 5096 0114 10000000 		.4byte	.LFE39
 5097 0118 00000000 		.4byte	.LFB40
 5098 011c 10000000 		.4byte	.LFE40
 5099 0120 00000000 		.4byte	.LFB38
 5100 0124 18000000 		.4byte	.LFE38
 5101 0128 00000000 		.4byte	.LFB41
 5102 012c 10000000 		.4byte	.LFE41
 5103 0130 00000000 		.4byte	.LFB42
 5104 0134 10000000 		.4byte	.LFE42
 5105 0138 00000000 		.4byte	.LFB43
 5106 013c 10000000 		.4byte	.LFE43
 5107 0140 00000000 		.4byte	.LFB44
 5108 0144 10000000 		.4byte	.LFE44
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 146


 5109 0148 00000000 		.4byte	.LFB45
 5110 014c 20000000 		.4byte	.LFE45
 5111 0150 00000000 		.4byte	.LFB46
 5112 0154 10000000 		.4byte	.LFE46
 5113 0158 00000000 		.4byte	.LFB47
 5114 015c 10000000 		.4byte	.LFE47
 5115 0160 00000000 		.4byte	.LFB51
 5116 0164 28000000 		.4byte	.LFE51
 5117 0168 00000000 		.4byte	.LFB48
 5118 016c 0C000000 		.4byte	.LFE48
 5119 0170 00000000 		.4byte	.LFB37
 5120 0174 44000000 		.4byte	.LFE37
 5121 0178 00000000 		.4byte	.LFB36
 5122 017c 20000000 		.4byte	.LFE36
 5123 0180 00000000 		.4byte	.LFB49
 5124 0184 10000000 		.4byte	.LFE49
 5125 0188 00000000 		.4byte	.LFB50
 5126 018c 0C000000 		.4byte	.LFE50
 5127 0190 00000000 		.4byte	.LFB52
 5128 0194 70000000 		.4byte	.LFE52
 5129 0198 00000000 		.4byte	0
 5130 019c 00000000 		.4byte	0
 5131              		.section	.debug_line,"",%progbits
 5132              	.Ldebug_line0:
 5133 0000 F0040000 		.section	.debug_str,"MS",%progbits,1
 5133      02004D00 
 5133      00000201 
 5133      FB0E0D00 
 5133      01010101 
 5134              	.LASF57:
 5135 0000 72616D56 		.ascii	"ramVectorTable\000"
 5135      6563746F 
 5135      72546162 
 5135      6C6500
 5136              	.LASF73:
 5137 000f 62675472 		.ascii	"bgTrim4\000"
 5137      696D3400 
 5138              	.LASF10:
 5139 0017 75696E74 		.ascii	"uint16\000"
 5139      313600
 5140              	.LASF43:
 5141 001e 696E7453 		.ascii	"intState\000"
 5141      74617465 
 5141      00
 5142              	.LASF26:
 5143 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5143      73436C6B 
 5143      57726974 
 5143      65486663 
 5143      6C6B4469 
 5144              	.LASF111:
 5145 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5145      73436C6B 
 5145      50756D70 
 5145      436F6E66 
 5145      696700
 5146              	.LASF56:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 147


 5147 0053 6F6C6449 		.ascii	"oldIsr\000"
 5147      737200
 5148              	.LASF100:
 5149 005a 72657456 		.ascii	"retVal\000"
 5149      616C00
 5150              	.LASF42:
 5151 0061 43794469 		.ascii	"CyDisableInts\000"
 5151      7361626C 
 5151      65496E74 
 5151      7300
 5152              	.LASF76:
 5153 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5153      656E7449 
 5153      6D6F5472 
 5153      696D3256 
 5153      616C7565 
 5154              	.LASF115:
 5155 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5155      43313120 
 5155      352E342E 
 5155      31203230 
 5155      31363036 
 5156 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5156      20726576 
 5156      6973696F 
 5156      6E203233 
 5156      37373135 
 5157 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5157      66756E63 
 5157      74696F6E 
 5157      2D736563 
 5157      74696F6E 
 5158              	.LASF7:
 5159 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 5159      206C6F6E 
 5159      6720756E 
 5159      7369676E 
 5159      65642069 
 5160              	.LASF109:
 5161 0129 43795379 		.ascii	"CySysTickInitVar\000"
 5161      73546963 
 5161      6B496E69 
 5161      74566172 
 5161      00
 5162              	.LASF44:
 5163 013a 4379456E 		.ascii	"CyEnableInts\000"
 5163      61626C65 
 5163      496E7473 
 5163      00
 5164              	.LASF66:
 5165 0147 4379536F 		.ascii	"CySoftwareReset\000"
 5165      66747761 
 5165      72655265 
 5165      73657400 
 5166              	.LASF84:
 5167 0157 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5167      73546963 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 148


 5167      6B456E61 
 5167      626C6549 
 5167      6E746572 
 5168              	.LASF48:
 5169 0170 4379496E 		.ascii	"CyIntGetState\000"
 5169      74476574 
 5169      53746174 
 5169      6500
 5170              	.LASF6:
 5171 017e 6C6F6E67 		.ascii	"long long int\000"
 5171      206C6F6E 
 5171      6720696E 
 5171      7400
 5172              	.LASF0:
 5173 018c 7369676E 		.ascii	"signed char\000"
 5173      65642063 
 5173      68617200 
 5174              	.LASF72:
 5175 0198 66726571 		.ascii	"freq\000"
 5175      00
 5176              	.LASF82:
 5177 019d 43794465 		.ascii	"CyDelayFreq\000"
 5177      6C617946 
 5177      72657100 
 5178              	.LASF24:
 5179 01a9 696E7465 		.ascii	"interruptState\000"
 5179      72727570 
 5179      74537461 
 5179      746500
 5180              	.LASF89:
 5181 01b8 43795379 		.ascii	"CySysTickGetReload\000"
 5181      73546963 
 5181      6B476574 
 5181      52656C6F 
 5181      616400
 5182              	.LASF4:
 5183 01cb 6C6F6E67 		.ascii	"long int\000"
 5183      20696E74 
 5183      00
 5184              	.LASF49:
 5185 01d4 4379496E 		.ascii	"CyIntDisable\000"
 5185      74446973 
 5185      61626C65 
 5185      00
 5186              	.LASF101:
 5187 01e1 43795379 		.ascii	"CySysTickGetCallback\000"
 5187      73546963 
 5187      6B476574 
 5187      43616C6C 
 5187      6261636B 
 5188              	.LASF9:
 5189 01f6 75696E74 		.ascii	"uint8\000"
 5189      3800
 5190              	.LASF106:
 5191 01fc 63796465 		.ascii	"cydelayFreqKhz\000"
 5191      6C617946 
 5191      7265714B 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 149


 5191      687A00
 5192              	.LASF29:
 5193 020b 656E6162 		.ascii	"enable\000"
 5193      6C6500
 5194              	.LASF13:
 5195 0212 646F7562 		.ascii	"double\000"
 5195      6C6500
 5196              	.LASF63:
 5197 0219 73686966 		.ascii	"shift\000"
 5197      7400
 5198              	.LASF38:
 5199 021f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5199      734C7664 
 5199      436C6561 
 5199      72496E74 
 5199      65727275 
 5200              	.LASF11:
 5201 0236 75696E74 		.ascii	"uint32\000"
 5201      333200
 5202              	.LASF35:
 5203 023d 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5203      73436C6B 
 5203      45636F52 
 5203      65616453 
 5203      74617475 
 5204              	.LASF45:
 5205 0253 6D61736B 		.ascii	"mask\000"
 5205      00
 5206              	.LASF34:
 5207 0258 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5207      73436C6B 
 5207      47657453 
 5207      7973636C 
 5207      6B536F75 
 5208              	.LASF65:
 5209 0270 4379496E 		.ascii	"CyIntGetPriority\000"
 5209      74476574 
 5209      5072696F 
 5209      72697479 
 5209      00
 5210              	.LASF108:
 5211 0281 63796465 		.ascii	"cydelay32kMs\000"
 5211      6C617933 
 5211      326B4D73 
 5211      00
 5212              	.LASF96:
 5213 028e 43795379 		.ascii	"CySysTickInit\000"
 5213      73546963 
 5213      6B496E69 
 5213      7400
 5214              	.LASF64:
 5215 029c 76616C75 		.ascii	"value\000"
 5215      6500
 5216              	.LASF92:
 5217 02a2 636C6F63 		.ascii	"clockSource\000"
 5217      6B536F75 
 5217      72636500 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 150


 5218              	.LASF102:
 5219 02ae 43794765 		.ascii	"CyGetUniqueId\000"
 5219      74556E69 
 5219      71756549 
 5219      6400
 5220              	.LASF94:
 5221 02bc 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5221      73546963 
 5221      6B476574 
 5221      436F756E 
 5221      74466C61 
 5222              	.LASF8:
 5223 02d2 756E7369 		.ascii	"unsigned int\000"
 5223      676E6564 
 5223      20696E74 
 5223      00
 5224              	.LASF95:
 5225 02df 43795379 		.ascii	"CySysTickClear\000"
 5225      73546963 
 5225      6B436C65 
 5225      617200
 5226              	.LASF5:
 5227 02ee 6C6F6E67 		.ascii	"long unsigned int\000"
 5227      20756E73 
 5227      69676E65 
 5227      6420696E 
 5227      7400
 5228              	.LASF88:
 5229 0300 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5229      734C7664 
 5229      47657449 
 5229      6E746572 
 5229      72757074 
 5230              	.LASF23:
 5231 031b 43795379 		.ascii	"CySysClkImoStop\000"
 5231      73436C6B 
 5231      496D6F53 
 5231      746F7000 
 5232              	.LASF112:
 5233 032b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5233      74657243 
 5233      72697469 
 5233      63616C53 
 5233      65637469 
 5234              	.LASF50:
 5235 0342 4379496E 		.ascii	"CyIntSetPending\000"
 5235      74536574 
 5235      50656E64 
 5235      696E6700 
 5236              	.LASF39:
 5237 0352 43795379 		.ascii	"CySysGetResetReason\000"
 5237      73476574 
 5237      52657365 
 5237      74526561 
 5237      736F6E00 
 5238              	.LASF3:
 5239 0366 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 151


 5239      7420756E 
 5239      7369676E 
 5239      65642069 
 5239      6E7400
 5240              	.LASF91:
 5241 0379 43795379 		.ascii	"CySysTickSetClockSource\000"
 5241      73546963 
 5241      6B536574 
 5241      436C6F63 
 5241      6B536F75 
 5242              	.LASF59:
 5243 0391 4379496E 		.ascii	"CyIntSetVector\000"
 5243      74536574 
 5243      56656374 
 5243      6F7200
 5244              	.LASF47:
 5245 03a0 6E756D62 		.ascii	"number\000"
 5245      657200
 5246              	.LASF62:
 5247 03a7 7072696F 		.ascii	"priority\000"
 5247      72697479 
 5247      00
 5248              	.LASF71:
 5249 03b0 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5249      73436C6B 
 5249      57726974 
 5249      65496D6F 
 5249      46726571 
 5250              	.LASF54:
 5251 03c5 4379496E 		.ascii	"CyIntSetSysVector\000"
 5251      74536574 
 5251      53797356 
 5251      6563746F 
 5251      7200
 5252              	.LASF27:
 5253 03d7 43795379 		.ascii	"CySysEnablePumpClock\000"
 5253      73456E61 
 5253      626C6550 
 5253      756D7043 
 5253      6C6F636B 
 5254              	.LASF17:
 5255 03ec 72656733 		.ascii	"reg32\000"
 5255      3200
 5256              	.LASF97:
 5257 03f2 43795379 		.ascii	"CySysTickStart\000"
 5257      73546963 
 5257      6B537461 
 5257      727400
 5258              	.LASF41:
 5259 0401 72657475 		.ascii	"returnStatus\000"
 5259      726E5374 
 5259      61747573 
 5259      00
 5260              	.LASF20:
 5261 040e 73697A65 		.ascii	"sizetype\000"
 5261      74797065 
 5261      00
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 152


 5262              	.LASF51:
 5263 0417 4379496E 		.ascii	"CyIntClearPending\000"
 5263      74436C65 
 5263      61725065 
 5263      6E64696E 
 5263      6700
 5264              	.LASF19:
 5265 0429 6C6F6E67 		.ascii	"long double\000"
 5265      20646F75 
 5265      626C6500 
 5266              	.LASF55:
 5267 0435 61646472 		.ascii	"address\000"
 5267      65737300 
 5268              	.LASF74:
 5269 043d 62675472 		.ascii	"bgTrim5\000"
 5269      696D3500 
 5270              	.LASF30:
 5271 0445 73797363 		.ascii	"sysclkSource\000"
 5271      6C6B536F 
 5271      75726365 
 5271      00
 5272              	.LASF99:
 5273 0452 66756E63 		.ascii	"function\000"
 5273      74696F6E 
 5273      00
 5274              	.LASF110:
 5275 045b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5275      6F467265 
 5275      714D687A 
 5275      32526567 
 5275      00
 5276              	.LASF90:
 5277 046c 43795379 		.ascii	"CySysTickGetValue\000"
 5277      73546963 
 5277      6B476574 
 5277      56616C75 
 5277      6500
 5278              	.LASF105:
 5279 047e 63796465 		.ascii	"cydelayFreqHz\000"
 5279      6C617946 
 5279      72657148 
 5279      7A00
 5280              	.LASF61:
 5281 048c 4379496E 		.ascii	"CyIntSetPriority\000"
 5281      74536574 
 5281      5072696F 
 5281      72697479 
 5281      00
 5282              	.LASF12:
 5283 049d 666C6F61 		.ascii	"float\000"
 5283      7400
 5284              	.LASF113:
 5285 04a3 43794578 		.ascii	"CyExitCriticalSection\000"
 5285      69744372 
 5285      69746963 
 5285      616C5365 
 5285      6374696F 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 153


 5286              	.LASF80:
 5287 04b9 43795379 		.ascii	"CySysLvdEnable\000"
 5287      734C7664 
 5287      456E6162 
 5287      6C6500
 5288              	.LASF21:
 5289 04c8 63795379 		.ascii	"cySysTickCallback\000"
 5289      73546963 
 5289      6B43616C 
 5289      6C626163 
 5289      6B00
 5290              	.LASF60:
 5291 04da 4379496E 		.ascii	"CyIntGetVector\000"
 5291      74476574 
 5291      56656374 
 5291      6F7200
 5292              	.LASF68:
 5293 04e9 6D696C6C 		.ascii	"milliseconds\000"
 5293      69736563 
 5293      6F6E6473 
 5293      00
 5294              	.LASF114:
 5295 04f6 43794465 		.ascii	"CyDelayCycles\000"
 5295      6C617943 
 5295      79636C65 
 5295      7300
 5296              	.LASF16:
 5297 0504 72656738 		.ascii	"reg8\000"
 5297      00
 5298              	.LASF81:
 5299 0509 74687265 		.ascii	"threshold\000"
 5299      73686F6C 
 5299      6400
 5300              	.LASF52:
 5301 0513 43794861 		.ascii	"CyHalt\000"
 5301      6C7400
 5302              	.LASF1:
 5303 051a 756E7369 		.ascii	"unsigned char\000"
 5303      676E6564 
 5303      20636861 
 5303      7200
 5304              	.LASF2:
 5305 0528 73686F72 		.ascii	"short int\000"
 5305      7420696E 
 5305      7400
 5306              	.LASF46:
 5307 0532 4379496E 		.ascii	"CyIntEnable\000"
 5307      74456E61 
 5307      626C6500 
 5308              	.LASF58:
 5309 053e 4379496E 		.ascii	"CyIntGetSysVector\000"
 5309      74476574 
 5309      53797356 
 5309      6563746F 
 5309      7200
 5310              	.LASF28:
 5311 0550 636C6B53 		.ascii	"clkSelect\000"
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 154


 5311      656C6563 
 5311      7400
 5312              	.LASF78:
 5313 055a 43795379 		.ascii	"CySysClkEcoStart\000"
 5313      73436C6B 
 5313      45636F53 
 5313      74617274 
 5313      00
 5314              	.LASF69:
 5315 056b 43794465 		.ascii	"CyDelayUs\000"
 5315      6C617955 
 5315      7300
 5316              	.LASF40:
 5317 0575 72656173 		.ascii	"reason\000"
 5317      6F6E00
 5318              	.LASF14:
 5319 057c 63686172 		.ascii	"char\000"
 5319      00
 5320              	.LASF18:
 5321 0581 63796973 		.ascii	"cyisraddress\000"
 5321      72616464 
 5321      72657373 
 5321      00
 5322              	.LASF85:
 5323 058e 43795379 		.ascii	"CySysTickEnable\000"
 5323      73546963 
 5323      6B456E61 
 5323      626C6500 
 5324              	.LASF117:
 5325 059e 433A5C55 		.ascii	"C:\\Users\\Tymek\\Documents\\EE\\Programming\\PSoC\\"
 5325      73657273 
 5325      5C54796D 
 5325      656B5C44 
 5325      6F63756D 
 5326 05cb 4359424C 		.ascii	"CYBLE-224110-00_Clock_OTA\\BLE_OTA_UpgradableStackE"
 5326      452D3232 
 5326      34313130 
 5326      2D30305F 
 5326      436C6F63 
 5327 05fd 78616D70 		.ascii	"xample_Stack01.cydsn\000"
 5327      6C655F53 
 5327      7461636B 
 5327      30312E63 
 5327      7964736E 
 5328              	.LASF31:
 5329 0612 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5329      73436C6B 
 5329      57726974 
 5329      65537973 
 5329      636C6B44 
 5330              	.LASF98:
 5331 0629 43795379 		.ascii	"CySysTickSetCallback\000"
 5331      73546963 
 5331      6B536574 
 5331      43616C6C 
 5331      6261636B 
 5332              	.LASF104:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 155


 5333 063e 43795379 		.ascii	"CySysTickCallbacks\000"
 5333      73546963 
 5333      6B43616C 
 5333      6C626163 
 5333      6B7300
 5334              	.LASF77:
 5335 0651 696D6F54 		.ascii	"imoTrim1Value\000"
 5335      72696D31 
 5335      56616C75 
 5335      6500
 5336              	.LASF103:
 5337 065f 756E6971 		.ascii	"uniqueId\000"
 5337      75654964 
 5337      00
 5338              	.LASF67:
 5339 0668 43794465 		.ascii	"CyDelay\000"
 5339      6C617900 
 5340              	.LASF93:
 5341 0670 43795379 		.ascii	"CySysTickGetClockSource\000"
 5341      73546963 
 5341      6B476574 
 5341      436C6F63 
 5341      6B536F75 
 5342              	.LASF86:
 5343 0688 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5343      73546963 
 5343      6B446973 
 5343      61626C65 
 5343      496E7465 
 5344              	.LASF37:
 5345 06a2 43795379 		.ascii	"CySysLvdDisable\000"
 5345      734C7664 
 5345      44697361 
 5345      626C6500 
 5346              	.LASF107:
 5347 06b2 63796465 		.ascii	"cydelayFreqMhz\000"
 5347      6C617946 
 5347      7265714D 
 5347      687A00
 5348              	.LASF33:
 5349 06c1 43795379 		.ascii	"CySysClkEcoStop\000"
 5349      73436C6B 
 5349      45636F53 
 5349      746F7000 
 5350              	.LASF83:
 5351 06d1 43795379 		.ascii	"CySysTickStop\000"
 5351      73546963 
 5351      6B53746F 
 5351      7000
 5352              	.LASF79:
 5353 06df 74696D65 		.ascii	"timeoutUs\000"
 5353      6F757455 
 5353      7300
 5354              	.LASF32:
 5355 06e9 64697669 		.ascii	"divider\000"
 5355      64657200 
 5356              	.LASF53:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccAr9QEl.s 			page 156


 5357 06f1 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5357      73436C6B 
 5357      57726974 
 5357      6545636F 
 5357      44697600 
 5358              	.LASF15:
 5359 0705 63797374 		.ascii	"cystatus\000"
 5359      61747573 
 5359      00
 5360              	.LASF22:
 5361 070e 43795379 		.ascii	"CySysClkImoStart\000"
 5361      73436C6B 
 5361      496D6F53 
 5361      74617274 
 5361      00
 5362              	.LASF75:
 5363 071f 6E657749 		.ascii	"newImoTrim2Value\000"
 5363      6D6F5472 
 5363      696D3256 
 5363      616C7565 
 5363      00
 5364              	.LASF116:
 5365 0730 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5365      72617465 
 5365      645F536F 
 5365      75726365 
 5365      5C50536F 
 5366              	.LASF70:
 5367 074f 6D696372 		.ascii	"microseconds\000"
 5367      6F736563 
 5367      6F6E6473 
 5367      00
 5368              	.LASF25:
 5369 075c 746D7052 		.ascii	"tmpReg\000"
 5369      656700
 5370              	.LASF87:
 5371 0763 43795379 		.ascii	"CySysTickSetReload\000"
 5371      73546963 
 5371      6B536574 
 5371      52656C6F 
 5371      616400
 5372              	.LASF118:
 5373 0776 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5373      73546963 
 5373      6B536572 
 5373      76696365 
 5373      43616C6C 
 5374              	.LASF36:
 5375 0790 72657475 		.ascii	"returnValue\000"
 5375      726E5661 
 5375      6C756500 
 5376              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
