ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000600u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0F20     		movs	r0, #15
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 2649     		ldr	r1, .L6
  43 000c 0F20     		movs	r0, #15
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 244B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 244B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2349     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2349     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 244A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 234A     		ldr	r2, .L6+24
  68 0030 234B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 234A     		ldr	r2, .L6+32
  72 0036 244B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 234A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 2349     		ldr	r1, .L6+44
  80 0042 244A     		ldr	r2, .L6+48
  81 0044 1160     		str	r1, [r2]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2449     		ldr	r1, .L6+52
  84 0048 244A     		ldr	r2, .L6+56
  85 004a 1160     		str	r1, [r2]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  86              		.loc 1 190 0 discriminator 4
  87 004c 2449     		ldr	r1, .L6+60
  88 004e 0A68     		ldr	r2, [r1]
  89 0050 8020     		movs	r0, #128
  90 0052 4002     		lsls	r0, r0, #9
  91 0054 0243     		orrs	r2, r0
  92 0056 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 6


 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  93              		.loc 1 197 0 discriminator 4
  94 0058 224A     		ldr	r2, .L6+64
  95 005a 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  96              		.loc 1 198 0 discriminator 4
  97 005c 224A     		ldr	r2, .L6+68
  98 005e 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  99              		.loc 1 199 0 discriminator 4
 100 0060 0122     		movs	r2, #1
 101 0062 224B     		ldr	r3, .L6+72
 102 0064 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 103              		.loc 1 206 0 discriminator 4
 104 0066 224A     		ldr	r2, .L6+76
 105 0068 1168     		ldr	r1, [r2]
 106              	.LVL2:
 107 006a 224B     		ldr	r3, .L6+80
 108 006c 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 109              		.loc 1 221 0 discriminator 4
 110 006e 8021     		movs	r1, #128
 111              	.LVL3:
 112 0070 8905     		lsls	r1, r1, #22
 113 0072 0B43     		orrs	r3, r1
 114              	.LVL4:
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 7


 115              		.loc 1 226 0 discriminator 4
 116 0074 1360     		str	r3, [r2]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 117              		.loc 1 229 0 discriminator 4
 118 0076 0222     		movs	r2, #2
 119 0078 1F4B     		ldr	r3, .L6+84
 120              	.LVL5:
 121 007a 1A60     		str	r2, [r3]
 122              	.LVL6:
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 123              		.loc 1 232 0 discriminator 4
 124 007c 0023     		movs	r3, #0
 125 007e 0EE0     		b	.L3
 126              	.LVL7:
 127              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 128              		.loc 1 253 0
 129 0080 9A00     		lsls	r2, r3, #2
 130 0082 1E49     		ldr	r1, .L6+88
 131 0084 5118     		adds	r1, r2, r1
 132 0086 C020     		movs	r0, #192
 133 0088 C000     		lsls	r0, r0, #3
 134 008a 0860     		str	r0, [r1]
 135              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 8


 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 136              		.loc 1 298 0
 137 008c 5800     		lsls	r0, r3, #1
 138 008e 0024     		movs	r4, #0
 139 0090 1B49     		ldr	r1, .L6+92
 140 0092 4452     		strh	r4, [r0, r1]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 141              		.loc 1 311 0
 142 0094 C220     		movs	r0, #194
 143 0096 4000     		lsls	r0, r0, #1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 9


 144 0098 1A49     		ldr	r1, .L6+96
 145 009a 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 146              		.loc 1 232 0
 147 009c 0133     		adds	r3, r3, #1
 148              	.LVL9:
 149              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 150              		.loc 1 232 0 is_stmt 0 discriminator 1
 151 009e 002B     		cmp	r3, #0
 152 00a0 EED0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 153              		.loc 1 314 0 is_stmt 1
 154              		@ sp needed
 155 00a2 10BD     		pop	{r4, pc}
 156              	.L7:
 157              		.align	2
 158              	.L6:
 159 00a4 00000000 		.word	ADC_ISR
 160 00a8 20003A40 		.word	1077542944
 161 00ac 80033A40 		.word	1077543808
 162 00b0 70021053 		.word	1393558128
 163 00b4 70020053 		.word	1392509552
 164 00b8 00003A40 		.word	1077542912
 165 00bc A4000A80 		.word	-2146828124
 166 00c0 04003A40 		.word	1077542916
 167 00c4 0000FF07 		.word	134152192
 168 00c8 18003A40 		.word	1077542936
 169 00cc 1C003A40 		.word	1077542940
 170 00d0 08000400 		.word	262152
 171 00d4 10003A40 		.word	1077542928
 172 00d8 04000400 		.word	262148
 173 00dc 14003A40 		.word	1077542932
 174 00e0 00033A40 		.word	1077543680
 175 00e4 28023A40 		.word	1077543464
 176 00e8 38023A40 		.word	1077543480
 177 00ec 18023A40 		.word	1077543448
 178 00f0 30003A40 		.word	1077542960
 179 00f4 FEFFFFDF 		.word	-536870914
 180 00f8 040F3A40 		.word	1077546756
 181 00fc 80003A40 		.word	1077543040
 182 0100 00000000 		.word	ADC_offset
 183 0104 00000000 		.word	ADC_countsPer10Volt
 184              		.cfi_endproc
 185              	.LFE3:
 186              		.size	ADC_Init, .-ADC_Init
 187              		.section	.text.ADC_Enable,"ax",%progbits
 188              		.align	2
 189              		.global	ADC_Enable
 190              		.code	16
 191              		.thumb_func
 192              		.type	ADC_Enable, %function
 193              	ADC_Enable:
 194              	.LFB4:
 315:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 10


 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 195              		.loc 1 331 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 10B5     		push	{r4, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 203              		.loc 1 332 0
 204 0002 094B     		ldr	r3, .L11
 205 0004 1B68     		ldr	r3, [r3]
 206 0006 002B     		cmp	r3, #0
 207 0008 0CDB     		blt	.L8
 208              	.L10:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 209              		.loc 1 336 0 discriminator 1
 210 000a 084B     		ldr	r3, .L11+4
 211 000c 1B68     		ldr	r3, [r3]
 212 000e 002B     		cmp	r3, #0
 213 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 214              		.loc 1 342 0
 215 0012 054A     		ldr	r2, .L11
 216 0014 1368     		ldr	r3, [r2]
 217 0016 8021     		movs	r1, #128
 218 0018 0906     		lsls	r1, r1, #24
 219 001a 0B43     		orrs	r3, r1
 220 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 221              		.loc 1 345 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 11


 222 001e 0A20     		movs	r0, #10
 223 0020 FFF7FEFF 		bl	CyDelayUs
 224              	.LVL10:
 225              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 226              		.loc 1 347 0
 227              		@ sp needed
 228 0024 10BD     		pop	{r4, pc}
 229              	.L12:
 230 0026 C046     		.align	2
 231              	.L11:
 232 0028 00003A40 		.word	1077542912
 233 002c 08023A40 		.word	1077543432
 234              		.cfi_endproc
 235              	.LFE4:
 236              		.size	ADC_Enable, .-ADC_Enable
 237              		.section	.text.ADC_Start,"ax",%progbits
 238              		.align	2
 239              		.global	ADC_Start
 240              		.code	16
 241              		.thumb_func
 242              		.type	ADC_Start, %function
 243              	ADC_Start:
 244              	.LFB2:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 245              		.loc 1 64 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 10B5     		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 253              		.loc 1 66 0
 254 0002 064B     		ldr	r3, .L15
 255 0004 1B78     		ldrb	r3, [r3]
 256 0006 002B     		cmp	r3, #0
 257 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 258              		.loc 1 68 0
 259 000a FFF7FEFF 		bl	ADC_Init
 260              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 261              		.loc 1 69 0
 262 000e 0122     		movs	r2, #1
 263 0010 024B     		ldr	r3, .L15
 264 0012 1A70     		strb	r2, [r3]
 265              	.L14:
  71:Generated_Source\PSoC4/ADC.c **** }
 266              		.loc 1 71 0
 267 0014 FFF7FEFF 		bl	ADC_Enable
 268              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 269              		.loc 1 72 0
 270              		@ sp needed
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 12


 271 0018 10BD     		pop	{r4, pc}
 272              	.L16:
 273 001a C046     		.align	2
 274              	.L15:
 275 001c 00000000 		.word	.LANCHOR0
 276              		.cfi_endproc
 277              	.LFE2:
 278              		.size	ADC_Start, .-ADC_Start
 279              		.section	.text.ADC_Stop,"ax",%progbits
 280              		.align	2
 281              		.global	ADC_Stop
 282              		.code	16
 283              		.thumb_func
 284              		.type	ADC_Stop, %function
 285              	ADC_Stop:
 286              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 287              		.loc 1 366 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 292              		.loc 1 367 0
 293 0000 024A     		ldr	r2, .L18
 294 0002 1368     		ldr	r3, [r2]
 295 0004 5B00     		lsls	r3, r3, #1
 296 0006 5B08     		lsrs	r3, r3, #1
 297 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 298              		.loc 1 368 0
 299              		@ sp needed
 300 000a 7047     		bx	lr
 301              	.L19:
 302              		.align	2
 303              	.L18:
 304 000c 00003A40 		.word	1077542912
 305              		.cfi_endproc
 306              	.LFE5:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 13


 307              		.size	ADC_Stop, .-ADC_Stop
 308              		.section	.text.ADC_StartConvert,"ax",%progbits
 309              		.align	2
 310              		.global	ADC_StartConvert
 311              		.code	16
 312              		.thumb_func
 313              		.type	ADC_StartConvert, %function
 314              	ADC_StartConvert:
 315              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 316              		.loc 1 392 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 321              		.loc 1 396 0
 322 0000 0122     		movs	r2, #1
 323 0002 014B     		ldr	r3, .L21
 324 0004 1A60     		str	r2, [r3]
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 325              		.loc 1 399 0
 326              		@ sp needed
 327 0006 7047     		bx	lr
 328              	.L22:
 329              		.align	2
 330              	.L21:
 331 0008 24003A40 		.word	1077542948
 332              		.cfi_endproc
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 14


 333              	.LFE6:
 334              		.size	ADC_StartConvert, .-ADC_StartConvert
 335              		.section	.text.ADC_StopConvert,"ax",%progbits
 336              		.align	2
 337              		.global	ADC_StopConvert
 338              		.code	16
 339              		.thumb_func
 340              		.type	ADC_StopConvert, %function
 341              	ADC_StopConvert:
 342              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 343              		.loc 1 417 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 348              		.loc 1 421 0
 349              		@ sp needed
 350 0000 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE7:
 353              		.size	ADC_StopConvert, .-ADC_StopConvert
 354 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 355              		.align	2
 356              		.global	ADC_IsEndConversion
 357              		.code	16
 358              		.thumb_func
 359              		.type	ADC_IsEndConversion, %function
 360              	ADC_IsEndConversion:
 361              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 15


 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 362              		.loc 1 451 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367              	.LVL13:
 368 0000 0200     		movs	r2, r0
 369              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 370              		.loc 1 454 0
 371 0002 8307     		lsls	r3, r0, #30
 372 0004 0CD0     		beq	.L28
 373              	.LVL15:
 374              	.L27:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 375              		.loc 1 458 0 discriminator 2
 376 0006 074B     		ldr	r3, .L29
 377 0008 1B68     		ldr	r3, [r3]
 378 000a 0120     		movs	r0, #1
 379 000c 1840     		ands	r0, r3
 380              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 381              		.loc 1 459 0 discriminator 2
 382 000e 01D1     		bne	.L26
 383              		.loc 1 459 0 is_stmt 0 discriminator 1
 384 0010 9307     		lsls	r3, r2, #30
 385 0012 F8D4     		bmi	.L27
 386              	.L26:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 16


 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 387              		.loc 1 461 0 is_stmt 1
 388 0014 0028     		cmp	r0, #0
 389 0016 04D0     		beq	.L25
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 390              		.loc 1 464 0
 391 0018 0122     		movs	r2, #1
 392              	.LVL17:
 393 001a 024B     		ldr	r3, .L29
 394 001c 1A60     		str	r2, [r3]
 395 001e 00E0     		b	.L25
 396              	.LVL18:
 397              	.L28:
 452:Generated_Source\PSoC4/ADC.c **** 
 398              		.loc 1 452 0
 399 0020 0020     		movs	r0, #0
 400              	.LVL19:
 401              	.L25:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 402              		.loc 1 486 0
 403              		@ sp needed
 404 0022 7047     		bx	lr
 405              	.L30:
 406              		.align	2
 407              	.L29:
 408 0024 10023A40 		.word	1077543440
 409              		.cfi_endproc
 410              	.LFE8:
 411              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 412              		.section	.text.ADC_GetResult16,"ax",%progbits
 413              		.align	2
 414              		.global	ADC_GetResult16
 415              		.code	16
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 17


 416              		.thumb_func
 417              		.type	ADC_GetResult16, %function
 418              	ADC_GetResult16:
 419              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 420              		.loc 1 505 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              	.LVL20:
 425 0000 10B5     		push	{r4, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 4, -8
 428              		.cfi_offset 14, -4
 429 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 430              		.loc 1 509 0
 431 0004 02D0     		beq	.L32
 432              		.loc 1 509 0 is_stmt 0 discriminator 1
 433 0006 0020     		movs	r0, #0
 434              	.LVL21:
 435 0008 FFF7FEFF 		bl	CyHalt
 436              	.LVL22:
 437              	.L32:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 438              		.loc 1 511 0 is_stmt 1
 439 000c 002C     		cmp	r4, #0
 440 000e 07D1     		bne	.L34
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 441              		.loc 1 513 0
 442 0010 A400     		lsls	r4, r4, #2
 443              	.LVL23:
 444 0012 054B     		ldr	r3, .L35
 445 0014 9C46     		mov	ip, r3
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 18


 446 0016 6444     		add	r4, r4, ip
 447 0018 2068     		ldr	r0, [r4]
 448 001a 0004     		lsls	r0, r0, #16
 449 001c 000C     		lsrs	r0, r0, #16
 450              	.LVL24:
 451 001e 00E0     		b	.L33
 452              	.LVL25:
 453              	.L34:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 454              		.loc 1 521 0
 455 0020 0020     		movs	r0, #0
 456              	.LVL26:
 457              	.L33:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 458              		.loc 1 525 0
 459 0022 00B2     		sxth	r0, r0
 460              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
 461              		.loc 1 526 0
 462              		@ sp needed
 463 0024 10BD     		pop	{r4, pc}
 464              	.L36:
 465 0026 C046     		.align	2
 466              	.L35:
 467 0028 80013A40 		.word	1077543296
 468              		.cfi_endproc
 469              	.LFE9:
 470              		.size	ADC_GetResult16, .-ADC_GetResult16
 471              		.section	.text.ADC_SetChanMask,"ax",%progbits
 472              		.align	2
 473              		.global	ADC_SetChanMask
 474              		.code	16
 475              		.thumb_func
 476              		.type	ADC_SetChanMask, %function
 477              	ADC_SetChanMask:
 478              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 19


 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 479              		.loc 1 550 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 485              		.loc 1 551 0
 486 0000 0123     		movs	r3, #1
 487 0002 1840     		ands	r0, r3
 488              	.LVL29:
 489 0004 014B     		ldr	r3, .L38
 490 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 491              		.loc 1 552 0
 492              		@ sp needed
 493 0008 7047     		bx	lr
 494              	.L39:
 495 000a C046     		.align	2
 496              	.L38:
 497 000c 20003A40 		.word	1077542944
 498              		.cfi_endproc
 499              	.LFE10:
 500              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 501              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 502              		.align	2
 503              		.global	ADC_SetLowLimit
 504              		.code	16
 505              		.thumb_func
 506              		.type	ADC_SetLowLimit, %function
 507              	ADC_SetLowLimit:
 508              	.LFB11:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 20


 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 509              		.loc 1 594 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 515              		.loc 1 595 0
 516 0000 054A     		ldr	r2, .L41
 517 0002 1368     		ldr	r3, [r2]
 518 0004 1B0C     		lsrs	r3, r3, #16
 519 0006 1B04     		lsls	r3, r3, #16
 520 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 521              		.loc 1 596 0
 522 000a 1368     		ldr	r3, [r2]
 523 000c 0004     		lsls	r0, r0, #16
 524              	.LVL31:
 525 000e 000C     		lsrs	r0, r0, #16
 526 0010 1843     		orrs	r0, r3
 527 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 528              		.loc 1 597 0
 529              		@ sp needed
 530 0014 7047     		bx	lr
 531              	.L42:
 532 0016 C046     		.align	2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 21


 533              	.L41:
 534 0018 18003A40 		.word	1077542936
 535              		.cfi_endproc
 536              	.LFE11:
 537              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 538              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 539              		.align	2
 540              		.global	ADC_SetHighLimit
 541              		.code	16
 542              		.thumb_func
 543              		.type	ADC_SetHighLimit, %function
 544              	ADC_SetHighLimit:
 545              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 546              		.loc 1 615 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551              	.LVL32:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 552              		.loc 1 616 0
 553 0000 044A     		ldr	r2, .L44
 554 0002 1368     		ldr	r3, [r2]
 555 0004 1B04     		lsls	r3, r3, #16
 556 0006 1B0C     		lsrs	r3, r3, #16
 557 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 558              		.loc 1 617 0
 559 000a 1368     		ldr	r3, [r2]
 560 000c 0004     		lsls	r0, r0, #16
 561              	.LVL33:
 562 000e 1843     		orrs	r0, r3
 563 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 564              		.loc 1 618 0
 565              		@ sp needed
 566 0012 7047     		bx	lr
 567              	.L45:
 568              		.align	2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 22


 569              	.L44:
 570 0014 18003A40 		.word	1077542936
 571              		.cfi_endproc
 572              	.LFE12:
 573              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 574              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 575              		.align	2
 576              		.global	ADC_SetLimitMask
 577              		.code	16
 578              		.thumb_func
 579              		.type	ADC_SetLimitMask, %function
 580              	ADC_SetLimitMask:
 581              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 582              		.loc 1 639 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL34:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 588              		.loc 1 640 0
 589 0000 0123     		movs	r3, #1
 590 0002 1840     		ands	r0, r3
 591              	.LVL35:
 592 0004 014B     		ldr	r3, .L47
 593 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 594              		.loc 1 641 0
 595              		@ sp needed
 596 0008 7047     		bx	lr
 597              	.L48:
 598 000a C046     		.align	2
 599              	.L47:
 600 000c 38023A40 		.word	1077543480
 601              		.cfi_endproc
 602              	.LFE13:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 23


 603              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 604              		.section	.text.ADC_SetSatMask,"ax",%progbits
 605              		.align	2
 606              		.global	ADC_SetSatMask
 607              		.code	16
 608              		.thumb_func
 609              		.type	ADC_SetSatMask, %function
 610              	ADC_SetSatMask:
 611              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 612              		.loc 1 662 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 618              		.loc 1 663 0
 619 0000 0123     		movs	r3, #1
 620 0002 1840     		ands	r0, r3
 621              	.LVL37:
 622 0004 014B     		ldr	r3, .L50
 623 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 624              		.loc 1 664 0
 625              		@ sp needed
 626 0008 7047     		bx	lr
 627              	.L51:
 628 000a C046     		.align	2
 629              	.L50:
 630 000c 28023A40 		.word	1077543464
 631              		.cfi_endproc
 632              	.LFE14:
 633              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 634              		.section	.text.ADC_SetOffset,"ax",%progbits
 635              		.align	2
 636              		.global	ADC_SetOffset
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 24


 637              		.code	16
 638              		.thumb_func
 639              		.type	ADC_SetOffset, %function
 640              	ADC_SetOffset:
 641              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 642              		.loc 1 690 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL38:
 647 0000 70B5     		push	{r4, r5, r6, lr}
 648              		.cfi_def_cfa_offset 16
 649              		.cfi_offset 4, -16
 650              		.cfi_offset 5, -12
 651              		.cfi_offset 6, -8
 652              		.cfi_offset 14, -4
 653 0002 0400     		movs	r4, r0
 654 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 655              		.loc 1 692 0
 656 0006 0028     		cmp	r0, #0
 657 0008 02D0     		beq	.L53
 658              		.loc 1 692 0 is_stmt 0 discriminator 1
 659 000a 0020     		movs	r0, #0
 660              	.LVL39:
 661 000c FFF7FEFF 		bl	CyHalt
 662              	.LVL40:
 663              	.L53:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 25


 664              		.loc 1 694 0 is_stmt 1
 665 0010 6400     		lsls	r4, r4, #1
 666              	.LVL41:
 667 0012 014B     		ldr	r3, .L54
 668 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 669              		.loc 1 695 0
 670              		@ sp needed
 671 0016 70BD     		pop	{r4, r5, r6, pc}
 672              	.L55:
 673              		.align	2
 674              	.L54:
 675 0018 00000000 		.word	ADC_offset
 676              		.cfi_endproc
 677              	.LFE15:
 678              		.size	ADC_SetOffset, .-ADC_SetOffset
 679              		.section	.text.ADC_SetGain,"ax",%progbits
 680              		.align	2
 681              		.global	ADC_SetGain
 682              		.code	16
 683              		.thumb_func
 684              		.type	ADC_SetGain, %function
 685              	ADC_SetGain:
 686              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 687              		.loc 1 724 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 26


 691              	.LVL42:
 692 0000 70B5     		push	{r4, r5, r6, lr}
 693              		.cfi_def_cfa_offset 16
 694              		.cfi_offset 4, -16
 695              		.cfi_offset 5, -12
 696              		.cfi_offset 6, -8
 697              		.cfi_offset 14, -4
 698 0002 0400     		movs	r4, r0
 699 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 700              		.loc 1 726 0
 701 0006 0028     		cmp	r0, #0
 702 0008 02D0     		beq	.L57
 703              		.loc 1 726 0 is_stmt 0 discriminator 1
 704 000a 0020     		movs	r0, #0
 705              	.LVL43:
 706 000c FFF7FEFF 		bl	CyHalt
 707              	.LVL44:
 708              	.L57:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 709              		.loc 1 728 0 is_stmt 1
 710 0010 A400     		lsls	r4, r4, #2
 711              	.LVL45:
 712 0012 014B     		ldr	r3, .L58
 713 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 714              		.loc 1 729 0
 715              		@ sp needed
 716              	.LVL46:
 717 0016 70BD     		pop	{r4, r5, r6, pc}
 718              	.L59:
 719              		.align	2
 720              	.L58:
 721 0018 00000000 		.word	ADC_countsPer10Volt
 722              		.cfi_endproc
 723              	.LFE16:
 724              		.size	ADC_SetGain, .-ADC_SetGain
 725              		.global	__aeabi_idiv
 726              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 727              		.align	2
 728              		.global	ADC_CountsTo_mVolts
 729              		.code	16
 730              		.thumb_func
 731              		.type	ADC_CountsTo_mVolts, %function
 732              	ADC_CountsTo_mVolts:
 733              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 27


 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 734              		.loc 1 757 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              	.LVL47:
 739 0000 70B5     		push	{r4, r5, r6, lr}
 740              		.cfi_def_cfa_offset 16
 741              		.cfi_offset 4, -16
 742              		.cfi_offset 5, -12
 743              		.cfi_offset 6, -8
 744              		.cfi_offset 14, -4
 745 0002 0400     		movs	r4, r0
 746 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 747              		.loc 1 761 0
 748 0006 0028     		cmp	r0, #0
 749 0008 02D0     		beq	.L61
 750              		.loc 1 761 0 is_stmt 0 discriminator 1
 751 000a 0020     		movs	r0, #0
 752              	.LVL48:
 753 000c FFF7FEFF 		bl	CyHalt
 754              	.LVL49:
 755              	.L61:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 756              		.loc 1 772 0 is_stmt 1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 28


 757 0010 6300     		lsls	r3, r4, #1
 758 0012 0F4A     		ldr	r2, .L64
 759 0014 995A     		ldrh	r1, [r3, r2]
 760 0016 09B2     		sxth	r1, r1
 761 0018 691A     		subs	r1, r5, r1
 762 001a 09B2     		sxth	r1, r1
 763              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 764              		.loc 1 774 0
 765 001c 0D48     		ldr	r0, .L64+4
 766 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 767              		.loc 1 775 0
 768 0020 0029     		cmp	r1, #0
 769 0022 06DD     		ble	.L62
 770              		.loc 1 775 0 is_stmt 0 discriminator 1
 771 0024 A300     		lsls	r3, r4, #2
 772 0026 0C4A     		ldr	r2, .L64+8
 773 0028 9A58     		ldr	r2, [r3, r2]
 774 002a D30F     		lsrs	r3, r2, #31
 775 002c 9A18     		adds	r2, r3, r2
 776 002e 5310     		asrs	r3, r2, #1
 777 0030 06E0     		b	.L63
 778              	.L62:
 779              		.loc 1 775 0 discriminator 2
 780 0032 A300     		lsls	r3, r4, #2
 781 0034 084A     		ldr	r2, .L64+8
 782 0036 9A58     		ldr	r2, [r3, r2]
 783 0038 D30F     		lsrs	r3, r2, #31
 784 003a 9A18     		adds	r2, r3, r2
 785 003c 5210     		asrs	r2, r2, #1
 786 003e 5342     		rsbs	r3, r2, #0
 787              	.L63:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 788              		.loc 1 774 0 is_stmt 1
 789 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 790              		.loc 1 776 0
 791 0042 A400     		lsls	r4, r4, #2
 792              	.LVL51:
 793 0044 044B     		ldr	r3, .L64+8
 794 0046 E158     		ldr	r1, [r4, r3]
 795              	.LVL52:
 796 0048 FFF7FEFF 		bl	__aeabi_idiv
 797              	.LVL53:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 798              		.loc 1 774 0
 799 004c 00B2     		sxth	r0, r0
 800              	.LVL54:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 801              		.loc 1 779 0
 802              		@ sp needed
 803 004e 70BD     		pop	{r4, r5, r6, pc}
 804              	.L65:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 29


 805              		.align	2
 806              	.L64:
 807 0050 00000000 		.word	ADC_offset
 808 0054 10270000 		.word	10000
 809 0058 00000000 		.word	ADC_countsPer10Volt
 810              		.cfi_endproc
 811              	.LFE17:
 812              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 813              		.global	__aeabi_lmul
 814              		.global	__aeabi_ldivmod
 815              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 816              		.align	2
 817              		.global	ADC_CountsTo_uVolts
 818              		.code	16
 819              		.thumb_func
 820              		.type	ADC_CountsTo_uVolts, %function
 821              	ADC_CountsTo_uVolts:
 822              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 823              		.loc 1 811 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              	.LVL55:
 828 0000 70B5     		push	{r4, r5, r6, lr}
 829              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 30


 830              		.cfi_offset 4, -16
 831              		.cfi_offset 5, -12
 832              		.cfi_offset 6, -8
 833              		.cfi_offset 14, -4
 834 0002 0500     		movs	r5, r0
 835 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 836              		.loc 1 815 0
 837 0006 0028     		cmp	r0, #0
 838 0008 02D0     		beq	.L67
 839              		.loc 1 815 0 is_stmt 0 discriminator 1
 840 000a 0020     		movs	r0, #0
 841              	.LVL56:
 842 000c FFF7FEFF 		bl	CyHalt
 843              	.LVL57:
 844              	.L67:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 845              		.loc 1 826 0 is_stmt 1
 846 0010 6A00     		lsls	r2, r5, #1
 847 0012 084B     		ldr	r3, .L68
 848 0014 D05A     		ldrh	r0, [r2, r3]
 849 0016 00B2     		sxth	r0, r0
 850 0018 201A     		subs	r0, r4, r0
 851 001a 00B2     		sxth	r0, r0
 852              	.LVL58:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 853              		.loc 1 828 0
 854 001c C117     		asrs	r1, r0, #31
 855 001e 064A     		ldr	r2, .L68+4
 856 0020 0023     		movs	r3, #0
 857 0022 FFF7FEFF 		bl	__aeabi_lmul
 858              	.LVL59:
 859 0026 AD00     		lsls	r5, r5, #2
 860              	.LVL60:
 861 0028 044B     		ldr	r3, .L68+8
 862 002a EA58     		ldr	r2, [r5, r3]
 863 002c D317     		asrs	r3, r2, #31
 864 002e FFF7FEFF 		bl	__aeabi_ldivmod
 865              	.LVL61:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 866              		.loc 1 831 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 31


 867              		@ sp needed
 868 0032 70BD     		pop	{r4, r5, r6, pc}
 869              	.L69:
 870              		.align	2
 871              	.L68:
 872 0034 00000000 		.word	ADC_offset
 873 0038 80969800 		.word	10000000
 874 003c 00000000 		.word	ADC_countsPer10Volt
 875              		.cfi_endproc
 876              	.LFE18:
 877              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 878              		.global	__aeabi_i2f
 879              		.global	__aeabi_fmul
 880              		.global	__aeabi_fdiv
 881              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 882              		.align	2
 883              		.global	ADC_CountsTo_Volts
 884              		.code	16
 885              		.thumb_func
 886              		.type	ADC_CountsTo_Volts, %function
 887              	ADC_CountsTo_Volts:
 888              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 889              		.loc 1 856 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL62:
 894 0000 70B5     		push	{r4, r5, r6, lr}
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 32


 899              		.cfi_offset 14, -4
 900 0002 0400     		movs	r4, r0
 901 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 902              		.loc 1 860 0
 903 0006 0028     		cmp	r0, #0
 904 0008 02D0     		beq	.L71
 905              		.loc 1 860 0 is_stmt 0 discriminator 1
 906 000a 0020     		movs	r0, #0
 907              	.LVL63:
 908 000c FFF7FEFF 		bl	CyHalt
 909              	.LVL64:
 910              	.L71:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 911              		.loc 1 871 0 is_stmt 1
 912 0010 6200     		lsls	r2, r4, #1
 913 0012 0A4B     		ldr	r3, .L72
 914 0014 D05A     		ldrh	r0, [r2, r3]
 915 0016 00B2     		sxth	r0, r0
 916 0018 281A     		subs	r0, r5, r0
 917 001a 00B2     		sxth	r0, r0
 918              	.LVL65:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 919              		.loc 1 873 0
 920 001c FFF7FEFF 		bl	__aeabi_i2f
 921              	.LVL66:
 922 0020 0749     		ldr	r1, .L72+4
 923 0022 FFF7FEFF 		bl	__aeabi_fmul
 924              	.LVL67:
 925 0026 051C     		adds	r5, r0, #0
 926 0028 A400     		lsls	r4, r4, #2
 927              	.LVL68:
 928 002a 064B     		ldr	r3, .L72+8
 929 002c E058     		ldr	r0, [r4, r3]
 930 002e FFF7FEFF 		bl	__aeabi_i2f
 931              	.LVL69:
 932 0032 011C     		adds	r1, r0, #0
 933 0034 281C     		adds	r0, r5, #0
 934 0036 FFF7FEFF 		bl	__aeabi_fdiv
 935              	.LVL70:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 33


 936              		.loc 1 876 0
 937              		@ sp needed
 938 003a 70BD     		pop	{r4, r5, r6, pc}
 939              	.L73:
 940              		.align	2
 941              	.L72:
 942 003c 00000000 		.word	ADC_offset
 943 0040 00002041 		.word	1092616192
 944 0044 00000000 		.word	ADC_countsPer10Volt
 945              		.cfi_endproc
 946              	.LFE19:
 947              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 948              		.comm	ADC_countsPer10Volt,4,4
 949              		.comm	ADC_offset,2,4
 950              		.global	ADC_initVar
 951              		.bss
 952              		.set	.LANCHOR0,. + 0
 953              		.type	ADC_initVar, %object
 954              		.size	ADC_initVar, 1
 955              	ADC_initVar:
 956 0000 00       		.space	1
 957              		.text
 958              	.Letext0:
 959              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 960              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 961              		.section	.debug_info,"",%progbits
 962              	.Ldebug_info0:
 963 0000 75050000 		.4byte	0x575
 964 0004 0400     		.2byte	0x4
 965 0006 00000000 		.4byte	.Ldebug_abbrev0
 966 000a 04       		.byte	0x4
 967 000b 01       		.uleb128 0x1
 968 000c 32000000 		.4byte	.LASF63
 969 0010 0C       		.byte	0xc
 970 0011 04030000 		.4byte	.LASF64
 971 0015 EA010000 		.4byte	.LASF65
 972 0019 00000000 		.4byte	.Ldebug_ranges0+0
 973 001d 00000000 		.4byte	0
 974 0021 00000000 		.4byte	.Ldebug_line0
 975 0025 02       		.uleb128 0x2
 976 0026 01       		.byte	0x1
 977 0027 06       		.byte	0x6
 978 0028 F6000000 		.4byte	.LASF0
 979 002c 02       		.uleb128 0x2
 980 002d 01       		.byte	0x1
 981 002e 08       		.byte	0x8
 982 002f 68030000 		.4byte	.LASF1
 983 0033 02       		.uleb128 0x2
 984 0034 02       		.byte	0x2
 985 0035 05       		.byte	0x5
 986 0036 81030000 		.4byte	.LASF2
 987 003a 02       		.uleb128 0x2
 988 003b 02       		.byte	0x2
 989 003c 07       		.byte	0x7
 990 003d D7010000 		.4byte	.LASF3
 991 0041 02       		.uleb128 0x2
 992 0042 04       		.byte	0x4
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 34


 993 0043 05       		.byte	0x5
 994 0044 19010000 		.4byte	.LASF4
 995 0048 02       		.uleb128 0x2
 996 0049 04       		.byte	0x4
 997 004a 07       		.byte	0x7
 998 004b A6010000 		.4byte	.LASF5
 999 004f 02       		.uleb128 0x2
 1000 0050 08       		.byte	0x8
 1001 0051 05       		.byte	0x5
 1002 0052 E8000000 		.4byte	.LASF6
 1003 0056 02       		.uleb128 0x2
 1004 0057 08       		.byte	0x8
 1005 0058 07       		.byte	0x7
 1006 0059 C0000000 		.4byte	.LASF7
 1007 005d 03       		.uleb128 0x3
 1008 005e 04       		.byte	0x4
 1009 005f 05       		.byte	0x5
 1010 0060 696E7400 		.ascii	"int\000"
 1011 0064 02       		.uleb128 0x2
 1012 0065 04       		.byte	0x4
 1013 0066 07       		.byte	0x7
 1014 0067 92010000 		.4byte	.LASF8
 1015 006b 04       		.uleb128 0x4
 1016 006c 4A010000 		.4byte	.LASF9
 1017 0070 02       		.byte	0x2
 1018 0071 D201     		.2byte	0x1d2
 1019 0073 2C000000 		.4byte	0x2c
 1020 0077 04       		.uleb128 0x4
 1021 0078 00000000 		.4byte	.LASF10
 1022 007c 02       		.byte	0x2
 1023 007d D301     		.2byte	0x1d3
 1024 007f 3A000000 		.4byte	0x3a
 1025 0083 04       		.uleb128 0x4
 1026 0084 61010000 		.4byte	.LASF11
 1027 0088 02       		.byte	0x2
 1028 0089 D401     		.2byte	0x1d4
 1029 008b 48000000 		.4byte	0x48
 1030 008f 04       		.uleb128 0x4
 1031 0090 D3030000 		.4byte	.LASF12
 1032 0094 02       		.byte	0x2
 1033 0095 D601     		.2byte	0x1d6
 1034 0097 33000000 		.4byte	0x33
 1035 009b 04       		.uleb128 0x4
 1036 009c 09010000 		.4byte	.LASF13
 1037 00a0 02       		.byte	0x2
 1038 00a1 D701     		.2byte	0x1d7
 1039 00a3 41000000 		.4byte	0x41
 1040 00a7 04       		.uleb128 0x4
 1041 00a8 92020000 		.4byte	.LASF14
 1042 00ac 02       		.byte	0x2
 1043 00ad D801     		.2byte	0x1d8
 1044 00af B3000000 		.4byte	0xb3
 1045 00b3 02       		.uleb128 0x2
 1046 00b4 04       		.byte	0x4
 1047 00b5 04       		.byte	0x4
 1048 00b6 2D030000 		.4byte	.LASF15
 1049 00ba 02       		.uleb128 0x2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 35


 1050 00bb 08       		.byte	0x8
 1051 00bc 04       		.byte	0x4
 1052 00bd 5A010000 		.4byte	.LASF16
 1053 00c1 04       		.uleb128 0x4
 1054 00c2 DD020000 		.4byte	.LASF17
 1055 00c6 02       		.byte	0x2
 1056 00c7 DD01     		.2byte	0x1dd
 1057 00c9 4F000000 		.4byte	0x4f
 1058 00cd 02       		.uleb128 0x2
 1059 00ce 01       		.byte	0x1
 1060 00cf 08       		.byte	0x8
 1061 00d0 9F030000 		.4byte	.LASF18
 1062 00d4 04       		.uleb128 0x4
 1063 00d5 8C020000 		.4byte	.LASF19
 1064 00d9 02       		.byte	0x2
 1065 00da 7E02     		.2byte	0x27e
 1066 00dc E0000000 		.4byte	0xe0
 1067 00e0 05       		.uleb128 0x5
 1068 00e1 83000000 		.4byte	0x83
 1069 00e5 02       		.uleb128 0x2
 1070 00e6 08       		.byte	0x8
 1071 00e7 04       		.byte	0x4
 1072 00e8 AC020000 		.4byte	.LASF20
 1073 00ec 02       		.uleb128 0x2
 1074 00ed 04       		.byte	0x4
 1075 00ee 07       		.byte	0x7
 1076 00ef 9A020000 		.4byte	.LASF21
 1077 00f3 06       		.uleb128 0x6
 1078 00f4 29000000 		.4byte	.LASF25
 1079 00f8 01       		.byte	0x1
 1080 00f9 5E       		.byte	0x5e
 1081 00fa 00000000 		.4byte	.LFB3
 1082 00fe 08010000 		.4byte	.LFE3-.LFB3
 1083 0102 01       		.uleb128 0x1
 1084 0103 9C       		.byte	0x9c
 1085 0104 5D010000 		.4byte	0x15d
 1086 0108 07       		.uleb128 0x7
 1087 0109 94030000 		.4byte	.LASF22
 1088 010d 01       		.byte	0x1
 1089 010e 60       		.byte	0x60
 1090 010f 83000000 		.4byte	0x83
 1091 0113 00000000 		.4byte	.LLST0
 1092 0117 07       		.uleb128 0x7
 1093 0118 CD010000 		.4byte	.LASF23
 1094 011c 01       		.byte	0x1
 1095 011d 61       		.byte	0x61
 1096 011e 83000000 		.4byte	0x83
 1097 0122 1F000000 		.4byte	.LLST1
 1098 0126 07       		.uleb128 0x7
 1099 0127 0F000000 		.4byte	.LASF24
 1100 012b 01       		.byte	0x1
 1101 012c 62       		.byte	0x62
 1102 012d 9B000000 		.4byte	0x9b
 1103 0131 60000000 		.4byte	.LLST2
 1104 0135 08       		.uleb128 0x8
 1105 0136 0A000000 		.4byte	.LVL0
 1106 013a 4C050000 		.4byte	0x54c
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 36


 1107 013e 4D010000 		.4byte	0x14d
 1108 0142 09       		.uleb128 0x9
 1109 0143 01       		.uleb128 0x1
 1110 0144 50       		.byte	0x50
 1111 0145 01       		.uleb128 0x1
 1112 0146 3F       		.byte	0x3f
 1113 0147 09       		.uleb128 0x9
 1114 0148 01       		.uleb128 0x1
 1115 0149 51       		.byte	0x51
 1116 014a 01       		.uleb128 0x1
 1117 014b 33       		.byte	0x33
 1118 014c 00       		.byte	0
 1119 014d 0A       		.uleb128 0xa
 1120 014e 12000000 		.4byte	.LVL1
 1121 0152 57050000 		.4byte	0x557
 1122 0156 09       		.uleb128 0x9
 1123 0157 01       		.uleb128 0x1
 1124 0158 50       		.byte	0x50
 1125 0159 01       		.uleb128 0x1
 1126 015a 3F       		.byte	0x3f
 1127 015b 00       		.byte	0
 1128 015c 00       		.byte	0
 1129 015d 0B       		.uleb128 0xb
 1130 015e C8030000 		.4byte	.LASF26
 1131 0162 01       		.byte	0x1
 1132 0163 4A01     		.2byte	0x14a
 1133 0165 00000000 		.4byte	.LFB4
 1134 0169 30000000 		.4byte	.LFE4-.LFB4
 1135 016d 01       		.uleb128 0x1
 1136 016e 9C       		.byte	0x9c
 1137 016f 83010000 		.4byte	0x183
 1138 0173 0A       		.uleb128 0xa
 1139 0174 24000000 		.4byte	.LVL10
 1140 0178 62050000 		.4byte	0x562
 1141 017c 09       		.uleb128 0x9
 1142 017d 01       		.uleb128 0x1
 1143 017e 50       		.byte	0x50
 1144 017f 01       		.uleb128 0x1
 1145 0180 3A       		.byte	0x3a
 1146 0181 00       		.byte	0
 1147 0182 00       		.byte	0
 1148 0183 06       		.uleb128 0x6
 1149 0184 0F010000 		.4byte	.LASF27
 1150 0188 01       		.byte	0x1
 1151 0189 3F       		.byte	0x3f
 1152 018a 00000000 		.4byte	.LFB2
 1153 018e 20000000 		.4byte	.LFE2-.LFB2
 1154 0192 01       		.uleb128 0x1
 1155 0193 9C       		.byte	0x9c
 1156 0194 AB010000 		.4byte	0x1ab
 1157 0198 0C       		.uleb128 0xc
 1158 0199 0E000000 		.4byte	.LVL11
 1159 019d F3000000 		.4byte	0xf3
 1160 01a1 0C       		.uleb128 0xc
 1161 01a2 18000000 		.4byte	.LVL12
 1162 01a6 5D010000 		.4byte	0x15d
 1163 01aa 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 37


 1164 01ab 0D       		.uleb128 0xd
 1165 01ac 8B030000 		.4byte	.LASF28
 1166 01b0 01       		.byte	0x1
 1167 01b1 6D01     		.2byte	0x16d
 1168 01b3 00000000 		.4byte	.LFB5
 1169 01b7 10000000 		.4byte	.LFE5-.LFB5
 1170 01bb 01       		.uleb128 0x1
 1171 01bc 9C       		.byte	0x9c
 1172 01bd 0D       		.uleb128 0xd
 1173 01be D7000000 		.4byte	.LASF29
 1174 01c2 01       		.byte	0x1
 1175 01c3 8701     		.2byte	0x187
 1176 01c5 00000000 		.4byte	.LFB6
 1177 01c9 0C000000 		.4byte	.LFE6-.LFB6
 1178 01cd 01       		.uleb128 0x1
 1179 01ce 9C       		.byte	0x9c
 1180 01cf 0D       		.uleb128 0xd
 1181 01d0 75020000 		.4byte	.LASF30
 1182 01d4 01       		.byte	0x1
 1183 01d5 A001     		.2byte	0x1a0
 1184 01d7 00000000 		.4byte	.LFB7
 1185 01db 02000000 		.4byte	.LFE7-.LFB7
 1186 01df 01       		.uleb128 0x1
 1187 01e0 9C       		.byte	0x9c
 1188 01e1 0E       		.uleb128 0xe
 1189 01e2 C9020000 		.4byte	.LASF32
 1190 01e6 01       		.byte	0x1
 1191 01e7 C201     		.2byte	0x1c2
 1192 01e9 83000000 		.4byte	0x83
 1193 01ed 00000000 		.4byte	.LFB8
 1194 01f1 28000000 		.4byte	.LFE8-.LFB8
 1195 01f5 01       		.uleb128 0x1
 1196 01f6 9C       		.byte	0x9c
 1197 01f7 1C020000 		.4byte	0x21c
 1198 01fb 0F       		.uleb128 0xf
 1199 01fc 79010000 		.4byte	.LASF34
 1200 0200 01       		.byte	0x1
 1201 0201 C201     		.2byte	0x1c2
 1202 0203 83000000 		.4byte	0x83
 1203 0207 76000000 		.4byte	.LLST3
 1204 020b 10       		.uleb128 0x10
 1205 020c 02010000 		.4byte	.LASF31
 1206 0210 01       		.byte	0x1
 1207 0211 C401     		.2byte	0x1c4
 1208 0213 83000000 		.4byte	0x83
 1209 0217 BB000000 		.4byte	.LLST4
 1210 021b 00       		.byte	0
 1211 021c 0E       		.uleb128 0xe
 1212 021d EE030000 		.4byte	.LASF33
 1213 0221 01       		.byte	0x1
 1214 0222 F801     		.2byte	0x1f8
 1215 0224 8F000000 		.4byte	0x8f
 1216 0228 00000000 		.4byte	.LFB9
 1217 022c 2C000000 		.4byte	.LFE9-.LFB9
 1218 0230 01       		.uleb128 0x1
 1219 0231 9C       		.byte	0x9c
 1220 0232 66020000 		.4byte	0x266
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 38


 1221 0236 0F       		.uleb128 0xf
 1222 0237 9A030000 		.4byte	.LASF35
 1223 023b 01       		.byte	0x1
 1224 023c F801     		.2byte	0x1f8
 1225 023e 83000000 		.4byte	0x83
 1226 0242 F1000000 		.4byte	.LLST5
 1227 0246 10       		.uleb128 0x10
 1228 0247 E7030000 		.4byte	.LASF36
 1229 024b 01       		.byte	0x1
 1230 024c FA01     		.2byte	0x1fa
 1231 024e 83000000 		.4byte	0x83
 1232 0252 36010000 		.4byte	.LLST6
 1233 0256 0A       		.uleb128 0xa
 1234 0257 0C000000 		.4byte	.LVL22
 1235 025b 6D050000 		.4byte	0x56d
 1236 025f 09       		.uleb128 0x9
 1237 0260 01       		.uleb128 0x1
 1238 0261 50       		.byte	0x50
 1239 0262 01       		.uleb128 0x1
 1240 0263 30       		.byte	0x30
 1241 0264 00       		.byte	0
 1242 0265 00       		.byte	0
 1243 0266 0B       		.uleb128 0xb
 1244 0267 F4020000 		.4byte	.LASF37
 1245 026b 01       		.byte	0x1
 1246 026c 2502     		.2byte	0x225
 1247 026e 00000000 		.4byte	.LFB10
 1248 0272 10000000 		.4byte	.LFE10-.LFB10
 1249 0276 01       		.uleb128 0x1
 1250 0277 9C       		.byte	0x9c
 1251 0278 8D020000 		.4byte	0x28d
 1252 027c 0F       		.uleb128 0xf
 1253 027d 68010000 		.4byte	.LASF38
 1254 0281 01       		.byte	0x1
 1255 0282 2502     		.2byte	0x225
 1256 0284 83000000 		.4byte	0x83
 1257 0288 54010000 		.4byte	.LLST7
 1258 028c 00       		.byte	0
 1259 028d 0B       		.uleb128 0xb
 1260 028e 51030000 		.4byte	.LASF39
 1261 0292 01       		.byte	0x1
 1262 0293 5102     		.2byte	0x251
 1263 0295 00000000 		.4byte	.LFB11
 1264 0299 1C000000 		.4byte	.LFE11-.LFB11
 1265 029d 01       		.uleb128 0x1
 1266 029e 9C       		.byte	0x9c
 1267 029f B4020000 		.4byte	0x2b4
 1268 02a3 0F       		.uleb128 0xf
 1269 02a4 A3020000 		.4byte	.LASF40
 1270 02a8 01       		.byte	0x1
 1271 02a9 5102     		.2byte	0x251
 1272 02ab 83000000 		.4byte	0x83
 1273 02af 75010000 		.4byte	.LLST8
 1274 02b3 00       		.byte	0
 1275 02b4 0B       		.uleb128 0xb
 1276 02b5 B8020000 		.4byte	.LASF41
 1277 02b9 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 39


 1278 02ba 6602     		.2byte	0x266
 1279 02bc 00000000 		.4byte	.LFB12
 1280 02c0 18000000 		.4byte	.LFE12-.LFB12
 1281 02c4 01       		.uleb128 0x1
 1282 02c5 9C       		.byte	0x9c
 1283 02c6 DB020000 		.4byte	0x2db
 1284 02ca 0F       		.uleb128 0xf
 1285 02cb 33030000 		.4byte	.LASF42
 1286 02cf 01       		.byte	0x1
 1287 02d0 6602     		.2byte	0x266
 1288 02d2 83000000 		.4byte	0x83
 1289 02d6 96010000 		.4byte	.LLST9
 1290 02da 00       		.byte	0
 1291 02db 0B       		.uleb128 0xb
 1292 02dc 81010000 		.4byte	.LASF43
 1293 02e0 01       		.byte	0x1
 1294 02e1 7E02     		.2byte	0x27e
 1295 02e3 00000000 		.4byte	.LFB13
 1296 02e7 10000000 		.4byte	.LFE13-.LFB13
 1297 02eb 01       		.uleb128 0x1
 1298 02ec 9C       		.byte	0x9c
 1299 02ed 02030000 		.4byte	0x302
 1300 02f1 0F       		.uleb128 0xf
 1301 02f2 68010000 		.4byte	.LASF38
 1302 02f6 01       		.byte	0x1
 1303 02f7 7E02     		.2byte	0x27e
 1304 02f9 83000000 		.4byte	0x83
 1305 02fd B7010000 		.4byte	.LLST10
 1306 0301 00       		.byte	0
 1307 0302 0B       		.uleb128 0xb
 1308 0303 B8010000 		.4byte	.LASF44
 1309 0307 01       		.byte	0x1
 1310 0308 9502     		.2byte	0x295
 1311 030a 00000000 		.4byte	.LFB14
 1312 030e 10000000 		.4byte	.LFE14-.LFB14
 1313 0312 01       		.uleb128 0x1
 1314 0313 9C       		.byte	0x9c
 1315 0314 29030000 		.4byte	0x329
 1316 0318 0F       		.uleb128 0xf
 1317 0319 68010000 		.4byte	.LASF38
 1318 031d 01       		.byte	0x1
 1319 031e 9502     		.2byte	0x295
 1320 0320 83000000 		.4byte	0x83
 1321 0324 D8010000 		.4byte	.LLST11
 1322 0328 00       		.byte	0
 1323 0329 0B       		.uleb128 0xb
 1324 032a D9030000 		.4byte	.LASF45
 1325 032e 01       		.byte	0x1
 1326 032f B102     		.2byte	0x2b1
 1327 0331 00000000 		.4byte	.LFB15
 1328 0335 1C000000 		.4byte	.LFE15-.LFB15
 1329 0339 01       		.uleb128 0x1
 1330 033a 9C       		.byte	0x9c
 1331 033b 6F030000 		.4byte	0x36f
 1332 033f 0F       		.uleb128 0xf
 1333 0340 9A030000 		.4byte	.LASF35
 1334 0344 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 40


 1335 0345 B102     		.2byte	0x2b1
 1336 0347 83000000 		.4byte	0x83
 1337 034b F9010000 		.4byte	.LLST12
 1338 034f 0F       		.uleb128 0xf
 1339 0350 B7030000 		.4byte	.LASF46
 1340 0354 01       		.byte	0x1
 1341 0355 B102     		.2byte	0x2b1
 1342 0357 8F000000 		.4byte	0x8f
 1343 035b 25020000 		.4byte	.LLST13
 1344 035f 0A       		.uleb128 0xa
 1345 0360 10000000 		.4byte	.LVL40
 1346 0364 6D050000 		.4byte	0x56d
 1347 0368 09       		.uleb128 0x9
 1348 0369 01       		.uleb128 0x1
 1349 036a 50       		.byte	0x50
 1350 036b 01       		.uleb128 0x1
 1351 036c 30       		.byte	0x30
 1352 036d 00       		.byte	0
 1353 036e 00       		.byte	0
 1354 036f 0B       		.uleb128 0xb
 1355 0370 21030000 		.4byte	.LASF47
 1356 0374 01       		.byte	0x1
 1357 0375 D302     		.2byte	0x2d3
 1358 0377 00000000 		.4byte	.LFB16
 1359 037b 1C000000 		.4byte	.LFE16-.LFB16
 1360 037f 01       		.uleb128 0x1
 1361 0380 9C       		.byte	0x9c
 1362 0381 B5030000 		.4byte	0x3b5
 1363 0385 0F       		.uleb128 0xf
 1364 0386 9A030000 		.4byte	.LASF35
 1365 038a 01       		.byte	0x1
 1366 038b D302     		.2byte	0x2d3
 1367 038d 83000000 		.4byte	0x83
 1368 0391 46020000 		.4byte	.LLST14
 1369 0395 0F       		.uleb128 0xf
 1370 0396 07000000 		.4byte	.LASF48
 1371 039a 01       		.byte	0x1
 1372 039b D302     		.2byte	0x2d3
 1373 039d 9B000000 		.4byte	0x9b
 1374 03a1 72020000 		.4byte	.LLST15
 1375 03a5 0A       		.uleb128 0xa
 1376 03a6 10000000 		.4byte	.LVL44
 1377 03aa 6D050000 		.4byte	0x56d
 1378 03ae 09       		.uleb128 0x9
 1379 03af 01       		.uleb128 0x1
 1380 03b0 50       		.byte	0x50
 1381 03b1 01       		.uleb128 0x1
 1382 03b2 30       		.byte	0x30
 1383 03b3 00       		.byte	0
 1384 03b4 00       		.byte	0
 1385 03b5 11       		.uleb128 0x11
 1386 03b6 3D030000 		.4byte	.LASF49
 1387 03ba 01       		.byte	0x1
 1388 03bb F402     		.2byte	0x2f4
 1389 03bd 8F000000 		.4byte	0x8f
 1390 03c1 00000000 		.4byte	.LFB17
 1391 03c5 5C000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 41


 1392 03c9 01       		.uleb128 0x1
 1393 03ca 9C       		.byte	0x9c
 1394 03cb 0D040000 		.4byte	0x40d
 1395 03cf 0F       		.uleb128 0xf
 1396 03d0 9A030000 		.4byte	.LASF35
 1397 03d4 01       		.byte	0x1
 1398 03d5 F402     		.2byte	0x2f4
 1399 03d7 83000000 		.4byte	0x83
 1400 03db A2020000 		.4byte	.LLST16
 1401 03df 0F       		.uleb128 0xf
 1402 03e0 BE030000 		.4byte	.LASF50
 1403 03e4 01       		.byte	0x1
 1404 03e5 F402     		.2byte	0x2f4
 1405 03e7 8F000000 		.4byte	0x8f
 1406 03eb CE020000 		.4byte	.LLST17
 1407 03ef 12       		.uleb128 0x12
 1408 03f0 85020000 		.4byte	.LASF51
 1409 03f4 01       		.byte	0x1
 1410 03f5 F602     		.2byte	0x2f6
 1411 03f7 8F000000 		.4byte	0x8f
 1412 03fb 01       		.uleb128 0x1
 1413 03fc 50       		.byte	0x50
 1414 03fd 0A       		.uleb128 0xa
 1415 03fe 10000000 		.4byte	.LVL49
 1416 0402 6D050000 		.4byte	0x56d
 1417 0406 09       		.uleb128 0x9
 1418 0407 01       		.uleb128 0x1
 1419 0408 50       		.byte	0x50
 1420 0409 01       		.uleb128 0x1
 1421 040a 30       		.byte	0x30
 1422 040b 00       		.byte	0
 1423 040c 00       		.byte	0
 1424 040d 11       		.uleb128 0x11
 1425 040e 22010000 		.4byte	.LASF52
 1426 0412 01       		.byte	0x1
 1427 0413 2A03     		.2byte	0x32a
 1428 0415 9B000000 		.4byte	0x9b
 1429 0419 00000000 		.4byte	.LFB18
 1430 041d 40000000 		.4byte	.LFE18-.LFB18
 1431 0421 01       		.uleb128 0x1
 1432 0422 9C       		.byte	0x9c
 1433 0423 63040000 		.4byte	0x463
 1434 0427 0F       		.uleb128 0xf
 1435 0428 9A030000 		.4byte	.LASF35
 1436 042c 01       		.byte	0x1
 1437 042d 2A03     		.2byte	0x32a
 1438 042f 83000000 		.4byte	0x83
 1439 0433 FA020000 		.4byte	.LLST18
 1440 0437 0F       		.uleb128 0xf
 1441 0438 BE030000 		.4byte	.LASF50
 1442 043c 01       		.byte	0x1
 1443 043d 2A03     		.2byte	0x32a
 1444 043f 8F000000 		.4byte	0x8f
 1445 0443 26030000 		.4byte	.LLST19
 1446 0447 13       		.uleb128 0x13
 1447 0448 9F010000 		.4byte	.LASF66
 1448 044c 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 42


 1449 044d 2C03     		.2byte	0x32c
 1450 044f C1000000 		.4byte	0xc1
 1451 0453 0A       		.uleb128 0xa
 1452 0454 10000000 		.4byte	.LVL57
 1453 0458 6D050000 		.4byte	0x56d
 1454 045c 09       		.uleb128 0x9
 1455 045d 01       		.uleb128 0x1
 1456 045e 50       		.byte	0x50
 1457 045f 01       		.uleb128 0x1
 1458 0460 30       		.byte	0x30
 1459 0461 00       		.byte	0
 1460 0462 00       		.byte	0
 1461 0463 11       		.uleb128 0x11
 1462 0464 16000000 		.4byte	.LASF53
 1463 0468 01       		.byte	0x1
 1464 0469 5703     		.2byte	0x357
 1465 046b A7000000 		.4byte	0xa7
 1466 046f 00000000 		.4byte	.LFB19
 1467 0473 48000000 		.4byte	.LFE19-.LFB19
 1468 0477 01       		.uleb128 0x1
 1469 0478 9C       		.byte	0x9c
 1470 0479 BB040000 		.4byte	0x4bb
 1471 047d 0F       		.uleb128 0xf
 1472 047e 9A030000 		.4byte	.LASF35
 1473 0482 01       		.byte	0x1
 1474 0483 5703     		.2byte	0x357
 1475 0485 83000000 		.4byte	0x83
 1476 0489 52030000 		.4byte	.LLST20
 1477 048d 0F       		.uleb128 0xf
 1478 048e BE030000 		.4byte	.LASF50
 1479 0492 01       		.byte	0x1
 1480 0493 5703     		.2byte	0x357
 1481 0495 8F000000 		.4byte	0x8f
 1482 0499 7E030000 		.4byte	.LLST21
 1483 049d 12       		.uleb128 0x12
 1484 049e C7010000 		.4byte	.LASF54
 1485 04a2 01       		.byte	0x1
 1486 04a3 5903     		.2byte	0x359
 1487 04a5 A7000000 		.4byte	0xa7
 1488 04a9 01       		.uleb128 0x1
 1489 04aa 50       		.byte	0x50
 1490 04ab 0A       		.uleb128 0xa
 1491 04ac 10000000 		.4byte	.LVL64
 1492 04b0 6D050000 		.4byte	0x56d
 1493 04b4 09       		.uleb128 0x9
 1494 04b5 01       		.uleb128 0x1
 1495 04b6 50       		.byte	0x50
 1496 04b7 01       		.uleb128 0x1
 1497 04b8 30       		.byte	0x30
 1498 04b9 00       		.byte	0
 1499 04ba 00       		.byte	0
 1500 04bb 14       		.uleb128 0x14
 1501 04bc CB040000 		.4byte	0x4cb
 1502 04c0 CB040000 		.4byte	0x4cb
 1503 04c4 15       		.uleb128 0x15
 1504 04c5 EC000000 		.4byte	0xec
 1505 04c9 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 43


 1506 04ca 00       		.byte	0
 1507 04cb 16       		.uleb128 0x16
 1508 04cc 83000000 		.4byte	0x83
 1509 04d0 17       		.uleb128 0x17
 1510 04d1 A4030000 		.4byte	.LASF55
 1511 04d5 01       		.byte	0x1
 1512 04d6 21       		.byte	0x21
 1513 04d7 E0040000 		.4byte	0x4e0
 1514 04db 04       		.byte	0x4
 1515 04dc 00       		.byte	0
 1516 04dd 06       		.byte	0x6
 1517 04de 00       		.byte	0
 1518 04df 00       		.byte	0
 1519 04e0 16       		.uleb128 0x16
 1520 04e1 BB040000 		.4byte	0x4bb
 1521 04e5 18       		.uleb128 0x18
 1522 04e6 6D010000 		.4byte	.LASF56
 1523 04ea 01       		.byte	0x1
 1524 04eb 18       		.byte	0x18
 1525 04ec 6B000000 		.4byte	0x6b
 1526 04f0 05       		.uleb128 0x5
 1527 04f1 03       		.byte	0x3
 1528 04f2 00000000 		.4byte	ADC_initVar
 1529 04f6 14       		.uleb128 0x14
 1530 04f7 06050000 		.4byte	0x506
 1531 04fb 06050000 		.4byte	0x506
 1532 04ff 15       		.uleb128 0x15
 1533 0500 EC000000 		.4byte	0xec
 1534 0504 00       		.byte	0
 1535 0505 00       		.byte	0
 1536 0506 05       		.uleb128 0x5
 1537 0507 8F000000 		.4byte	0x8f
 1538 050b 18       		.uleb128 0x18
 1539 050c 76030000 		.4byte	.LASF57
 1540 0510 01       		.byte	0x1
 1541 0511 19       		.byte	0x19
 1542 0512 1C050000 		.4byte	0x51c
 1543 0516 05       		.uleb128 0x5
 1544 0517 03       		.byte	0x3
 1545 0518 00000000 		.4byte	ADC_offset
 1546 051c 05       		.uleb128 0x5
 1547 051d F6040000 		.4byte	0x4f6
 1548 0521 14       		.uleb128 0x14
 1549 0522 31050000 		.4byte	0x531
 1550 0526 31050000 		.4byte	0x531
 1551 052a 15       		.uleb128 0x15
 1552 052b EC000000 		.4byte	0xec
 1553 052f 00       		.byte	0
 1554 0530 00       		.byte	0
 1555 0531 05       		.uleb128 0x5
 1556 0532 9B000000 		.4byte	0x9b
 1557 0536 18       		.uleb128 0x18
 1558 0537 36010000 		.4byte	.LASF58
 1559 053b 01       		.byte	0x1
 1560 053c 1A       		.byte	0x1a
 1561 053d 47050000 		.4byte	0x547
 1562 0541 05       		.uleb128 0x5
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 44


 1563 0542 03       		.byte	0x3
 1564 0543 00000000 		.4byte	ADC_countsPer10Volt
 1565 0547 05       		.uleb128 0x5
 1566 0548 21050000 		.4byte	0x521
 1567 054c 19       		.uleb128 0x19
 1568 054d E3020000 		.4byte	.LASF59
 1569 0551 E3020000 		.4byte	.LASF59
 1570 0555 03       		.byte	0x3
 1571 0556 C0       		.byte	0xc0
 1572 0557 19       		.uleb128 0x19
 1573 0558 66020000 		.4byte	.LASF60
 1574 055c 66020000 		.4byte	.LASF60
 1575 0560 03       		.byte	0x3
 1576 0561 BD       		.byte	0xbd
 1577 0562 19       		.uleb128 0x19
 1578 0563 50010000 		.4byte	.LASF61
 1579 0567 50010000 		.4byte	.LASF61
 1580 056b 03       		.byte	0x3
 1581 056c DA       		.byte	0xda
 1582 056d 19       		.uleb128 0x19
 1583 056e 61030000 		.4byte	.LASF62
 1584 0572 61030000 		.4byte	.LASF62
 1585 0576 03       		.byte	0x3
 1586 0577 E7       		.byte	0xe7
 1587 0578 00       		.byte	0
 1588              		.section	.debug_abbrev,"",%progbits
 1589              	.Ldebug_abbrev0:
 1590 0000 01       		.uleb128 0x1
 1591 0001 11       		.uleb128 0x11
 1592 0002 01       		.byte	0x1
 1593 0003 25       		.uleb128 0x25
 1594 0004 0E       		.uleb128 0xe
 1595 0005 13       		.uleb128 0x13
 1596 0006 0B       		.uleb128 0xb
 1597 0007 03       		.uleb128 0x3
 1598 0008 0E       		.uleb128 0xe
 1599 0009 1B       		.uleb128 0x1b
 1600 000a 0E       		.uleb128 0xe
 1601 000b 55       		.uleb128 0x55
 1602 000c 17       		.uleb128 0x17
 1603 000d 11       		.uleb128 0x11
 1604 000e 01       		.uleb128 0x1
 1605 000f 10       		.uleb128 0x10
 1606 0010 17       		.uleb128 0x17
 1607 0011 00       		.byte	0
 1608 0012 00       		.byte	0
 1609 0013 02       		.uleb128 0x2
 1610 0014 24       		.uleb128 0x24
 1611 0015 00       		.byte	0
 1612 0016 0B       		.uleb128 0xb
 1613 0017 0B       		.uleb128 0xb
 1614 0018 3E       		.uleb128 0x3e
 1615 0019 0B       		.uleb128 0xb
 1616 001a 03       		.uleb128 0x3
 1617 001b 0E       		.uleb128 0xe
 1618 001c 00       		.byte	0
 1619 001d 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 45


 1620 001e 03       		.uleb128 0x3
 1621 001f 24       		.uleb128 0x24
 1622 0020 00       		.byte	0
 1623 0021 0B       		.uleb128 0xb
 1624 0022 0B       		.uleb128 0xb
 1625 0023 3E       		.uleb128 0x3e
 1626 0024 0B       		.uleb128 0xb
 1627 0025 03       		.uleb128 0x3
 1628 0026 08       		.uleb128 0x8
 1629 0027 00       		.byte	0
 1630 0028 00       		.byte	0
 1631 0029 04       		.uleb128 0x4
 1632 002a 16       		.uleb128 0x16
 1633 002b 00       		.byte	0
 1634 002c 03       		.uleb128 0x3
 1635 002d 0E       		.uleb128 0xe
 1636 002e 3A       		.uleb128 0x3a
 1637 002f 0B       		.uleb128 0xb
 1638 0030 3B       		.uleb128 0x3b
 1639 0031 05       		.uleb128 0x5
 1640 0032 49       		.uleb128 0x49
 1641 0033 13       		.uleb128 0x13
 1642 0034 00       		.byte	0
 1643 0035 00       		.byte	0
 1644 0036 05       		.uleb128 0x5
 1645 0037 35       		.uleb128 0x35
 1646 0038 00       		.byte	0
 1647 0039 49       		.uleb128 0x49
 1648 003a 13       		.uleb128 0x13
 1649 003b 00       		.byte	0
 1650 003c 00       		.byte	0
 1651 003d 06       		.uleb128 0x6
 1652 003e 2E       		.uleb128 0x2e
 1653 003f 01       		.byte	0x1
 1654 0040 3F       		.uleb128 0x3f
 1655 0041 19       		.uleb128 0x19
 1656 0042 03       		.uleb128 0x3
 1657 0043 0E       		.uleb128 0xe
 1658 0044 3A       		.uleb128 0x3a
 1659 0045 0B       		.uleb128 0xb
 1660 0046 3B       		.uleb128 0x3b
 1661 0047 0B       		.uleb128 0xb
 1662 0048 27       		.uleb128 0x27
 1663 0049 19       		.uleb128 0x19
 1664 004a 11       		.uleb128 0x11
 1665 004b 01       		.uleb128 0x1
 1666 004c 12       		.uleb128 0x12
 1667 004d 06       		.uleb128 0x6
 1668 004e 40       		.uleb128 0x40
 1669 004f 18       		.uleb128 0x18
 1670 0050 9742     		.uleb128 0x2117
 1671 0052 19       		.uleb128 0x19
 1672 0053 01       		.uleb128 0x1
 1673 0054 13       		.uleb128 0x13
 1674 0055 00       		.byte	0
 1675 0056 00       		.byte	0
 1676 0057 07       		.uleb128 0x7
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 46


 1677 0058 34       		.uleb128 0x34
 1678 0059 00       		.byte	0
 1679 005a 03       		.uleb128 0x3
 1680 005b 0E       		.uleb128 0xe
 1681 005c 3A       		.uleb128 0x3a
 1682 005d 0B       		.uleb128 0xb
 1683 005e 3B       		.uleb128 0x3b
 1684 005f 0B       		.uleb128 0xb
 1685 0060 49       		.uleb128 0x49
 1686 0061 13       		.uleb128 0x13
 1687 0062 02       		.uleb128 0x2
 1688 0063 17       		.uleb128 0x17
 1689 0064 00       		.byte	0
 1690 0065 00       		.byte	0
 1691 0066 08       		.uleb128 0x8
 1692 0067 898201   		.uleb128 0x4109
 1693 006a 01       		.byte	0x1
 1694 006b 11       		.uleb128 0x11
 1695 006c 01       		.uleb128 0x1
 1696 006d 31       		.uleb128 0x31
 1697 006e 13       		.uleb128 0x13
 1698 006f 01       		.uleb128 0x1
 1699 0070 13       		.uleb128 0x13
 1700 0071 00       		.byte	0
 1701 0072 00       		.byte	0
 1702 0073 09       		.uleb128 0x9
 1703 0074 8A8201   		.uleb128 0x410a
 1704 0077 00       		.byte	0
 1705 0078 02       		.uleb128 0x2
 1706 0079 18       		.uleb128 0x18
 1707 007a 9142     		.uleb128 0x2111
 1708 007c 18       		.uleb128 0x18
 1709 007d 00       		.byte	0
 1710 007e 00       		.byte	0
 1711 007f 0A       		.uleb128 0xa
 1712 0080 898201   		.uleb128 0x4109
 1713 0083 01       		.byte	0x1
 1714 0084 11       		.uleb128 0x11
 1715 0085 01       		.uleb128 0x1
 1716 0086 31       		.uleb128 0x31
 1717 0087 13       		.uleb128 0x13
 1718 0088 00       		.byte	0
 1719 0089 00       		.byte	0
 1720 008a 0B       		.uleb128 0xb
 1721 008b 2E       		.uleb128 0x2e
 1722 008c 01       		.byte	0x1
 1723 008d 3F       		.uleb128 0x3f
 1724 008e 19       		.uleb128 0x19
 1725 008f 03       		.uleb128 0x3
 1726 0090 0E       		.uleb128 0xe
 1727 0091 3A       		.uleb128 0x3a
 1728 0092 0B       		.uleb128 0xb
 1729 0093 3B       		.uleb128 0x3b
 1730 0094 05       		.uleb128 0x5
 1731 0095 27       		.uleb128 0x27
 1732 0096 19       		.uleb128 0x19
 1733 0097 11       		.uleb128 0x11
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 47


 1734 0098 01       		.uleb128 0x1
 1735 0099 12       		.uleb128 0x12
 1736 009a 06       		.uleb128 0x6
 1737 009b 40       		.uleb128 0x40
 1738 009c 18       		.uleb128 0x18
 1739 009d 9742     		.uleb128 0x2117
 1740 009f 19       		.uleb128 0x19
 1741 00a0 01       		.uleb128 0x1
 1742 00a1 13       		.uleb128 0x13
 1743 00a2 00       		.byte	0
 1744 00a3 00       		.byte	0
 1745 00a4 0C       		.uleb128 0xc
 1746 00a5 898201   		.uleb128 0x4109
 1747 00a8 00       		.byte	0
 1748 00a9 11       		.uleb128 0x11
 1749 00aa 01       		.uleb128 0x1
 1750 00ab 31       		.uleb128 0x31
 1751 00ac 13       		.uleb128 0x13
 1752 00ad 00       		.byte	0
 1753 00ae 00       		.byte	0
 1754 00af 0D       		.uleb128 0xd
 1755 00b0 2E       		.uleb128 0x2e
 1756 00b1 00       		.byte	0
 1757 00b2 3F       		.uleb128 0x3f
 1758 00b3 19       		.uleb128 0x19
 1759 00b4 03       		.uleb128 0x3
 1760 00b5 0E       		.uleb128 0xe
 1761 00b6 3A       		.uleb128 0x3a
 1762 00b7 0B       		.uleb128 0xb
 1763 00b8 3B       		.uleb128 0x3b
 1764 00b9 05       		.uleb128 0x5
 1765 00ba 27       		.uleb128 0x27
 1766 00bb 19       		.uleb128 0x19
 1767 00bc 11       		.uleb128 0x11
 1768 00bd 01       		.uleb128 0x1
 1769 00be 12       		.uleb128 0x12
 1770 00bf 06       		.uleb128 0x6
 1771 00c0 40       		.uleb128 0x40
 1772 00c1 18       		.uleb128 0x18
 1773 00c2 9742     		.uleb128 0x2117
 1774 00c4 19       		.uleb128 0x19
 1775 00c5 00       		.byte	0
 1776 00c6 00       		.byte	0
 1777 00c7 0E       		.uleb128 0xe
 1778 00c8 2E       		.uleb128 0x2e
 1779 00c9 01       		.byte	0x1
 1780 00ca 3F       		.uleb128 0x3f
 1781 00cb 19       		.uleb128 0x19
 1782 00cc 03       		.uleb128 0x3
 1783 00cd 0E       		.uleb128 0xe
 1784 00ce 3A       		.uleb128 0x3a
 1785 00cf 0B       		.uleb128 0xb
 1786 00d0 3B       		.uleb128 0x3b
 1787 00d1 05       		.uleb128 0x5
 1788 00d2 27       		.uleb128 0x27
 1789 00d3 19       		.uleb128 0x19
 1790 00d4 49       		.uleb128 0x49
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 48


 1791 00d5 13       		.uleb128 0x13
 1792 00d6 11       		.uleb128 0x11
 1793 00d7 01       		.uleb128 0x1
 1794 00d8 12       		.uleb128 0x12
 1795 00d9 06       		.uleb128 0x6
 1796 00da 40       		.uleb128 0x40
 1797 00db 18       		.uleb128 0x18
 1798 00dc 9742     		.uleb128 0x2117
 1799 00de 19       		.uleb128 0x19
 1800 00df 01       		.uleb128 0x1
 1801 00e0 13       		.uleb128 0x13
 1802 00e1 00       		.byte	0
 1803 00e2 00       		.byte	0
 1804 00e3 0F       		.uleb128 0xf
 1805 00e4 05       		.uleb128 0x5
 1806 00e5 00       		.byte	0
 1807 00e6 03       		.uleb128 0x3
 1808 00e7 0E       		.uleb128 0xe
 1809 00e8 3A       		.uleb128 0x3a
 1810 00e9 0B       		.uleb128 0xb
 1811 00ea 3B       		.uleb128 0x3b
 1812 00eb 05       		.uleb128 0x5
 1813 00ec 49       		.uleb128 0x49
 1814 00ed 13       		.uleb128 0x13
 1815 00ee 02       		.uleb128 0x2
 1816 00ef 17       		.uleb128 0x17
 1817 00f0 00       		.byte	0
 1818 00f1 00       		.byte	0
 1819 00f2 10       		.uleb128 0x10
 1820 00f3 34       		.uleb128 0x34
 1821 00f4 00       		.byte	0
 1822 00f5 03       		.uleb128 0x3
 1823 00f6 0E       		.uleb128 0xe
 1824 00f7 3A       		.uleb128 0x3a
 1825 00f8 0B       		.uleb128 0xb
 1826 00f9 3B       		.uleb128 0x3b
 1827 00fa 05       		.uleb128 0x5
 1828 00fb 49       		.uleb128 0x49
 1829 00fc 13       		.uleb128 0x13
 1830 00fd 02       		.uleb128 0x2
 1831 00fe 17       		.uleb128 0x17
 1832 00ff 00       		.byte	0
 1833 0100 00       		.byte	0
 1834 0101 11       		.uleb128 0x11
 1835 0102 2E       		.uleb128 0x2e
 1836 0103 01       		.byte	0x1
 1837 0104 3F       		.uleb128 0x3f
 1838 0105 19       		.uleb128 0x19
 1839 0106 03       		.uleb128 0x3
 1840 0107 0E       		.uleb128 0xe
 1841 0108 3A       		.uleb128 0x3a
 1842 0109 0B       		.uleb128 0xb
 1843 010a 3B       		.uleb128 0x3b
 1844 010b 05       		.uleb128 0x5
 1845 010c 27       		.uleb128 0x27
 1846 010d 19       		.uleb128 0x19
 1847 010e 49       		.uleb128 0x49
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 49


 1848 010f 13       		.uleb128 0x13
 1849 0110 11       		.uleb128 0x11
 1850 0111 01       		.uleb128 0x1
 1851 0112 12       		.uleb128 0x12
 1852 0113 06       		.uleb128 0x6
 1853 0114 40       		.uleb128 0x40
 1854 0115 18       		.uleb128 0x18
 1855 0116 9642     		.uleb128 0x2116
 1856 0118 19       		.uleb128 0x19
 1857 0119 01       		.uleb128 0x1
 1858 011a 13       		.uleb128 0x13
 1859 011b 00       		.byte	0
 1860 011c 00       		.byte	0
 1861 011d 12       		.uleb128 0x12
 1862 011e 34       		.uleb128 0x34
 1863 011f 00       		.byte	0
 1864 0120 03       		.uleb128 0x3
 1865 0121 0E       		.uleb128 0xe
 1866 0122 3A       		.uleb128 0x3a
 1867 0123 0B       		.uleb128 0xb
 1868 0124 3B       		.uleb128 0x3b
 1869 0125 05       		.uleb128 0x5
 1870 0126 49       		.uleb128 0x49
 1871 0127 13       		.uleb128 0x13
 1872 0128 02       		.uleb128 0x2
 1873 0129 18       		.uleb128 0x18
 1874 012a 00       		.byte	0
 1875 012b 00       		.byte	0
 1876 012c 13       		.uleb128 0x13
 1877 012d 34       		.uleb128 0x34
 1878 012e 00       		.byte	0
 1879 012f 03       		.uleb128 0x3
 1880 0130 0E       		.uleb128 0xe
 1881 0131 3A       		.uleb128 0x3a
 1882 0132 0B       		.uleb128 0xb
 1883 0133 3B       		.uleb128 0x3b
 1884 0134 05       		.uleb128 0x5
 1885 0135 49       		.uleb128 0x49
 1886 0136 13       		.uleb128 0x13
 1887 0137 00       		.byte	0
 1888 0138 00       		.byte	0
 1889 0139 14       		.uleb128 0x14
 1890 013a 01       		.uleb128 0x1
 1891 013b 01       		.byte	0x1
 1892 013c 49       		.uleb128 0x49
 1893 013d 13       		.uleb128 0x13
 1894 013e 01       		.uleb128 0x1
 1895 013f 13       		.uleb128 0x13
 1896 0140 00       		.byte	0
 1897 0141 00       		.byte	0
 1898 0142 15       		.uleb128 0x15
 1899 0143 21       		.uleb128 0x21
 1900 0144 00       		.byte	0
 1901 0145 49       		.uleb128 0x49
 1902 0146 13       		.uleb128 0x13
 1903 0147 2F       		.uleb128 0x2f
 1904 0148 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 50


 1905 0149 00       		.byte	0
 1906 014a 00       		.byte	0
 1907 014b 16       		.uleb128 0x16
 1908 014c 26       		.uleb128 0x26
 1909 014d 00       		.byte	0
 1910 014e 49       		.uleb128 0x49
 1911 014f 13       		.uleb128 0x13
 1912 0150 00       		.byte	0
 1913 0151 00       		.byte	0
 1914 0152 17       		.uleb128 0x17
 1915 0153 34       		.uleb128 0x34
 1916 0154 00       		.byte	0
 1917 0155 03       		.uleb128 0x3
 1918 0156 0E       		.uleb128 0xe
 1919 0157 3A       		.uleb128 0x3a
 1920 0158 0B       		.uleb128 0xb
 1921 0159 3B       		.uleb128 0x3b
 1922 015a 0B       		.uleb128 0xb
 1923 015b 49       		.uleb128 0x49
 1924 015c 13       		.uleb128 0x13
 1925 015d 1C       		.uleb128 0x1c
 1926 015e 0A       		.uleb128 0xa
 1927 015f 00       		.byte	0
 1928 0160 00       		.byte	0
 1929 0161 18       		.uleb128 0x18
 1930 0162 34       		.uleb128 0x34
 1931 0163 00       		.byte	0
 1932 0164 03       		.uleb128 0x3
 1933 0165 0E       		.uleb128 0xe
 1934 0166 3A       		.uleb128 0x3a
 1935 0167 0B       		.uleb128 0xb
 1936 0168 3B       		.uleb128 0x3b
 1937 0169 0B       		.uleb128 0xb
 1938 016a 49       		.uleb128 0x49
 1939 016b 13       		.uleb128 0x13
 1940 016c 3F       		.uleb128 0x3f
 1941 016d 19       		.uleb128 0x19
 1942 016e 02       		.uleb128 0x2
 1943 016f 18       		.uleb128 0x18
 1944 0170 00       		.byte	0
 1945 0171 00       		.byte	0
 1946 0172 19       		.uleb128 0x19
 1947 0173 2E       		.uleb128 0x2e
 1948 0174 00       		.byte	0
 1949 0175 3F       		.uleb128 0x3f
 1950 0176 19       		.uleb128 0x19
 1951 0177 3C       		.uleb128 0x3c
 1952 0178 19       		.uleb128 0x19
 1953 0179 6E       		.uleb128 0x6e
 1954 017a 0E       		.uleb128 0xe
 1955 017b 03       		.uleb128 0x3
 1956 017c 0E       		.uleb128 0xe
 1957 017d 3A       		.uleb128 0x3a
 1958 017e 0B       		.uleb128 0xb
 1959 017f 3B       		.uleb128 0x3b
 1960 0180 0B       		.uleb128 0xb
 1961 0181 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 51


 1962 0182 00       		.byte	0
 1963 0183 00       		.byte	0
 1964              		.section	.debug_loc,"",%progbits
 1965              	.Ldebug_loc0:
 1966              	.LLST0:
 1967 0000 7C000000 		.4byte	.LVL6
 1968 0004 80000000 		.4byte	.LVL7
 1969 0008 0200     		.2byte	0x2
 1970 000a 30       		.byte	0x30
 1971 000b 9F       		.byte	0x9f
 1972 000c 80000000 		.4byte	.LVL7
 1973 0010 08010000 		.4byte	.LFE3
 1974 0014 0100     		.2byte	0x1
 1975 0016 53       		.byte	0x53
 1976 0017 00000000 		.4byte	0
 1977 001b 00000000 		.4byte	0
 1978              	.LLST1:
 1979 001f 6A000000 		.4byte	.LVL2
 1980 0023 70000000 		.4byte	.LVL3
 1981 0027 0700     		.2byte	0x7
 1982 0029 71       		.byte	0x71
 1983 002a 00       		.sleb128 0
 1984 002b 40       		.byte	0x40
 1985 002c 49       		.byte	0x49
 1986 002d 24       		.byte	0x24
 1987 002e 21       		.byte	0x21
 1988 002f 9F       		.byte	0x9f
 1989 0030 74000000 		.4byte	.LVL4
 1990 0034 7A000000 		.4byte	.LVL5
 1991 0038 0100     		.2byte	0x1
 1992 003a 53       		.byte	0x53
 1993 003b 7A000000 		.4byte	.LVL5
 1994 003f 7C000000 		.4byte	.LVL6
 1995 0043 0500     		.2byte	0x5
 1996 0045 0C       		.byte	0xc
 1997 0046 30003A40 		.4byte	0x403a0030
 1998 004a 80000000 		.4byte	.LVL7
 1999 004e 9E000000 		.4byte	.LVL9
 2000 0052 0400     		.2byte	0x4
 2001 0054 0A       		.byte	0xa
 2002 0055 0006     		.2byte	0x600
 2003 0057 9F       		.byte	0x9f
 2004 0058 00000000 		.4byte	0
 2005 005c 00000000 		.4byte	0
 2006              	.LLST2:
 2007 0060 8C000000 		.4byte	.LVL8
 2008 0064 9E000000 		.4byte	.LVL9
 2009 0068 0400     		.2byte	0x4
 2010 006a 0A       		.byte	0xa
 2011 006b 0001     		.2byte	0x100
 2012 006d 9F       		.byte	0x9f
 2013 006e 00000000 		.4byte	0
 2014 0072 00000000 		.4byte	0
 2015              	.LLST3:
 2016 0076 00000000 		.4byte	.LVL13
 2017 007a 06000000 		.4byte	.LVL15
 2018 007e 0100     		.2byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 52


 2019 0080 50       		.byte	0x50
 2020 0081 06000000 		.4byte	.LVL15
 2021 0085 1A000000 		.4byte	.LVL17
 2022 0089 0100     		.2byte	0x1
 2023 008b 52       		.byte	0x52
 2024 008c 1A000000 		.4byte	.LVL17
 2025 0090 20000000 		.4byte	.LVL18
 2026 0094 0400     		.2byte	0x4
 2027 0096 F3       		.byte	0xf3
 2028 0097 01       		.uleb128 0x1
 2029 0098 50       		.byte	0x50
 2030 0099 9F       		.byte	0x9f
 2031 009a 20000000 		.4byte	.LVL18
 2032 009e 22000000 		.4byte	.LVL19
 2033 00a2 0100     		.2byte	0x1
 2034 00a4 50       		.byte	0x50
 2035 00a5 22000000 		.4byte	.LVL19
 2036 00a9 28000000 		.4byte	.LFE8
 2037 00ad 0400     		.2byte	0x4
 2038 00af F3       		.byte	0xf3
 2039 00b0 01       		.uleb128 0x1
 2040 00b1 50       		.byte	0x50
 2041 00b2 9F       		.byte	0x9f
 2042 00b3 00000000 		.4byte	0
 2043 00b7 00000000 		.4byte	0
 2044              	.LLST4:
 2045 00bb 02000000 		.4byte	.LVL14
 2046 00bf 06000000 		.4byte	.LVL15
 2047 00c3 0200     		.2byte	0x2
 2048 00c5 30       		.byte	0x30
 2049 00c6 9F       		.byte	0x9f
 2050 00c7 0E000000 		.4byte	.LVL16
 2051 00cb 20000000 		.4byte	.LVL18
 2052 00cf 0100     		.2byte	0x1
 2053 00d1 50       		.byte	0x50
 2054 00d2 20000000 		.4byte	.LVL18
 2055 00d6 22000000 		.4byte	.LVL19
 2056 00da 0200     		.2byte	0x2
 2057 00dc 30       		.byte	0x30
 2058 00dd 9F       		.byte	0x9f
 2059 00de 22000000 		.4byte	.LVL19
 2060 00e2 28000000 		.4byte	.LFE8
 2061 00e6 0100     		.2byte	0x1
 2062 00e8 50       		.byte	0x50
 2063 00e9 00000000 		.4byte	0
 2064 00ed 00000000 		.4byte	0
 2065              	.LLST5:
 2066 00f1 00000000 		.4byte	.LVL20
 2067 00f5 08000000 		.4byte	.LVL21
 2068 00f9 0100     		.2byte	0x1
 2069 00fb 50       		.byte	0x50
 2070 00fc 08000000 		.4byte	.LVL21
 2071 0100 12000000 		.4byte	.LVL23
 2072 0104 0100     		.2byte	0x1
 2073 0106 54       		.byte	0x54
 2074 0107 12000000 		.4byte	.LVL23
 2075 010b 20000000 		.4byte	.LVL25
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 53


 2076 010f 0400     		.2byte	0x4
 2077 0111 F3       		.byte	0xf3
 2078 0112 01       		.uleb128 0x1
 2079 0113 50       		.byte	0x50
 2080 0114 9F       		.byte	0x9f
 2081 0115 20000000 		.4byte	.LVL25
 2082 0119 22000000 		.4byte	.LVL26
 2083 011d 0100     		.2byte	0x1
 2084 011f 54       		.byte	0x54
 2085 0120 22000000 		.4byte	.LVL26
 2086 0124 2C000000 		.4byte	.LFE9
 2087 0128 0400     		.2byte	0x4
 2088 012a F3       		.byte	0xf3
 2089 012b 01       		.uleb128 0x1
 2090 012c 50       		.byte	0x50
 2091 012d 9F       		.byte	0x9f
 2092 012e 00000000 		.4byte	0
 2093 0132 00000000 		.4byte	0
 2094              	.LLST6:
 2095 0136 1E000000 		.4byte	.LVL24
 2096 013a 20000000 		.4byte	.LVL25
 2097 013e 0100     		.2byte	0x1
 2098 0140 50       		.byte	0x50
 2099 0141 22000000 		.4byte	.LVL26
 2100 0145 24000000 		.4byte	.LVL27
 2101 0149 0100     		.2byte	0x1
 2102 014b 50       		.byte	0x50
 2103 014c 00000000 		.4byte	0
 2104 0150 00000000 		.4byte	0
 2105              	.LLST7:
 2106 0154 00000000 		.4byte	.LVL28
 2107 0158 04000000 		.4byte	.LVL29
 2108 015c 0100     		.2byte	0x1
 2109 015e 50       		.byte	0x50
 2110 015f 04000000 		.4byte	.LVL29
 2111 0163 10000000 		.4byte	.LFE10
 2112 0167 0400     		.2byte	0x4
 2113 0169 F3       		.byte	0xf3
 2114 016a 01       		.uleb128 0x1
 2115 016b 50       		.byte	0x50
 2116 016c 9F       		.byte	0x9f
 2117 016d 00000000 		.4byte	0
 2118 0171 00000000 		.4byte	0
 2119              	.LLST8:
 2120 0175 00000000 		.4byte	.LVL30
 2121 0179 0E000000 		.4byte	.LVL31
 2122 017d 0100     		.2byte	0x1
 2123 017f 50       		.byte	0x50
 2124 0180 0E000000 		.4byte	.LVL31
 2125 0184 1C000000 		.4byte	.LFE11
 2126 0188 0400     		.2byte	0x4
 2127 018a F3       		.byte	0xf3
 2128 018b 01       		.uleb128 0x1
 2129 018c 50       		.byte	0x50
 2130 018d 9F       		.byte	0x9f
 2131 018e 00000000 		.4byte	0
 2132 0192 00000000 		.4byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 54


 2133              	.LLST9:
 2134 0196 00000000 		.4byte	.LVL32
 2135 019a 0E000000 		.4byte	.LVL33
 2136 019e 0100     		.2byte	0x1
 2137 01a0 50       		.byte	0x50
 2138 01a1 0E000000 		.4byte	.LVL33
 2139 01a5 18000000 		.4byte	.LFE12
 2140 01a9 0400     		.2byte	0x4
 2141 01ab F3       		.byte	0xf3
 2142 01ac 01       		.uleb128 0x1
 2143 01ad 50       		.byte	0x50
 2144 01ae 9F       		.byte	0x9f
 2145 01af 00000000 		.4byte	0
 2146 01b3 00000000 		.4byte	0
 2147              	.LLST10:
 2148 01b7 00000000 		.4byte	.LVL34
 2149 01bb 04000000 		.4byte	.LVL35
 2150 01bf 0100     		.2byte	0x1
 2151 01c1 50       		.byte	0x50
 2152 01c2 04000000 		.4byte	.LVL35
 2153 01c6 10000000 		.4byte	.LFE13
 2154 01ca 0400     		.2byte	0x4
 2155 01cc F3       		.byte	0xf3
 2156 01cd 01       		.uleb128 0x1
 2157 01ce 50       		.byte	0x50
 2158 01cf 9F       		.byte	0x9f
 2159 01d0 00000000 		.4byte	0
 2160 01d4 00000000 		.4byte	0
 2161              	.LLST11:
 2162 01d8 00000000 		.4byte	.LVL36
 2163 01dc 04000000 		.4byte	.LVL37
 2164 01e0 0100     		.2byte	0x1
 2165 01e2 50       		.byte	0x50
 2166 01e3 04000000 		.4byte	.LVL37
 2167 01e7 10000000 		.4byte	.LFE14
 2168 01eb 0400     		.2byte	0x4
 2169 01ed F3       		.byte	0xf3
 2170 01ee 01       		.uleb128 0x1
 2171 01ef 50       		.byte	0x50
 2172 01f0 9F       		.byte	0x9f
 2173 01f1 00000000 		.4byte	0
 2174 01f5 00000000 		.4byte	0
 2175              	.LLST12:
 2176 01f9 00000000 		.4byte	.LVL38
 2177 01fd 0C000000 		.4byte	.LVL39
 2178 0201 0100     		.2byte	0x1
 2179 0203 50       		.byte	0x50
 2180 0204 0C000000 		.4byte	.LVL39
 2181 0208 12000000 		.4byte	.LVL41
 2182 020c 0100     		.2byte	0x1
 2183 020e 54       		.byte	0x54
 2184 020f 12000000 		.4byte	.LVL41
 2185 0213 1C000000 		.4byte	.LFE15
 2186 0217 0400     		.2byte	0x4
 2187 0219 F3       		.byte	0xf3
 2188 021a 01       		.uleb128 0x1
 2189 021b 50       		.byte	0x50
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 55


 2190 021c 9F       		.byte	0x9f
 2191 021d 00000000 		.4byte	0
 2192 0221 00000000 		.4byte	0
 2193              	.LLST13:
 2194 0225 00000000 		.4byte	.LVL38
 2195 0229 0F000000 		.4byte	.LVL40-1
 2196 022d 0100     		.2byte	0x1
 2197 022f 51       		.byte	0x51
 2198 0230 0F000000 		.4byte	.LVL40-1
 2199 0234 1C000000 		.4byte	.LFE15
 2200 0238 0400     		.2byte	0x4
 2201 023a F3       		.byte	0xf3
 2202 023b 01       		.uleb128 0x1
 2203 023c 51       		.byte	0x51
 2204 023d 9F       		.byte	0x9f
 2205 023e 00000000 		.4byte	0
 2206 0242 00000000 		.4byte	0
 2207              	.LLST14:
 2208 0246 00000000 		.4byte	.LVL42
 2209 024a 0C000000 		.4byte	.LVL43
 2210 024e 0100     		.2byte	0x1
 2211 0250 50       		.byte	0x50
 2212 0251 0C000000 		.4byte	.LVL43
 2213 0255 12000000 		.4byte	.LVL45
 2214 0259 0100     		.2byte	0x1
 2215 025b 54       		.byte	0x54
 2216 025c 12000000 		.4byte	.LVL45
 2217 0260 1C000000 		.4byte	.LFE16
 2218 0264 0400     		.2byte	0x4
 2219 0266 F3       		.byte	0xf3
 2220 0267 01       		.uleb128 0x1
 2221 0268 50       		.byte	0x50
 2222 0269 9F       		.byte	0x9f
 2223 026a 00000000 		.4byte	0
 2224 026e 00000000 		.4byte	0
 2225              	.LLST15:
 2226 0272 00000000 		.4byte	.LVL42
 2227 0276 0F000000 		.4byte	.LVL44-1
 2228 027a 0100     		.2byte	0x1
 2229 027c 51       		.byte	0x51
 2230 027d 0F000000 		.4byte	.LVL44-1
 2231 0281 16000000 		.4byte	.LVL46
 2232 0285 0100     		.2byte	0x1
 2233 0287 55       		.byte	0x55
 2234 0288 16000000 		.4byte	.LVL46
 2235 028c 1C000000 		.4byte	.LFE16
 2236 0290 0800     		.2byte	0x8
 2237 0292 F3       		.byte	0xf3
 2238 0293 01       		.uleb128 0x1
 2239 0294 50       		.byte	0x50
 2240 0295 32       		.byte	0x32
 2241 0296 24       		.byte	0x24
 2242 0297 73       		.byte	0x73
 2243 0298 00       		.sleb128 0
 2244 0299 22       		.byte	0x22
 2245 029a 00000000 		.4byte	0
 2246 029e 00000000 		.4byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 56


 2247              	.LLST16:
 2248 02a2 00000000 		.4byte	.LVL47
 2249 02a6 0C000000 		.4byte	.LVL48
 2250 02aa 0100     		.2byte	0x1
 2251 02ac 50       		.byte	0x50
 2252 02ad 0C000000 		.4byte	.LVL48
 2253 02b1 44000000 		.4byte	.LVL51
 2254 02b5 0100     		.2byte	0x1
 2255 02b7 54       		.byte	0x54
 2256 02b8 44000000 		.4byte	.LVL51
 2257 02bc 5C000000 		.4byte	.LFE17
 2258 02c0 0400     		.2byte	0x4
 2259 02c2 F3       		.byte	0xf3
 2260 02c3 01       		.uleb128 0x1
 2261 02c4 50       		.byte	0x50
 2262 02c5 9F       		.byte	0x9f
 2263 02c6 00000000 		.4byte	0
 2264 02ca 00000000 		.4byte	0
 2265              	.LLST17:
 2266 02ce 00000000 		.4byte	.LVL47
 2267 02d2 0F000000 		.4byte	.LVL49-1
 2268 02d6 0100     		.2byte	0x1
 2269 02d8 51       		.byte	0x51
 2270 02d9 0F000000 		.4byte	.LVL49-1
 2271 02dd 1C000000 		.4byte	.LVL50
 2272 02e1 0400     		.2byte	0x4
 2273 02e3 F3       		.byte	0xf3
 2274 02e4 01       		.uleb128 0x1
 2275 02e5 51       		.byte	0x51
 2276 02e6 9F       		.byte	0x9f
 2277 02e7 1C000000 		.4byte	.LVL50
 2278 02eb 48000000 		.4byte	.LVL52
 2279 02ef 0100     		.2byte	0x1
 2280 02f1 51       		.byte	0x51
 2281 02f2 00000000 		.4byte	0
 2282 02f6 00000000 		.4byte	0
 2283              	.LLST18:
 2284 02fa 00000000 		.4byte	.LVL55
 2285 02fe 0C000000 		.4byte	.LVL56
 2286 0302 0100     		.2byte	0x1
 2287 0304 50       		.byte	0x50
 2288 0305 0C000000 		.4byte	.LVL56
 2289 0309 28000000 		.4byte	.LVL60
 2290 030d 0100     		.2byte	0x1
 2291 030f 55       		.byte	0x55
 2292 0310 28000000 		.4byte	.LVL60
 2293 0314 40000000 		.4byte	.LFE18
 2294 0318 0400     		.2byte	0x4
 2295 031a F3       		.byte	0xf3
 2296 031b 01       		.uleb128 0x1
 2297 031c 50       		.byte	0x50
 2298 031d 9F       		.byte	0x9f
 2299 031e 00000000 		.4byte	0
 2300 0322 00000000 		.4byte	0
 2301              	.LLST19:
 2302 0326 00000000 		.4byte	.LVL55
 2303 032a 0F000000 		.4byte	.LVL57-1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 57


 2304 032e 0100     		.2byte	0x1
 2305 0330 51       		.byte	0x51
 2306 0331 0F000000 		.4byte	.LVL57-1
 2307 0335 1C000000 		.4byte	.LVL58
 2308 0339 0400     		.2byte	0x4
 2309 033b F3       		.byte	0xf3
 2310 033c 01       		.uleb128 0x1
 2311 033d 51       		.byte	0x51
 2312 033e 9F       		.byte	0x9f
 2313 033f 1C000000 		.4byte	.LVL58
 2314 0343 25000000 		.4byte	.LVL59-1
 2315 0347 0100     		.2byte	0x1
 2316 0349 50       		.byte	0x50
 2317 034a 00000000 		.4byte	0
 2318 034e 00000000 		.4byte	0
 2319              	.LLST20:
 2320 0352 00000000 		.4byte	.LVL62
 2321 0356 0C000000 		.4byte	.LVL63
 2322 035a 0100     		.2byte	0x1
 2323 035c 50       		.byte	0x50
 2324 035d 0C000000 		.4byte	.LVL63
 2325 0361 2A000000 		.4byte	.LVL68
 2326 0365 0100     		.2byte	0x1
 2327 0367 54       		.byte	0x54
 2328 0368 2A000000 		.4byte	.LVL68
 2329 036c 48000000 		.4byte	.LFE19
 2330 0370 0400     		.2byte	0x4
 2331 0372 F3       		.byte	0xf3
 2332 0373 01       		.uleb128 0x1
 2333 0374 50       		.byte	0x50
 2334 0375 9F       		.byte	0x9f
 2335 0376 00000000 		.4byte	0
 2336 037a 00000000 		.4byte	0
 2337              	.LLST21:
 2338 037e 00000000 		.4byte	.LVL62
 2339 0382 0F000000 		.4byte	.LVL64-1
 2340 0386 0100     		.2byte	0x1
 2341 0388 51       		.byte	0x51
 2342 0389 0F000000 		.4byte	.LVL64-1
 2343 038d 1C000000 		.4byte	.LVL65
 2344 0391 0400     		.2byte	0x4
 2345 0393 F3       		.byte	0xf3
 2346 0394 01       		.uleb128 0x1
 2347 0395 51       		.byte	0x51
 2348 0396 9F       		.byte	0x9f
 2349 0397 1C000000 		.4byte	.LVL65
 2350 039b 1F000000 		.4byte	.LVL66-1
 2351 039f 0100     		.2byte	0x1
 2352 03a1 50       		.byte	0x50
 2353 03a2 00000000 		.4byte	0
 2354 03a6 00000000 		.4byte	0
 2355              		.section	.debug_aranges,"",%progbits
 2356 0000 A4000000 		.4byte	0xa4
 2357 0004 0200     		.2byte	0x2
 2358 0006 00000000 		.4byte	.Ldebug_info0
 2359 000a 04       		.byte	0x4
 2360 000b 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 58


 2361 000c 0000     		.2byte	0
 2362 000e 0000     		.2byte	0
 2363 0010 00000000 		.4byte	.LFB3
 2364 0014 08010000 		.4byte	.LFE3-.LFB3
 2365 0018 00000000 		.4byte	.LFB4
 2366 001c 30000000 		.4byte	.LFE4-.LFB4
 2367 0020 00000000 		.4byte	.LFB2
 2368 0024 20000000 		.4byte	.LFE2-.LFB2
 2369 0028 00000000 		.4byte	.LFB5
 2370 002c 10000000 		.4byte	.LFE5-.LFB5
 2371 0030 00000000 		.4byte	.LFB6
 2372 0034 0C000000 		.4byte	.LFE6-.LFB6
 2373 0038 00000000 		.4byte	.LFB7
 2374 003c 02000000 		.4byte	.LFE7-.LFB7
 2375 0040 00000000 		.4byte	.LFB8
 2376 0044 28000000 		.4byte	.LFE8-.LFB8
 2377 0048 00000000 		.4byte	.LFB9
 2378 004c 2C000000 		.4byte	.LFE9-.LFB9
 2379 0050 00000000 		.4byte	.LFB10
 2380 0054 10000000 		.4byte	.LFE10-.LFB10
 2381 0058 00000000 		.4byte	.LFB11
 2382 005c 1C000000 		.4byte	.LFE11-.LFB11
 2383 0060 00000000 		.4byte	.LFB12
 2384 0064 18000000 		.4byte	.LFE12-.LFB12
 2385 0068 00000000 		.4byte	.LFB13
 2386 006c 10000000 		.4byte	.LFE13-.LFB13
 2387 0070 00000000 		.4byte	.LFB14
 2388 0074 10000000 		.4byte	.LFE14-.LFB14
 2389 0078 00000000 		.4byte	.LFB15
 2390 007c 1C000000 		.4byte	.LFE15-.LFB15
 2391 0080 00000000 		.4byte	.LFB16
 2392 0084 1C000000 		.4byte	.LFE16-.LFB16
 2393 0088 00000000 		.4byte	.LFB17
 2394 008c 5C000000 		.4byte	.LFE17-.LFB17
 2395 0090 00000000 		.4byte	.LFB18
 2396 0094 40000000 		.4byte	.LFE18-.LFB18
 2397 0098 00000000 		.4byte	.LFB19
 2398 009c 48000000 		.4byte	.LFE19-.LFB19
 2399 00a0 00000000 		.4byte	0
 2400 00a4 00000000 		.4byte	0
 2401              		.section	.debug_ranges,"",%progbits
 2402              	.Ldebug_ranges0:
 2403 0000 00000000 		.4byte	.LFB3
 2404 0004 08010000 		.4byte	.LFE3
 2405 0008 00000000 		.4byte	.LFB4
 2406 000c 30000000 		.4byte	.LFE4
 2407 0010 00000000 		.4byte	.LFB2
 2408 0014 20000000 		.4byte	.LFE2
 2409 0018 00000000 		.4byte	.LFB5
 2410 001c 10000000 		.4byte	.LFE5
 2411 0020 00000000 		.4byte	.LFB6
 2412 0024 0C000000 		.4byte	.LFE6
 2413 0028 00000000 		.4byte	.LFB7
 2414 002c 02000000 		.4byte	.LFE7
 2415 0030 00000000 		.4byte	.LFB8
 2416 0034 28000000 		.4byte	.LFE8
 2417 0038 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 59


 2418 003c 2C000000 		.4byte	.LFE9
 2419 0040 00000000 		.4byte	.LFB10
 2420 0044 10000000 		.4byte	.LFE10
 2421 0048 00000000 		.4byte	.LFB11
 2422 004c 1C000000 		.4byte	.LFE11
 2423 0050 00000000 		.4byte	.LFB12
 2424 0054 18000000 		.4byte	.LFE12
 2425 0058 00000000 		.4byte	.LFB13
 2426 005c 10000000 		.4byte	.LFE13
 2427 0060 00000000 		.4byte	.LFB14
 2428 0064 10000000 		.4byte	.LFE14
 2429 0068 00000000 		.4byte	.LFB15
 2430 006c 1C000000 		.4byte	.LFE15
 2431 0070 00000000 		.4byte	.LFB16
 2432 0074 1C000000 		.4byte	.LFE16
 2433 0078 00000000 		.4byte	.LFB17
 2434 007c 5C000000 		.4byte	.LFE17
 2435 0080 00000000 		.4byte	.LFB18
 2436 0084 40000000 		.4byte	.LFE18
 2437 0088 00000000 		.4byte	.LFB19
 2438 008c 48000000 		.4byte	.LFE19
 2439 0090 00000000 		.4byte	0
 2440 0094 00000000 		.4byte	0
 2441              		.section	.debug_line,"",%progbits
 2442              	.Ldebug_line0:
 2443 0000 70020000 		.section	.debug_str,"MS",%progbits,1
 2443      02004B00 
 2443      00000201 
 2443      FB0E0D00 
 2443      01010101 
 2444              	.LASF10:
 2445 0000 75696E74 		.ascii	"uint16\000"
 2445      313600
 2446              	.LASF48:
 2447 0007 61646347 		.ascii	"adcGain\000"
 2447      61696E00 
 2448              	.LASF24:
 2449 000f 636F756E 		.ascii	"counts\000"
 2449      747300
 2450              	.LASF53:
 2451 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2451      436F756E 
 2451      7473546F 
 2451      5F566F6C 
 2451      747300
 2452              	.LASF25:
 2453 0029 4144435F 		.ascii	"ADC_Init\000"
 2453      496E6974 
 2453      00
 2454              	.LASF63:
 2455 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2455      43313120 
 2455      352E342E 
 2455      31203230 
 2455      31363036 
 2456 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2456      20726576 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 60


 2456      6973696F 
 2456      6E203233 
 2456      37373135 
 2457 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2457      66756E63 
 2457      74696F6E 
 2457      2D736563 
 2457      74696F6E 
 2458              	.LASF7:
 2459 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2459      206C6F6E 
 2459      6720756E 
 2459      7369676E 
 2459      65642069 
 2460              	.LASF29:
 2461 00d7 4144435F 		.ascii	"ADC_StartConvert\000"
 2461      53746172 
 2461      74436F6E 
 2461      76657274 
 2461      00
 2462              	.LASF6:
 2463 00e8 6C6F6E67 		.ascii	"long long int\000"
 2463      206C6F6E 
 2463      6720696E 
 2463      7400
 2464              	.LASF0:
 2465 00f6 7369676E 		.ascii	"signed char\000"
 2465      65642063 
 2465      68617200 
 2466              	.LASF31:
 2467 0102 73746174 		.ascii	"status\000"
 2467      757300
 2468              	.LASF13:
 2469 0109 696E7433 		.ascii	"int32\000"
 2469      3200
 2470              	.LASF27:
 2471 010f 4144435F 		.ascii	"ADC_Start\000"
 2471      53746172 
 2471      7400
 2472              	.LASF4:
 2473 0119 6C6F6E67 		.ascii	"long int\000"
 2473      20696E74 
 2473      00
 2474              	.LASF52:
 2475 0122 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2475      436F756E 
 2475      7473546F 
 2475      5F75566F 
 2475      6C747300 
 2476              	.LASF58:
 2477 0136 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2477      636F756E 
 2477      74735065 
 2477      72313056 
 2477      6F6C7400 
 2478              	.LASF9:
 2479 014a 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 61


 2479      3800
 2480              	.LASF61:
 2481 0150 43794465 		.ascii	"CyDelayUs\000"
 2481      6C617955 
 2481      7300
 2482              	.LASF16:
 2483 015a 646F7562 		.ascii	"double\000"
 2483      6C6500
 2484              	.LASF11:
 2485 0161 75696E74 		.ascii	"uint32\000"
 2485      333200
 2486              	.LASF38:
 2487 0168 6D61736B 		.ascii	"mask\000"
 2487      00
 2488              	.LASF56:
 2489 016d 4144435F 		.ascii	"ADC_initVar\000"
 2489      696E6974 
 2489      56617200 
 2490              	.LASF34:
 2491 0179 7265744D 		.ascii	"retMode\000"
 2491      6F646500 
 2492              	.LASF43:
 2493 0181 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2493      5365744C 
 2493      696D6974 
 2493      4D61736B 
 2493      00
 2494              	.LASF8:
 2495 0192 756E7369 		.ascii	"unsigned int\000"
 2495      676E6564 
 2495      20696E74 
 2495      00
 2496              	.LASF66:
 2497 019f 75566F6C 		.ascii	"uVolts\000"
 2497      747300
 2498              	.LASF5:
 2499 01a6 6C6F6E67 		.ascii	"long unsigned int\000"
 2499      20756E73 
 2499      69676E65 
 2499      6420696E 
 2499      7400
 2500              	.LASF44:
 2501 01b8 4144435F 		.ascii	"ADC_SetSatMask\000"
 2501      53657453 
 2501      61744D61 
 2501      736B00
 2502              	.LASF54:
 2503 01c7 766F6C74 		.ascii	"volts\000"
 2503      7300
 2504              	.LASF23:
 2505 01cd 746D7052 		.ascii	"tmpRegVal\000"
 2505      65675661 
 2505      6C00
 2506              	.LASF3:
 2507 01d7 73686F72 		.ascii	"short unsigned int\000"
 2507      7420756E 
 2507      7369676E 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 62


 2507      65642069 
 2507      6E7400
 2508              	.LASF65:
 2509 01ea 433A5C55 		.ascii	"C:\\Users\\Tymek\\Documents\\EE\\Clock\\CYBLE-22411"
 2509      73657273 
 2509      5C54796D 
 2509      656B5C44 
 2509      6F63756D 
 2510 0217 302D3030 		.ascii	"0-00_clock_firmware\\CYBLE-224110-00_Clock\\CYBLE-2"
 2510      5F636C6F 
 2510      636B5F66 
 2510      69726D77 
 2510      6172655C 
 2511 0248 32343131 		.ascii	"24110-00 Clock firmware.cydsn\000"
 2511      302D3030 
 2511      20436C6F 
 2511      636B2066 
 2511      69726D77 
 2512              	.LASF60:
 2513 0266 4379496E 		.ascii	"CyIntSetVector\000"
 2513      74536574 
 2513      56656374 
 2513      6F7200
 2514              	.LASF30:
 2515 0275 4144435F 		.ascii	"ADC_StopConvert\000"
 2515      53746F70 
 2515      436F6E76 
 2515      65727400 
 2516              	.LASF51:
 2517 0285 6D566F6C 		.ascii	"mVolts\000"
 2517      747300
 2518              	.LASF19:
 2519 028c 72656733 		.ascii	"reg32\000"
 2519      3200
 2520              	.LASF14:
 2521 0292 666C6F61 		.ascii	"float32\000"
 2521      74333200 
 2522              	.LASF21:
 2523 029a 73697A65 		.ascii	"sizetype\000"
 2523      74797065 
 2523      00
 2524              	.LASF40:
 2525 02a3 6C6F774C 		.ascii	"lowLimit\000"
 2525      696D6974 
 2525      00
 2526              	.LASF20:
 2527 02ac 6C6F6E67 		.ascii	"long double\000"
 2527      20646F75 
 2527      626C6500 
 2528              	.LASF41:
 2529 02b8 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2529      53657448 
 2529      6967684C 
 2529      696D6974 
 2529      00
 2530              	.LASF32:
 2531 02c9 4144435F 		.ascii	"ADC_IsEndConversion\000"
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 63


 2531      4973456E 
 2531      64436F6E 
 2531      76657273 
 2531      696F6E00 
 2532              	.LASF17:
 2533 02dd 696E7436 		.ascii	"int64\000"
 2533      3400
 2534              	.LASF59:
 2535 02e3 4379496E 		.ascii	"CyIntSetPriority\000"
 2535      74536574 
 2535      5072696F 
 2535      72697479 
 2535      00
 2536              	.LASF37:
 2537 02f4 4144435F 		.ascii	"ADC_SetChanMask\000"
 2537      53657443 
 2537      68616E4D 
 2537      61736B00 
 2538              	.LASF64:
 2539 0304 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2539      72617465 
 2539      645F536F 
 2539      75726365 
 2539      5C50536F 
 2540              	.LASF47:
 2541 0321 4144435F 		.ascii	"ADC_SetGain\000"
 2541      53657447 
 2541      61696E00 
 2542              	.LASF15:
 2543 032d 666C6F61 		.ascii	"float\000"
 2543      7400
 2544              	.LASF42:
 2545 0333 68696768 		.ascii	"highLimit\000"
 2545      4C696D69 
 2545      7400
 2546              	.LASF49:
 2547 033d 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2547      436F756E 
 2547      7473546F 
 2547      5F6D566F 
 2547      6C747300 
 2548              	.LASF39:
 2549 0351 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2549      5365744C 
 2549      6F774C69 
 2549      6D697400 
 2550              	.LASF62:
 2551 0361 43794861 		.ascii	"CyHalt\000"
 2551      6C7400
 2552              	.LASF1:
 2553 0368 756E7369 		.ascii	"unsigned char\000"
 2553      676E6564 
 2553      20636861 
 2553      7200
 2554              	.LASF57:
 2555 0376 4144435F 		.ascii	"ADC_offset\000"
 2555      6F666673 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwry3hI.s 			page 64


 2555      657400
 2556              	.LASF2:
 2557 0381 73686F72 		.ascii	"short int\000"
 2557      7420696E 
 2557      7400
 2558              	.LASF28:
 2559 038b 4144435F 		.ascii	"ADC_Stop\000"
 2559      53746F70 
 2559      00
 2560              	.LASF22:
 2561 0394 63684E75 		.ascii	"chNum\000"
 2561      6D00
 2562              	.LASF35:
 2563 039a 6368616E 		.ascii	"chan\000"
 2563      00
 2564              	.LASF18:
 2565 039f 63686172 		.ascii	"char\000"
 2565      00
 2566              	.LASF55:
 2567 03a4 4144435F 		.ascii	"ADC_channelsConfig\000"
 2567      6368616E 
 2567      6E656C73 
 2567      436F6E66 
 2567      696700
 2568              	.LASF46:
 2569 03b7 6F666673 		.ascii	"offset\000"
 2569      657400
 2570              	.LASF50:
 2571 03be 61646343 		.ascii	"adcCounts\000"
 2571      6F756E74 
 2571      7300
 2572              	.LASF26:
 2573 03c8 4144435F 		.ascii	"ADC_Enable\000"
 2573      456E6162 
 2573      6C6500
 2574              	.LASF12:
 2575 03d3 696E7431 		.ascii	"int16\000"
 2575      3600
 2576              	.LASF45:
 2577 03d9 4144435F 		.ascii	"ADC_SetOffset\000"
 2577      5365744F 
 2577      66667365 
 2577      7400
 2578              	.LASF36:
 2579 03e7 72657375 		.ascii	"result\000"
 2579      6C7400
 2580              	.LASF33:
 2581 03ee 4144435F 		.ascii	"ADC_GetResult16\000"
 2581      47657452 
 2581      6573756C 
 2581      74313600 
 2582              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
