ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	UART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_UartInit, %function
  25              	UART_UartInit:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 2


  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL
  76:Generated_Source\PSoC4/UART_UART.c ****     };
  77:Generated_Source\PSoC4/UART_UART.c **** 
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  80:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  81:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  82:Generated_Source\PSoC4/UART_UART.c ****     *
  83:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  84:Generated_Source\PSoC4/UART_UART.c ****     *
  85:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  86:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
  87:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 3


  88:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  89:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  90:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  93:Generated_Source\PSoC4/UART_UART.c ****     *
  94:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:Generated_Source\PSoC4/UART_UART.c ****     *
  98:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
  99:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 100:Generated_Source\PSoC4/UART_UART.c ****     {
 101:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 102:Generated_Source\PSoC4/UART_UART.c **** 
 103:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 104:Generated_Source\PSoC4/UART_UART.c ****         {
 105:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:Generated_Source\PSoC4/UART_UART.c ****         }
 107:Generated_Source\PSoC4/UART_UART.c ****         else
 108:Generated_Source\PSoC4/UART_UART.c ****         {
 109:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 111:Generated_Source\PSoC4/UART_UART.c **** 
 112:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 113:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 114:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 117:Generated_Source\PSoC4/UART_UART.c **** 
 118:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 119:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 120:Generated_Source\PSoC4/UART_UART.c **** 
 121:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 122:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 125:Generated_Source\PSoC4/UART_UART.c **** 
 126:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 127:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  = (uint8) config->rxBufferSize;
 130:Generated_Source\PSoC4/UART_UART.c **** 
 131:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 132:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  = (uint8) config->txBufferSize;
 135:Generated_Source\PSoC4/UART_UART.c **** 
 136:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 137:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 138:Generated_Source\PSoC4/UART_UART.c ****             {
 139:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 140:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 143:Generated_Source\PSoC4/UART_UART.c ****             }
 144:Generated_Source\PSoC4/UART_UART.c ****             else
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 4


 145:Generated_Source\PSoC4/UART_UART.c ****             {
 146:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 147:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 148:Generated_Source\PSoC4/UART_UART.c ****             }
 149:Generated_Source\PSoC4/UART_UART.c **** 
 150:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 153:Generated_Source\PSoC4/UART_UART.c **** 
 154:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 156:Generated_Source\PSoC4/UART_UART.c **** 
 157:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 158:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 163:Generated_Source\PSoC4/UART_UART.c **** 
 164:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 165:Generated_Source\PSoC4/UART_UART.c ****             {
 166:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 168:Generated_Source\PSoC4/UART_UART.c ****             }
 169:Generated_Source\PSoC4/UART_UART.c **** 
 170:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 172:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:Generated_Source\PSoC4/UART_UART.c **** 
 174:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 177:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 179:Generated_Source\PSoC4/UART_UART.c **** 
 180:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 181:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 183:Generated_Source\PSoC4/UART_UART.c **** 
 184:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 185:Generated_Source\PSoC4/UART_UART.c ****             {
 186:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 188:Generated_Source\PSoC4/UART_UART.c ****             }
 189:Generated_Source\PSoC4/UART_UART.c **** 
 190:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:Generated_Source\PSoC4/UART_UART.c **** 
 193:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 196:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 198:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 200:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 201:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 5


 202:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 204:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 205:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 206:Generated_Source\PSoC4/UART_UART.c **** 
 207:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 208:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 209:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 210:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 211:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 212:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 213:Generated_Source\PSoC4/UART_UART.c **** 
 214:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 215:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 216:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:Generated_Source\PSoC4/UART_UART.c ****         
 222:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 224:Generated_Source\PSoC4/UART_UART.c **** 
 225:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 226:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 227:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 229:Generated_Source\PSoC4/UART_UART.c **** 
 230:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 231:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 232:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 233:Generated_Source\PSoC4/UART_UART.c ****         }
 234:Generated_Source\PSoC4/UART_UART.c ****     }
 235:Generated_Source\PSoC4/UART_UART.c **** 
 236:Generated_Source\PSoC4/UART_UART.c **** #else
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 239:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 240:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 241:Generated_Source\PSoC4/UART_UART.c ****     *
 242:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 245:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 246:Generated_Source\PSoC4/UART_UART.c ****     {
  28              		.loc 1 246 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 247:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 248:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  33              		.loc 1 248 0
  34 0000 144A     		ldr	r2, .L2
  35 0002 154B     		ldr	r3, .L2+4
  36 0004 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 6


 250:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 251:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  37              		.loc 1 251 0
  38 0006 0023     		movs	r3, #0
  39 0008 144A     		ldr	r2, .L2+8
  40 000a 1360     		str	r3, [r2]
 252:Generated_Source\PSoC4/UART_UART.c **** 
 253:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 254:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  41              		.loc 1 254 0
  42 000c 0122     		movs	r2, #1
  43 000e 1449     		ldr	r1, .L2+12
  44 0010 0A60     		str	r2, [r1]
 255:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  45              		.loc 1 255 0
  46 0012 0721     		movs	r1, #7
  47 0014 1348     		ldr	r0, .L2+16
  48 0016 0160     		str	r1, [r0]
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  49              		.loc 1 256 0
  50 0018 1348     		ldr	r0, .L2+20
  51 001a 0160     		str	r1, [r0]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  52              		.loc 1 257 0
  53 001c 1349     		ldr	r1, .L2+24
  54 001e 0B60     		str	r3, [r1]
 258:Generated_Source\PSoC4/UART_UART.c **** 
 259:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 260:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  55              		.loc 1 260 0
  56 0020 1349     		ldr	r1, .L2+28
  57 0022 0A60     		str	r2, [r1]
 261:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  58              		.loc 1 261 0
  59 0024 1349     		ldr	r1, .L2+32
  60 0026 144A     		ldr	r2, .L2+36
  61 0028 1160     		str	r1, [r2]
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  62              		.loc 1 262 0
  63 002a 144A     		ldr	r2, .L2+40
  64 002c 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/UART_UART.c **** 
 264:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 265:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
  65              		.loc 1 265 0
  66 002e 0421     		movs	r1, #4
  67 0030 134A     		ldr	r2, .L2+44
  68 0032 1160     		str	r1, [r2]
 266:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 267:Generated_Source\PSoC4/UART_UART.c **** 
 268:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 270:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 271:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 272:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 273:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 274:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 7


 275:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 276:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 277:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 278:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 279:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 280:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 281:Generated_Source\PSoC4/UART_UART.c **** 
 282:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 283:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  69              		.loc 1 283 0
  70 0034 134A     		ldr	r2, .L2+48
  71 0036 1360     		str	r3, [r2]
 284:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  72              		.loc 1 284 0
  73 0038 134A     		ldr	r2, .L2+52
  74 003a 1360     		str	r3, [r2]
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  75              		.loc 1 285 0
  76 003c 134A     		ldr	r2, .L2+56
  77 003e 1360     		str	r3, [r2]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  78              		.loc 1 286 0
  79 0040 134A     		ldr	r2, .L2+60
  80 0042 1360     		str	r3, [r2]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  81              		.loc 1 287 0
  82 0044 134A     		ldr	r2, .L2+64
  83 0046 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  84              		.loc 1 288 0
  85 0048 134A     		ldr	r2, .L2+68
  86 004a 1360     		str	r3, [r2]
 289:Generated_Source\PSoC4/UART_UART.c ****     
 290:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
  87              		.loc 1 291 0
  88 004c 1268     		ldr	r2, [r2]
  89 004e 134B     		ldr	r3, .L2+72
  90 0050 1A80     		strh	r2, [r3]
 292:Generated_Source\PSoC4/UART_UART.c **** 
 293:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 294:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 295:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 297:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 298:Generated_Source\PSoC4/UART_UART.c **** 
 299:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 300:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 301:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 302:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 303:Generated_Source\PSoC4/UART_UART.c ****     }
  91              		.loc 1 303 0
  92              		@ sp needed
  93 0052 7047     		bx	lr
  94              	.L3:
  95              		.align	2
  96              	.L2:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 8


  97 0054 09000002 		.word	33554441
  98 0058 00002440 		.word	1076101120
  99 005c 40002440 		.word	1076101184
 100 0060 48002440 		.word	1076101192
 101 0064 00032440 		.word	1076101888
 102 0068 04032440 		.word	1076101892
 103 006c 10032440 		.word	1076101904
 104 0070 44002440 		.word	1076101188
 105 0074 07000080 		.word	-2147483641
 106 0078 00022440 		.word	1076101632
 107 007c 04022440 		.word	1076101636
 108 0080 50002440 		.word	1076101200
 109 0084 880E2440 		.word	1076104840
 110 0088 C80E2440 		.word	1076104904
 111 008c 480F2440 		.word	1076105032
 112 0090 080F2440 		.word	1076104968
 113 0094 C80F2440 		.word	1076105160
 114 0098 880F2440 		.word	1076105096
 115 009c 00000000 		.word	UART_IntrTxMask
 116              		.cfi_endproc
 117              	.LFE2:
 118              		.size	UART_UartInit, .-UART_UartInit
 119              		.section	.text.UART_UartPostEnable,"ax",%progbits
 120              		.align	2
 121              		.global	UART_UartPostEnable
 122              		.code	16
 123              		.thumb_func
 124              		.type	UART_UartPostEnable, %function
 125              	UART_UartPostEnable:
 126              	.LFB3:
 304:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:Generated_Source\PSoC4/UART_UART.c **** 
 306:Generated_Source\PSoC4/UART_UART.c **** 
 307:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 309:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/UART_UART.c **** *
 311:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 313:Generated_Source\PSoC4/UART_UART.c **** *
 314:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 316:Generated_Source\PSoC4/UART_UART.c **** {
 127              		.loc 1 316 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 317:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 318:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SCL_MISO_PIN)
 319:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SCL_MISO_PIN_USED)
 320:Generated_Source\PSoC4/UART_UART.c ****         {
 321:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 322:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SCL_MISO_HSIOM_REG, UART_TX_SCL_MISO_HSIOM_MASK,
 323:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SCL_MISO_HSIOM_POS, UART_TX_SCL_MISO_HSIOM_SEL_U
 324:Generated_Source\PSoC4/UART_UART.c ****         }
 325:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SCL_MISO_PIN_PIN) */
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 9


 326:Generated_Source\PSoC4/UART_UART.c **** 
 327:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 328:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 329:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 330:Generated_Source\PSoC4/UART_UART.c ****             {
 331:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 333:Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_UART)
 334:Generated_Source\PSoC4/UART_UART.c ****             }
 335:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 336:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 337:Generated_Source\PSoC4/UART_UART.c **** 
 338:Generated_Source\PSoC4/UART_UART.c **** #else
 339:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 340:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 341:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 132              		.loc 1 341 0
 133 0000 064A     		ldr	r2, .L5
 134 0002 1168     		ldr	r1, [r2]
 135 0004 064B     		ldr	r3, .L5+4
 136 0006 0B40     		ands	r3, r1
 137 0008 9021     		movs	r1, #144
 138 000a 0904     		lsls	r1, r1, #16
 139 000c 0B43     		orrs	r3, r1
 140 000e 1360     		str	r3, [r2]
 342:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 343:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 344:Generated_Source\PSoC4/UART_UART.c **** 
 345:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 346:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 347:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 348:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 349:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 350:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:Generated_Source\PSoC4/UART_UART.c **** 
 352:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 353:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 141              		.loc 1 353 0
 142 0010 044B     		ldr	r3, .L5+8
 143 0012 1A88     		ldrh	r2, [r3]
 144 0014 044B     		ldr	r3, .L5+12
 145 0016 1A60     		str	r2, [r3]
 354:Generated_Source\PSoC4/UART_UART.c **** }
 146              		.loc 1 354 0
 147              		@ sp needed
 148 0018 7047     		bx	lr
 149              	.L6:
 150 001a C046     		.align	2
 151              	.L5:
 152 001c 00000240 		.word	1073872896
 153 0020 FFFF0FFF 		.word	-15728641
 154 0024 00000000 		.word	UART_IntrTxMask
 155 0028 880F2440 		.word	1076105096
 156              		.cfi_endproc
 157              	.LFE3:
 158              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 159              		.section	.text.UART_UartStop,"ax",%progbits
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 10


 160              		.align	2
 161              		.global	UART_UartStop
 162              		.code	16
 163              		.thumb_func
 164              		.type	UART_UartStop, %function
 165              	UART_UartStop:
 166              	.LFB4:
 355:Generated_Source\PSoC4/UART_UART.c **** 
 356:Generated_Source\PSoC4/UART_UART.c **** 
 357:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 359:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 360:Generated_Source\PSoC4/UART_UART.c **** *
 361:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 363:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:Generated_Source\PSoC4/UART_UART.c **** *
 366:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 367:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 368:Generated_Source\PSoC4/UART_UART.c **** {
 167              		.loc 1 368 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 369:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 370:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SCL_MISO_PIN)
 371:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SCL_MISO_PIN_USED)
 372:Generated_Source\PSoC4/UART_UART.c ****         {
 373:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 374:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SCL_MISO_HSIOM_REG, UART_TX_SCL_MISO_HSIOM_MASK,
 375:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SCL_MISO_HSIOM_POS, UART_TX_SCL_MISO_HSIOM_SEL_G
 376:Generated_Source\PSoC4/UART_UART.c ****         }
 377:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SCL_MISO_PIN_PIN) */
 378:Generated_Source\PSoC4/UART_UART.c **** 
 379:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 380:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 381:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 382:Generated_Source\PSoC4/UART_UART.c ****             {
 383:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 384:Generated_Source\PSoC4/UART_UART.c ****                 UART_uart_rts_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 385:Generated_Source\PSoC4/UART_UART.c **** 
 386:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 387:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 388:Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_GPIO)
 389:Generated_Source\PSoC4/UART_UART.c ****             }
 390:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 391:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 392:Generated_Source\PSoC4/UART_UART.c **** 
 393:Generated_Source\PSoC4/UART_UART.c **** #else
 394:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 395:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 396:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 172              		.loc 1 396 0
 173 0000 064A     		ldr	r2, .L8
 174 0002 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 11


 175 0004 064B     		ldr	r3, .L8+4
 176 0006 0B40     		ands	r3, r1
 177 0008 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 398:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 399:Generated_Source\PSoC4/UART_UART.c **** 
 400:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 401:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 402:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 403:Generated_Source\PSoC4/UART_UART.c **** 
 404:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 405:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 406:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 407:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 408:Generated_Source\PSoC4/UART_UART.c **** 
 409:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 412:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 413:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 414:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 415:Generated_Source\PSoC4/UART_UART.c **** 
 416:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 178              		.loc 1 417 0
 179 000a 064B     		ldr	r3, .L8+8
 180 000c 1A68     		ldr	r2, [r3]
 181 000e E423     		movs	r3, #228
 182 0010 DB00     		lsls	r3, r3, #3
 183 0012 1340     		ands	r3, r2
 184 0014 044A     		ldr	r2, .L8+12
 185 0016 1380     		strh	r3, [r2]
 418:Generated_Source\PSoC4/UART_UART.c **** }
 186              		.loc 1 418 0
 187              		@ sp needed
 188 0018 7047     		bx	lr
 189              	.L9:
 190 001a C046     		.align	2
 191              	.L8:
 192 001c 00000240 		.word	1073872896
 193 0020 FFFF0FFF 		.word	-15728641
 194 0024 880F2440 		.word	1076105096
 195 0028 00000000 		.word	UART_IntrTxMask
 196              		.cfi_endproc
 197              	.LFE4:
 198              		.size	UART_UartStop, .-UART_UartStop
 199              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 200              		.align	2
 201              		.global	UART_UartSetRxAddress
 202              		.code	16
 203              		.thumb_func
 204              		.type	UART_UartSetRxAddress, %function
 205              	UART_UartSetRxAddress:
 206              	.LFB5:
 419:Generated_Source\PSoC4/UART_UART.c **** 
 420:Generated_Source\PSoC4/UART_UART.c **** 
 421:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 12


 422:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 423:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 424:Generated_Source\PSoC4/UART_UART.c **** *
 425:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 427:Generated_Source\PSoC4/UART_UART.c **** *
 428:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 432:Generated_Source\PSoC4/UART_UART.c **** {
 207              		.loc 1 432 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL0:
 433:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 434:Generated_Source\PSoC4/UART_UART.c **** 
 435:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 213              		.loc 1 435 0
 214 0000 034A     		ldr	r2, .L11
 215 0002 1368     		ldr	r3, [r2]
 216              	.LVL1:
 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 217              		.loc 1 437 0
 218 0004 FF21     		movs	r1, #255
 219 0006 8B43     		bics	r3, r1
 220              	.LVL2:
 438:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 221              		.loc 1 438 0
 222 0008 0840     		ands	r0, r1
 223              	.LVL3:
 224 000a 1843     		orrs	r0, r3
 225              	.LVL4:
 439:Generated_Source\PSoC4/UART_UART.c **** 
 440:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 226              		.loc 1 440 0
 227 000c 1060     		str	r0, [r2]
 441:Generated_Source\PSoC4/UART_UART.c **** }
 228              		.loc 1 441 0
 229              		@ sp needed
 230 000e 7047     		bx	lr
 231              	.L12:
 232              		.align	2
 233              	.L11:
 234 0010 10032440 		.word	1076101904
 235              		.cfi_endproc
 236              	.LFE5:
 237              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 238              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 239              		.align	2
 240              		.global	UART_UartSetRxAddressMask
 241              		.code	16
 242              		.thumb_func
 243              		.type	UART_UartSetRxAddressMask, %function
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 13


 244              	UART_UartSetRxAddressMask:
 245              	.LFB6:
 442:Generated_Source\PSoC4/UART_UART.c **** 
 443:Generated_Source\PSoC4/UART_UART.c **** 
 444:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 446:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_UART.c **** *
 448:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 451:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 454:Generated_Source\PSoC4/UART_UART.c **** *
 455:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 457:Generated_Source\PSoC4/UART_UART.c **** {
 246              		.loc 1 457 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              	.LVL5:
 458:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 459:Generated_Source\PSoC4/UART_UART.c **** 
 460:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 252              		.loc 1 460 0
 253 0000 034A     		ldr	r2, .L14
 254 0002 1168     		ldr	r1, [r2]
 255              	.LVL6:
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 256              		.loc 1 462 0
 257 0004 034B     		ldr	r3, .L14+4
 258 0006 0B40     		ands	r3, r1
 259              	.LVL7:
 463:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 260              		.loc 1 463 0
 261 0008 0004     		lsls	r0, r0, #16
 262              	.LVL8:
 263 000a 1843     		orrs	r0, r3
 264              	.LVL9:
 464:Generated_Source\PSoC4/UART_UART.c **** 
 465:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 265              		.loc 1 465 0
 266 000c 1060     		str	r0, [r2]
 466:Generated_Source\PSoC4/UART_UART.c **** }
 267              		.loc 1 466 0
 268              		@ sp needed
 269 000e 7047     		bx	lr
 270              	.L15:
 271              		.align	2
 272              	.L14:
 273 0010 10032440 		.word	1076101904
 274 0014 FFFF00FF 		.word	-16711681
 275              		.cfi_endproc
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 14


 276              	.LFE6:
 277              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 278              		.section	.text.UART_UartPutString,"ax",%progbits
 279              		.align	2
 280              		.global	UART_UartPutString
 281              		.code	16
 282              		.thumb_func
 283              		.type	UART_UartPutString, %function
 284              	UART_UartPutString:
 285              	.LFB7:
 467:Generated_Source\PSoC4/UART_UART.c **** 
 468:Generated_Source\PSoC4/UART_UART.c **** 
 469:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 470:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 471:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 472:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 473:Generated_Source\PSoC4/UART_UART.c ****     *
 474:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 475:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 477:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 478:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 482:Generated_Source\PSoC4/UART_UART.c ****     *
 483:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 484:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 487:Generated_Source\PSoC4/UART_UART.c ****     *
 488:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 489:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 491:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 494:Generated_Source\PSoC4/UART_UART.c ****     *
 495:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 497:Generated_Source\PSoC4/UART_UART.c ****     {
 498:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 499:Generated_Source\PSoC4/UART_UART.c **** 
 500:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 501:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 502:Generated_Source\PSoC4/UART_UART.c ****         {
 503:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 504:Generated_Source\PSoC4/UART_UART.c ****         }
 505:Generated_Source\PSoC4/UART_UART.c **** 
 506:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 507:Generated_Source\PSoC4/UART_UART.c ****         {
 508:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 510:Generated_Source\PSoC4/UART_UART.c ****         }
 511:Generated_Source\PSoC4/UART_UART.c **** 
 512:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 513:Generated_Source\PSoC4/UART_UART.c ****     }
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 15


 514:Generated_Source\PSoC4/UART_UART.c **** 
 515:Generated_Source\PSoC4/UART_UART.c **** 
 516:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 517:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 518:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 519:Generated_Source\PSoC4/UART_UART.c ****     *
 520:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 522:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 525:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 527:Generated_Source\PSoC4/UART_UART.c ****     *
 528:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 529:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 530:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 531:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 532:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW	Attempt to read from an empty
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 536:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 537:Generated_Source\PSoC4/UART_UART.c ****     *
 538:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 539:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 541:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 544:Generated_Source\PSoC4/UART_UART.c ****     *
 545:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 546:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 547:Generated_Source\PSoC4/UART_UART.c ****     {
 548:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 549:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 550:Generated_Source\PSoC4/UART_UART.c **** 
 551:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 552:Generated_Source\PSoC4/UART_UART.c ****         {
 553:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 554:Generated_Source\PSoC4/UART_UART.c ****         }
 555:Generated_Source\PSoC4/UART_UART.c ****         #endif
 556:Generated_Source\PSoC4/UART_UART.c **** 
 557:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 558:Generated_Source\PSoC4/UART_UART.c ****         {
 559:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 561:Generated_Source\PSoC4/UART_UART.c ****             */
 562:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 563:Generated_Source\PSoC4/UART_UART.c ****             {
 564:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 565:Generated_Source\PSoC4/UART_UART.c ****             }
 566:Generated_Source\PSoC4/UART_UART.c ****             #endif
 567:Generated_Source\PSoC4/UART_UART.c **** 
 568:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 569:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 570:Generated_Source\PSoC4/UART_UART.c ****         }
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 16


 571:Generated_Source\PSoC4/UART_UART.c ****         else
 572:Generated_Source\PSoC4/UART_UART.c ****         {
 573:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:Generated_Source\PSoC4/UART_UART.c ****             */
 576:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 577:Generated_Source\PSoC4/UART_UART.c **** 
 578:Generated_Source\PSoC4/UART_UART.c **** 
 579:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 581:Generated_Source\PSoC4/UART_UART.c ****             {
 582:Generated_Source\PSoC4/UART_UART.c **** 
 583:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:Generated_Source\PSoC4/UART_UART.c ****                 */
 586:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 587:Generated_Source\PSoC4/UART_UART.c **** 
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 589:Generated_Source\PSoC4/UART_UART.c ****             }
 590:Generated_Source\PSoC4/UART_UART.c ****             #endif
 591:Generated_Source\PSoC4/UART_UART.c ****         }
 592:Generated_Source\PSoC4/UART_UART.c **** 
 593:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 594:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 595:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 596:Generated_Source\PSoC4/UART_UART.c **** 
 597:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 598:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:Generated_Source\PSoC4/UART_UART.c ****         */
 600:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 601:Generated_Source\PSoC4/UART_UART.c **** 
 602:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 603:Generated_Source\PSoC4/UART_UART.c ****     }
 604:Generated_Source\PSoC4/UART_UART.c **** 
 605:Generated_Source\PSoC4/UART_UART.c **** 
 606:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 607:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 608:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 609:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 610:Generated_Source\PSoC4/UART_UART.c ****         *
 611:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 612:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:Generated_Source\PSoC4/UART_UART.c ****         *
 615:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:Generated_Source\PSoC4/UART_UART.c ****         *
 619:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 620:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 621:Generated_Source\PSoC4/UART_UART.c ****         {
 622:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****             {
 624:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 625:Generated_Source\PSoC4/UART_UART.c ****             }
 626:Generated_Source\PSoC4/UART_UART.c ****             else
 627:Generated_Source\PSoC4/UART_UART.c ****             {
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 17


 628:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 629:Generated_Source\PSoC4/UART_UART.c ****             }
 630:Generated_Source\PSoC4/UART_UART.c ****         }
 631:Generated_Source\PSoC4/UART_UART.c **** 
 632:Generated_Source\PSoC4/UART_UART.c **** 
 633:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 634:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 635:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 636:Generated_Source\PSoC4/UART_UART.c ****         *
 637:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/UART_UART.c ****         *
 643:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *
 647:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 648:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 649:Generated_Source\PSoC4/UART_UART.c ****         {
 650:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 651:Generated_Source\PSoC4/UART_UART.c **** 
 652:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 655:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:Generated_Source\PSoC4/UART_UART.c **** 
 657:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:Generated_Source\PSoC4/UART_UART.c ****         }
 659:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 660:Generated_Source\PSoC4/UART_UART.c **** 
 661:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** 
 664:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 665:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 666:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 667:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 668:Generated_Source\PSoC4/UART_UART.c ****     *
 669:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 671:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 673:Generated_Source\PSoC4/UART_UART.c ****     *
 674:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 676:Generated_Source\PSoC4/UART_UART.c ****     *
 677:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 678:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 679:Generated_Source\PSoC4/UART_UART.c ****     {
 286              		.loc 1 679 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              	.LVL10:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 18


 291 0000 70B5     		push	{r4, r5, r6, lr}
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 4, -16
 294              		.cfi_offset 5, -12
 295              		.cfi_offset 6, -8
 296              		.cfi_offset 14, -4
 297 0002 0500     		movs	r5, r0
 298              	.LVL11:
 680:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 681:Generated_Source\PSoC4/UART_UART.c **** 
 682:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 299              		.loc 1 682 0
 300 0004 0024     		movs	r4, #0
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 301              		.loc 1 685 0
 302 0006 02E0     		b	.L17
 303              	.LVL12:
 304              	.L18:
 686:Generated_Source\PSoC4/UART_UART.c ****         {
 687:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 305              		.loc 1 687 0
 306 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 307              	.LVL13:
 688:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 308              		.loc 1 688 0
 309 000c 0134     		adds	r4, r4, #1
 310              	.LVL14:
 311              	.L17:
 685:Generated_Source\PSoC4/UART_UART.c ****         {
 312              		.loc 1 685 0
 313 000e 285D     		ldrb	r0, [r5, r4]
 314 0010 0028     		cmp	r0, #0
 315 0012 F9D1     		bne	.L18
 689:Generated_Source\PSoC4/UART_UART.c ****         }
 690:Generated_Source\PSoC4/UART_UART.c ****     }
 316              		.loc 1 690 0
 317              		@ sp needed
 318              	.LVL15:
 319              	.LVL16:
 320 0014 70BD     		pop	{r4, r5, r6, pc}
 321              		.cfi_endproc
 322              	.LFE7:
 323              		.size	UART_UartPutString, .-UART_UartPutString
 324 0016 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 325              		.align	2
 326              		.global	UART_UartPutCRLF
 327              		.code	16
 328              		.thumb_func
 329              		.type	UART_UartPutCRLF, %function
 330              	UART_UartPutCRLF:
 331              	.LFB8:
 691:Generated_Source\PSoC4/UART_UART.c **** 
 692:Generated_Source\PSoC4/UART_UART.c **** 
 693:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 19


 695:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/UART_UART.c ****     *
 697:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 699:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *
 702:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 705:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 706:Generated_Source\PSoC4/UART_UART.c ****     {
 332              		.loc 1 706 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL17:
 337 0000 10B5     		push	{r4, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
 707:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 341              		.loc 1 707 0
 342 0002 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 343              	.LVL18:
 708:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 344              		.loc 1 708 0
 345 0006 0D20     		movs	r0, #13
 346 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 347              	.LVL19:
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 348              		.loc 1 709 0
 349 000c 0A20     		movs	r0, #10
 350 000e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 351              	.LVL20:
 710:Generated_Source\PSoC4/UART_UART.c ****     }
 352              		.loc 1 710 0
 353              		@ sp needed
 354 0012 10BD     		pop	{r4, pc}
 355              		.cfi_endproc
 356              	.LFE8:
 357              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 358              		.section	.text.UART_UartEnableCts,"ax",%progbits
 359              		.align	2
 360              		.global	UART_UartEnableCts
 361              		.code	16
 362              		.thumb_func
 363              		.type	UART_UartEnableCts, %function
 364              	UART_UartEnableCts:
 365              	.LFB9:
 711:Generated_Source\PSoC4/UART_UART.c **** 
 712:Generated_Source\PSoC4/UART_UART.c **** 
 713:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 714:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 715:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 716:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 717:Generated_Source\PSoC4/UART_UART.c ****         *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 20


 718:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 719:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 720:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 721:Generated_Source\PSoC4/UART_UART.c ****         *
 722:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 723:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 724:Generated_Source\PSoC4/UART_UART.c ****         {
 366              		.loc 1 724 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 725:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 371              		.loc 1 725 0
 372 0000 034A     		ldr	r2, .L21
 373 0002 1368     		ldr	r3, [r2]
 374 0004 8021     		movs	r1, #128
 375 0006 8904     		lsls	r1, r1, #18
 376 0008 0B43     		orrs	r3, r1
 377 000a 1360     		str	r3, [r2]
 726:Generated_Source\PSoC4/UART_UART.c ****         }
 378              		.loc 1 726 0
 379              		@ sp needed
 380 000c 7047     		bx	lr
 381              	.L22:
 382 000e C046     		.align	2
 383              	.L21:
 384 0010 50002440 		.word	1076101200
 385              		.cfi_endproc
 386              	.LFE9:
 387              		.size	UART_UartEnableCts, .-UART_UartEnableCts
 388              		.section	.text.UART_UartDisableCts,"ax",%progbits
 389              		.align	2
 390              		.global	UART_UartDisableCts
 391              		.code	16
 392              		.thumb_func
 393              		.type	UART_UartDisableCts, %function
 394              	UART_UartDisableCts:
 395              	.LFB10:
 727:Generated_Source\PSoC4/UART_UART.c **** 
 728:Generated_Source\PSoC4/UART_UART.c **** 
 729:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 730:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 731:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 732:Generated_Source\PSoC4/UART_UART.c ****         *
 733:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 734:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 735:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 736:Generated_Source\PSoC4/UART_UART.c ****         *
 737:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 738:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 739:Generated_Source\PSoC4/UART_UART.c ****         {
 396              		.loc 1 739 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 21


 740:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 401              		.loc 1 740 0
 402 0000 024A     		ldr	r2, .L24
 403 0002 1168     		ldr	r1, [r2]
 404 0004 024B     		ldr	r3, .L24+4
 405 0006 0B40     		ands	r3, r1
 406 0008 1360     		str	r3, [r2]
 741:Generated_Source\PSoC4/UART_UART.c ****         }
 407              		.loc 1 741 0
 408              		@ sp needed
 409 000a 7047     		bx	lr
 410              	.L25:
 411              		.align	2
 412              	.L24:
 413 000c 50002440 		.word	1076101200
 414 0010 FFFFFFFD 		.word	-33554433
 415              		.cfi_endproc
 416              	.LFE10:
 417              		.size	UART_UartDisableCts, .-UART_UartDisableCts
 418              		.section	.text.UART_UartSetCtsPolarity,"ax",%progbits
 419              		.align	2
 420              		.global	UART_UartSetCtsPolarity
 421              		.code	16
 422              		.thumb_func
 423              		.type	UART_UartSetCtsPolarity, %function
 424              	UART_UartSetCtsPolarity:
 425              	.LFB11:
 742:Generated_Source\PSoC4/UART_UART.c **** 
 743:Generated_Source\PSoC4/UART_UART.c **** 
 744:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 745:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 746:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 747:Generated_Source\PSoC4/UART_UART.c ****         *
 748:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 749:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 750:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 751:Generated_Source\PSoC4/UART_UART.c ****         *
 752:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of CTS output signal.
 753:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 754:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 755:Generated_Source\PSoC4/UART_UART.c ****         *
 756:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 757:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 758:Generated_Source\PSoC4/UART_UART.c ****         {
 426              		.loc 1 758 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431              	.LVL21:
 759:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 432              		.loc 1 759 0
 433 0000 0028     		cmp	r0, #0
 434 0002 06D0     		beq	.L27
 760:Generated_Source\PSoC4/UART_UART.c ****             {
 761:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 435              		.loc 1 761 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 22


 436 0004 064A     		ldr	r2, .L29
 437 0006 1368     		ldr	r3, [r2]
 438 0008 8021     		movs	r1, #128
 439 000a 4904     		lsls	r1, r1, #17
 440 000c 0B43     		orrs	r3, r1
 441 000e 1360     		str	r3, [r2]
 442 0010 04E0     		b	.L26
 443              	.L27:
 762:Generated_Source\PSoC4/UART_UART.c ****             }
 763:Generated_Source\PSoC4/UART_UART.c ****             else
 764:Generated_Source\PSoC4/UART_UART.c ****             {
 765:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 444              		.loc 1 765 0
 445 0012 034A     		ldr	r2, .L29
 446 0014 1168     		ldr	r1, [r2]
 447 0016 034B     		ldr	r3, .L29+4
 448 0018 0B40     		ands	r3, r1
 449 001a 1360     		str	r3, [r2]
 450              	.L26:
 766:Generated_Source\PSoC4/UART_UART.c ****             }
 767:Generated_Source\PSoC4/UART_UART.c ****         }
 451              		.loc 1 767 0
 452              		@ sp needed
 453 001c 7047     		bx	lr
 454              	.L30:
 455 001e C046     		.align	2
 456              	.L29:
 457 0020 50002440 		.word	1076101200
 458 0024 FFFFFFFE 		.word	-16777217
 459              		.cfi_endproc
 460              	.LFE11:
 461              		.size	UART_UartSetCtsPolarity, .-UART_UartSetCtsPolarity
 462              		.text
 463              	.Letext0:
 464              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 465              		.file 3 "Generated_Source\\PSoC4\\UART_PVT.h"
 466              		.file 4 "Generated_Source\\PSoC4\\UART_SPI_UART.h"
 467              		.section	.debug_info,"",%progbits
 468              	.Ldebug_info0:
 469 0000 6C020000 		.4byte	0x26c
 470 0004 0400     		.2byte	0x4
 471 0006 00000000 		.4byte	.Ldebug_abbrev0
 472 000a 04       		.byte	0x4
 473 000b 01       		.uleb128 0x1
 474 000c 79010000 		.4byte	.LASF35
 475 0010 0C       		.byte	0xc
 476 0011 73020000 		.4byte	.LASF36
 477 0015 A2020000 		.4byte	.LASF37
 478 0019 00000000 		.4byte	.Ldebug_ranges0+0
 479 001d 00000000 		.4byte	0
 480 0021 00000000 		.4byte	.Ldebug_line0
 481 0025 02       		.uleb128 0x2
 482 0026 01       		.byte	0x1
 483 0027 06       		.byte	0x6
 484 0028 96020000 		.4byte	.LASF0
 485 002c 02       		.uleb128 0x2
 486 002d 01       		.byte	0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 23


 487 002e 08       		.byte	0x8
 488 002f 8A000000 		.4byte	.LASF1
 489 0033 02       		.uleb128 0x2
 490 0034 02       		.byte	0x2
 491 0035 05       		.byte	0x5
 492 0036 33020000 		.4byte	.LASF2
 493 003a 02       		.uleb128 0x2
 494 003b 02       		.byte	0x2
 495 003c 07       		.byte	0x7
 496 003d D2000000 		.4byte	.LASF3
 497 0041 02       		.uleb128 0x2
 498 0042 04       		.byte	0x4
 499 0043 05       		.byte	0x5
 500 0044 55020000 		.4byte	.LASF4
 501 0048 02       		.uleb128 0x2
 502 0049 04       		.byte	0x4
 503 004a 07       		.byte	0x7
 504 004b B2000000 		.4byte	.LASF5
 505 004f 02       		.uleb128 0x2
 506 0050 08       		.byte	0x8
 507 0051 05       		.byte	0x5
 508 0052 00000000 		.4byte	.LASF6
 509 0056 02       		.uleb128 0x2
 510 0057 08       		.byte	0x8
 511 0058 07       		.byte	0x7
 512 0059 50010000 		.4byte	.LASF7
 513 005d 03       		.uleb128 0x3
 514 005e 04       		.byte	0x4
 515 005f 05       		.byte	0x5
 516 0060 696E7400 		.ascii	"int\000"
 517 0064 02       		.uleb128 0x2
 518 0065 04       		.byte	0x4
 519 0066 07       		.byte	0x7
 520 0067 2D010000 		.4byte	.LASF8
 521 006b 04       		.uleb128 0x4
 522 006c 1F010000 		.4byte	.LASF9
 523 0070 02       		.byte	0x2
 524 0071 D301     		.2byte	0x1d3
 525 0073 3A000000 		.4byte	0x3a
 526 0077 04       		.uleb128 0x4
 527 0078 26010000 		.4byte	.LASF10
 528 007c 02       		.byte	0x2
 529 007d D401     		.2byte	0x1d4
 530 007f 48000000 		.4byte	0x48
 531 0083 02       		.uleb128 0x2
 532 0084 04       		.byte	0x4
 533 0085 04       		.byte	0x4
 534 0086 84000000 		.4byte	.LASF11
 535 008a 02       		.uleb128 0x2
 536 008b 08       		.byte	0x8
 537 008c 04       		.byte	0x4
 538 008d 02010000 		.4byte	.LASF12
 539 0091 04       		.uleb128 0x4
 540 0092 98000000 		.4byte	.LASF13
 541 0096 02       		.byte	0x2
 542 0097 E301     		.2byte	0x1e3
 543 0099 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 24


 544 009d 02       		.uleb128 0x2
 545 009e 01       		.byte	0x1
 546 009f 08       		.byte	0x8
 547 00a0 2E020000 		.4byte	.LASF14
 548 00a4 04       		.uleb128 0x4
 549 00a5 0E000000 		.4byte	.LASF15
 550 00a9 02       		.byte	0x2
 551 00aa 7E02     		.2byte	0x27e
 552 00ac B0000000 		.4byte	0xb0
 553 00b0 05       		.uleb128 0x5
 554 00b1 77000000 		.4byte	0x77
 555 00b5 02       		.uleb128 0x2
 556 00b6 08       		.byte	0x8
 557 00b7 04       		.byte	0x4
 558 00b8 67020000 		.4byte	.LASF16
 559 00bc 02       		.uleb128 0x2
 560 00bd 04       		.byte	0x4
 561 00be 07       		.byte	0x7
 562 00bf 07020000 		.4byte	.LASF17
 563 00c3 06       		.uleb128 0x6
 564 00c4 3A010000 		.4byte	.LASF18
 565 00c8 01       		.byte	0x1
 566 00c9 F5       		.byte	0xf5
 567 00ca 00000000 		.4byte	.LFB2
 568 00ce A0000000 		.4byte	.LFE2-.LFB2
 569 00d2 01       		.uleb128 0x1
 570 00d3 9C       		.byte	0x9c
 571 00d4 07       		.uleb128 0x7
 572 00d5 9E000000 		.4byte	.LASF19
 573 00d9 01       		.byte	0x1
 574 00da 3B01     		.2byte	0x13b
 575 00dc 00000000 		.4byte	.LFB3
 576 00e0 2C000000 		.4byte	.LFE3-.LFB3
 577 00e4 01       		.uleb128 0x1
 578 00e5 9C       		.byte	0x9c
 579 00e6 07       		.uleb128 0x7
 580 00e7 C4000000 		.4byte	.LASF20
 581 00eb 01       		.byte	0x1
 582 00ec 6F01     		.2byte	0x16f
 583 00ee 00000000 		.4byte	.LFB4
 584 00f2 2C000000 		.4byte	.LFE4-.LFB4
 585 00f6 01       		.uleb128 0x1
 586 00f7 9C       		.byte	0x9c
 587 00f8 08       		.uleb128 0x8
 588 00f9 09010000 		.4byte	.LASF21
 589 00fd 01       		.byte	0x1
 590 00fe AF01     		.2byte	0x1af
 591 0100 00000000 		.4byte	.LFB5
 592 0104 14000000 		.4byte	.LFE5-.LFB5
 593 0108 01       		.uleb128 0x1
 594 0109 9C       		.byte	0x9c
 595 010a 2F010000 		.4byte	0x12f
 596 010e 09       		.uleb128 0x9
 597 010f 48010000 		.4byte	.LASF23
 598 0113 01       		.byte	0x1
 599 0114 AF01     		.2byte	0x1af
 600 0116 77000000 		.4byte	0x77
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 25


 601 011a 00000000 		.4byte	.LLST0
 602 011e 0A       		.uleb128 0xa
 603 011f 5E020000 		.4byte	.LASF25
 604 0123 01       		.byte	0x1
 605 0124 B101     		.2byte	0x1b1
 606 0126 77000000 		.4byte	0x77
 607 012a 21000000 		.4byte	.LLST1
 608 012e 00       		.byte	0
 609 012f 08       		.uleb128 0x8
 610 0130 24000000 		.4byte	.LASF22
 611 0134 01       		.byte	0x1
 612 0135 C801     		.2byte	0x1c8
 613 0137 00000000 		.4byte	.LFB6
 614 013b 18000000 		.4byte	.LFE6-.LFB6
 615 013f 01       		.uleb128 0x1
 616 0140 9C       		.byte	0x9c
 617 0141 66010000 		.4byte	0x166
 618 0145 09       		.uleb128 0x9
 619 0146 F6000000 		.4byte	.LASF24
 620 014a 01       		.byte	0x1
 621 014b C801     		.2byte	0x1c8
 622 014d 77000000 		.4byte	0x77
 623 0151 3F000000 		.4byte	.LLST2
 624 0155 0A       		.uleb128 0xa
 625 0156 5E020000 		.4byte	.LASF25
 626 015a 01       		.byte	0x1
 627 015b CA01     		.2byte	0x1ca
 628 015d 77000000 		.4byte	0x77
 629 0161 60000000 		.4byte	.LLST3
 630 0165 00       		.byte	0
 631 0166 08       		.uleb128 0x8
 632 0167 71000000 		.4byte	.LASF26
 633 016b 01       		.byte	0x1
 634 016c A602     		.2byte	0x2a6
 635 016e 00000000 		.4byte	.LFB7
 636 0172 16000000 		.4byte	.LFE7-.LFB7
 637 0176 01       		.uleb128 0x1
 638 0177 9C       		.byte	0x9c
 639 0178 A6010000 		.4byte	0x1a6
 640 017c 09       		.uleb128 0x9
 641 017d 6A000000 		.4byte	.LASF27
 642 0181 01       		.byte	0x1
 643 0182 A602     		.2byte	0x2a6
 644 0184 A6010000 		.4byte	0x1a6
 645 0188 89000000 		.4byte	.LLST4
 646 018c 0A       		.uleb128 0xa
 647 018d 70010000 		.4byte	.LASF28
 648 0191 01       		.byte	0x1
 649 0192 A802     		.2byte	0x2a8
 650 0194 77000000 		.4byte	0x77
 651 0198 B5000000 		.4byte	.LLST5
 652 019c 0B       		.uleb128 0xb
 653 019d 0C000000 		.4byte	.LVL13
 654 01a1 63020000 		.4byte	0x263
 655 01a5 00       		.byte	0
 656 01a6 0C       		.uleb128 0xc
 657 01a7 04       		.byte	0x4
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 26


 658 01a8 AC010000 		.4byte	0x1ac
 659 01ac 0D       		.uleb128 0xd
 660 01ad 91000000 		.4byte	0x91
 661 01b1 08       		.uleb128 0x8
 662 01b2 E5000000 		.4byte	.LASF29
 663 01b6 01       		.byte	0x1
 664 01b7 C102     		.2byte	0x2c1
 665 01b9 00000000 		.4byte	.LFB8
 666 01bd 14000000 		.4byte	.LFE8-.LFB8
 667 01c1 01       		.uleb128 0x1
 668 01c2 9C       		.byte	0x9c
 669 01c3 0F020000 		.4byte	0x20f
 670 01c7 09       		.uleb128 0x9
 671 01c8 10020000 		.4byte	.LASF30
 672 01cc 01       		.byte	0x1
 673 01cd C102     		.2byte	0x2c1
 674 01cf 77000000 		.4byte	0x77
 675 01d3 D4000000 		.4byte	.LLST6
 676 01d7 0E       		.uleb128 0xe
 677 01d8 06000000 		.4byte	.LVL18
 678 01dc 63020000 		.4byte	0x263
 679 01e0 EC010000 		.4byte	0x1ec
 680 01e4 0F       		.uleb128 0xf
 681 01e5 01       		.uleb128 0x1
 682 01e6 50       		.byte	0x50
 683 01e7 03       		.uleb128 0x3
 684 01e8 F3       		.byte	0xf3
 685 01e9 01       		.uleb128 0x1
 686 01ea 50       		.byte	0x50
 687 01eb 00       		.byte	0
 688 01ec 0E       		.uleb128 0xe
 689 01ed 0C000000 		.4byte	.LVL19
 690 01f1 63020000 		.4byte	0x263
 691 01f5 FF010000 		.4byte	0x1ff
 692 01f9 0F       		.uleb128 0xf
 693 01fa 01       		.uleb128 0x1
 694 01fb 50       		.byte	0x50
 695 01fc 01       		.uleb128 0x1
 696 01fd 3D       		.byte	0x3d
 697 01fe 00       		.byte	0
 698 01ff 10       		.uleb128 0x10
 699 0200 12000000 		.4byte	.LVL20
 700 0204 63020000 		.4byte	0x263
 701 0208 0F       		.uleb128 0xf
 702 0209 01       		.uleb128 0x1
 703 020a 50       		.byte	0x50
 704 020b 01       		.uleb128 0x1
 705 020c 3A       		.byte	0x3a
 706 020d 00       		.byte	0
 707 020e 00       		.byte	0
 708 020f 07       		.uleb128 0x7
 709 0210 1B020000 		.4byte	.LASF31
 710 0214 01       		.byte	0x1
 711 0215 D302     		.2byte	0x2d3
 712 0217 00000000 		.4byte	.LFB9
 713 021b 14000000 		.4byte	.LFE9-.LFB9
 714 021f 01       		.uleb128 0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 27


 715 0220 9C       		.byte	0x9c
 716 0221 07       		.uleb128 0x7
 717 0222 3E000000 		.4byte	.LASF32
 718 0226 01       		.byte	0x1
 719 0227 E202     		.2byte	0x2e2
 720 0229 00000000 		.4byte	.LFB10
 721 022d 14000000 		.4byte	.LFE10-.LFB10
 722 0231 01       		.uleb128 0x1
 723 0232 9C       		.byte	0x9c
 724 0233 08       		.uleb128 0x8
 725 0234 3D020000 		.4byte	.LASF33
 726 0238 01       		.byte	0x1
 727 0239 F502     		.2byte	0x2f5
 728 023b 00000000 		.4byte	.LFB11
 729 023f 28000000 		.4byte	.LFE11-.LFB11
 730 0243 01       		.uleb128 0x1
 731 0244 9C       		.byte	0x9c
 732 0245 58020000 		.4byte	0x258
 733 0249 11       		.uleb128 0x11
 734 024a 67010000 		.4byte	.LASF34
 735 024e 01       		.byte	0x1
 736 024f F502     		.2byte	0x2f5
 737 0251 77000000 		.4byte	0x77
 738 0255 01       		.uleb128 0x1
 739 0256 50       		.byte	0x50
 740 0257 00       		.byte	0
 741 0258 12       		.uleb128 0x12
 742 0259 14000000 		.4byte	.LASF38
 743 025d 03       		.byte	0x3
 744 025e 5B       		.byte	0x5b
 745 025f 6B000000 		.4byte	0x6b
 746 0263 13       		.uleb128 0x13
 747 0264 52000000 		.4byte	.LASF39
 748 0268 52000000 		.4byte	.LASF39
 749 026c 04       		.byte	0x4
 750 026d 3A03     		.2byte	0x33a
 751 026f 00       		.byte	0
 752              		.section	.debug_abbrev,"",%progbits
 753              	.Ldebug_abbrev0:
 754 0000 01       		.uleb128 0x1
 755 0001 11       		.uleb128 0x11
 756 0002 01       		.byte	0x1
 757 0003 25       		.uleb128 0x25
 758 0004 0E       		.uleb128 0xe
 759 0005 13       		.uleb128 0x13
 760 0006 0B       		.uleb128 0xb
 761 0007 03       		.uleb128 0x3
 762 0008 0E       		.uleb128 0xe
 763 0009 1B       		.uleb128 0x1b
 764 000a 0E       		.uleb128 0xe
 765 000b 55       		.uleb128 0x55
 766 000c 17       		.uleb128 0x17
 767 000d 11       		.uleb128 0x11
 768 000e 01       		.uleb128 0x1
 769 000f 10       		.uleb128 0x10
 770 0010 17       		.uleb128 0x17
 771 0011 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 28


 772 0012 00       		.byte	0
 773 0013 02       		.uleb128 0x2
 774 0014 24       		.uleb128 0x24
 775 0015 00       		.byte	0
 776 0016 0B       		.uleb128 0xb
 777 0017 0B       		.uleb128 0xb
 778 0018 3E       		.uleb128 0x3e
 779 0019 0B       		.uleb128 0xb
 780 001a 03       		.uleb128 0x3
 781 001b 0E       		.uleb128 0xe
 782 001c 00       		.byte	0
 783 001d 00       		.byte	0
 784 001e 03       		.uleb128 0x3
 785 001f 24       		.uleb128 0x24
 786 0020 00       		.byte	0
 787 0021 0B       		.uleb128 0xb
 788 0022 0B       		.uleb128 0xb
 789 0023 3E       		.uleb128 0x3e
 790 0024 0B       		.uleb128 0xb
 791 0025 03       		.uleb128 0x3
 792 0026 08       		.uleb128 0x8
 793 0027 00       		.byte	0
 794 0028 00       		.byte	0
 795 0029 04       		.uleb128 0x4
 796 002a 16       		.uleb128 0x16
 797 002b 00       		.byte	0
 798 002c 03       		.uleb128 0x3
 799 002d 0E       		.uleb128 0xe
 800 002e 3A       		.uleb128 0x3a
 801 002f 0B       		.uleb128 0xb
 802 0030 3B       		.uleb128 0x3b
 803 0031 05       		.uleb128 0x5
 804 0032 49       		.uleb128 0x49
 805 0033 13       		.uleb128 0x13
 806 0034 00       		.byte	0
 807 0035 00       		.byte	0
 808 0036 05       		.uleb128 0x5
 809 0037 35       		.uleb128 0x35
 810 0038 00       		.byte	0
 811 0039 49       		.uleb128 0x49
 812 003a 13       		.uleb128 0x13
 813 003b 00       		.byte	0
 814 003c 00       		.byte	0
 815 003d 06       		.uleb128 0x6
 816 003e 2E       		.uleb128 0x2e
 817 003f 00       		.byte	0
 818 0040 3F       		.uleb128 0x3f
 819 0041 19       		.uleb128 0x19
 820 0042 03       		.uleb128 0x3
 821 0043 0E       		.uleb128 0xe
 822 0044 3A       		.uleb128 0x3a
 823 0045 0B       		.uleb128 0xb
 824 0046 3B       		.uleb128 0x3b
 825 0047 0B       		.uleb128 0xb
 826 0048 27       		.uleb128 0x27
 827 0049 19       		.uleb128 0x19
 828 004a 11       		.uleb128 0x11
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 29


 829 004b 01       		.uleb128 0x1
 830 004c 12       		.uleb128 0x12
 831 004d 06       		.uleb128 0x6
 832 004e 40       		.uleb128 0x40
 833 004f 18       		.uleb128 0x18
 834 0050 9742     		.uleb128 0x2117
 835 0052 19       		.uleb128 0x19
 836 0053 00       		.byte	0
 837 0054 00       		.byte	0
 838 0055 07       		.uleb128 0x7
 839 0056 2E       		.uleb128 0x2e
 840 0057 00       		.byte	0
 841 0058 3F       		.uleb128 0x3f
 842 0059 19       		.uleb128 0x19
 843 005a 03       		.uleb128 0x3
 844 005b 0E       		.uleb128 0xe
 845 005c 3A       		.uleb128 0x3a
 846 005d 0B       		.uleb128 0xb
 847 005e 3B       		.uleb128 0x3b
 848 005f 05       		.uleb128 0x5
 849 0060 27       		.uleb128 0x27
 850 0061 19       		.uleb128 0x19
 851 0062 11       		.uleb128 0x11
 852 0063 01       		.uleb128 0x1
 853 0064 12       		.uleb128 0x12
 854 0065 06       		.uleb128 0x6
 855 0066 40       		.uleb128 0x40
 856 0067 18       		.uleb128 0x18
 857 0068 9742     		.uleb128 0x2117
 858 006a 19       		.uleb128 0x19
 859 006b 00       		.byte	0
 860 006c 00       		.byte	0
 861 006d 08       		.uleb128 0x8
 862 006e 2E       		.uleb128 0x2e
 863 006f 01       		.byte	0x1
 864 0070 3F       		.uleb128 0x3f
 865 0071 19       		.uleb128 0x19
 866 0072 03       		.uleb128 0x3
 867 0073 0E       		.uleb128 0xe
 868 0074 3A       		.uleb128 0x3a
 869 0075 0B       		.uleb128 0xb
 870 0076 3B       		.uleb128 0x3b
 871 0077 05       		.uleb128 0x5
 872 0078 27       		.uleb128 0x27
 873 0079 19       		.uleb128 0x19
 874 007a 11       		.uleb128 0x11
 875 007b 01       		.uleb128 0x1
 876 007c 12       		.uleb128 0x12
 877 007d 06       		.uleb128 0x6
 878 007e 40       		.uleb128 0x40
 879 007f 18       		.uleb128 0x18
 880 0080 9742     		.uleb128 0x2117
 881 0082 19       		.uleb128 0x19
 882 0083 01       		.uleb128 0x1
 883 0084 13       		.uleb128 0x13
 884 0085 00       		.byte	0
 885 0086 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 30


 886 0087 09       		.uleb128 0x9
 887 0088 05       		.uleb128 0x5
 888 0089 00       		.byte	0
 889 008a 03       		.uleb128 0x3
 890 008b 0E       		.uleb128 0xe
 891 008c 3A       		.uleb128 0x3a
 892 008d 0B       		.uleb128 0xb
 893 008e 3B       		.uleb128 0x3b
 894 008f 05       		.uleb128 0x5
 895 0090 49       		.uleb128 0x49
 896 0091 13       		.uleb128 0x13
 897 0092 02       		.uleb128 0x2
 898 0093 17       		.uleb128 0x17
 899 0094 00       		.byte	0
 900 0095 00       		.byte	0
 901 0096 0A       		.uleb128 0xa
 902 0097 34       		.uleb128 0x34
 903 0098 00       		.byte	0
 904 0099 03       		.uleb128 0x3
 905 009a 0E       		.uleb128 0xe
 906 009b 3A       		.uleb128 0x3a
 907 009c 0B       		.uleb128 0xb
 908 009d 3B       		.uleb128 0x3b
 909 009e 05       		.uleb128 0x5
 910 009f 49       		.uleb128 0x49
 911 00a0 13       		.uleb128 0x13
 912 00a1 02       		.uleb128 0x2
 913 00a2 17       		.uleb128 0x17
 914 00a3 00       		.byte	0
 915 00a4 00       		.byte	0
 916 00a5 0B       		.uleb128 0xb
 917 00a6 898201   		.uleb128 0x4109
 918 00a9 00       		.byte	0
 919 00aa 11       		.uleb128 0x11
 920 00ab 01       		.uleb128 0x1
 921 00ac 31       		.uleb128 0x31
 922 00ad 13       		.uleb128 0x13
 923 00ae 00       		.byte	0
 924 00af 00       		.byte	0
 925 00b0 0C       		.uleb128 0xc
 926 00b1 0F       		.uleb128 0xf
 927 00b2 00       		.byte	0
 928 00b3 0B       		.uleb128 0xb
 929 00b4 0B       		.uleb128 0xb
 930 00b5 49       		.uleb128 0x49
 931 00b6 13       		.uleb128 0x13
 932 00b7 00       		.byte	0
 933 00b8 00       		.byte	0
 934 00b9 0D       		.uleb128 0xd
 935 00ba 26       		.uleb128 0x26
 936 00bb 00       		.byte	0
 937 00bc 49       		.uleb128 0x49
 938 00bd 13       		.uleb128 0x13
 939 00be 00       		.byte	0
 940 00bf 00       		.byte	0
 941 00c0 0E       		.uleb128 0xe
 942 00c1 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 31


 943 00c4 01       		.byte	0x1
 944 00c5 11       		.uleb128 0x11
 945 00c6 01       		.uleb128 0x1
 946 00c7 31       		.uleb128 0x31
 947 00c8 13       		.uleb128 0x13
 948 00c9 01       		.uleb128 0x1
 949 00ca 13       		.uleb128 0x13
 950 00cb 00       		.byte	0
 951 00cc 00       		.byte	0
 952 00cd 0F       		.uleb128 0xf
 953 00ce 8A8201   		.uleb128 0x410a
 954 00d1 00       		.byte	0
 955 00d2 02       		.uleb128 0x2
 956 00d3 18       		.uleb128 0x18
 957 00d4 9142     		.uleb128 0x2111
 958 00d6 18       		.uleb128 0x18
 959 00d7 00       		.byte	0
 960 00d8 00       		.byte	0
 961 00d9 10       		.uleb128 0x10
 962 00da 898201   		.uleb128 0x4109
 963 00dd 01       		.byte	0x1
 964 00de 11       		.uleb128 0x11
 965 00df 01       		.uleb128 0x1
 966 00e0 31       		.uleb128 0x31
 967 00e1 13       		.uleb128 0x13
 968 00e2 00       		.byte	0
 969 00e3 00       		.byte	0
 970 00e4 11       		.uleb128 0x11
 971 00e5 05       		.uleb128 0x5
 972 00e6 00       		.byte	0
 973 00e7 03       		.uleb128 0x3
 974 00e8 0E       		.uleb128 0xe
 975 00e9 3A       		.uleb128 0x3a
 976 00ea 0B       		.uleb128 0xb
 977 00eb 3B       		.uleb128 0x3b
 978 00ec 05       		.uleb128 0x5
 979 00ed 49       		.uleb128 0x49
 980 00ee 13       		.uleb128 0x13
 981 00ef 02       		.uleb128 0x2
 982 00f0 18       		.uleb128 0x18
 983 00f1 00       		.byte	0
 984 00f2 00       		.byte	0
 985 00f3 12       		.uleb128 0x12
 986 00f4 34       		.uleb128 0x34
 987 00f5 00       		.byte	0
 988 00f6 03       		.uleb128 0x3
 989 00f7 0E       		.uleb128 0xe
 990 00f8 3A       		.uleb128 0x3a
 991 00f9 0B       		.uleb128 0xb
 992 00fa 3B       		.uleb128 0x3b
 993 00fb 0B       		.uleb128 0xb
 994 00fc 49       		.uleb128 0x49
 995 00fd 13       		.uleb128 0x13
 996 00fe 3F       		.uleb128 0x3f
 997 00ff 19       		.uleb128 0x19
 998 0100 3C       		.uleb128 0x3c
 999 0101 19       		.uleb128 0x19
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 32


 1000 0102 00       		.byte	0
 1001 0103 00       		.byte	0
 1002 0104 13       		.uleb128 0x13
 1003 0105 2E       		.uleb128 0x2e
 1004 0106 00       		.byte	0
 1005 0107 3F       		.uleb128 0x3f
 1006 0108 19       		.uleb128 0x19
 1007 0109 3C       		.uleb128 0x3c
 1008 010a 19       		.uleb128 0x19
 1009 010b 6E       		.uleb128 0x6e
 1010 010c 0E       		.uleb128 0xe
 1011 010d 03       		.uleb128 0x3
 1012 010e 0E       		.uleb128 0xe
 1013 010f 3A       		.uleb128 0x3a
 1014 0110 0B       		.uleb128 0xb
 1015 0111 3B       		.uleb128 0x3b
 1016 0112 05       		.uleb128 0x5
 1017 0113 00       		.byte	0
 1018 0114 00       		.byte	0
 1019 0115 00       		.byte	0
 1020              		.section	.debug_loc,"",%progbits
 1021              	.Ldebug_loc0:
 1022              	.LLST0:
 1023 0000 00000000 		.4byte	.LVL0
 1024 0004 0A000000 		.4byte	.LVL3
 1025 0008 0100     		.2byte	0x1
 1026 000a 50       		.byte	0x50
 1027 000b 0A000000 		.4byte	.LVL3
 1028 000f 14000000 		.4byte	.LFE5
 1029 0013 0400     		.2byte	0x4
 1030 0015 F3       		.byte	0xf3
 1031 0016 01       		.uleb128 0x1
 1032 0017 50       		.byte	0x50
 1033 0018 9F       		.byte	0x9f
 1034 0019 00000000 		.4byte	0
 1035 001d 00000000 		.4byte	0
 1036              	.LLST1:
 1037 0021 04000000 		.4byte	.LVL1
 1038 0025 0C000000 		.4byte	.LVL4
 1039 0029 0100     		.2byte	0x1
 1040 002b 53       		.byte	0x53
 1041 002c 0C000000 		.4byte	.LVL4
 1042 0030 14000000 		.4byte	.LFE5
 1043 0034 0100     		.2byte	0x1
 1044 0036 50       		.byte	0x50
 1045 0037 00000000 		.4byte	0
 1046 003b 00000000 		.4byte	0
 1047              	.LLST2:
 1048 003f 00000000 		.4byte	.LVL5
 1049 0043 0A000000 		.4byte	.LVL8
 1050 0047 0100     		.2byte	0x1
 1051 0049 50       		.byte	0x50
 1052 004a 0A000000 		.4byte	.LVL8
 1053 004e 18000000 		.4byte	.LFE6
 1054 0052 0400     		.2byte	0x4
 1055 0054 F3       		.byte	0xf3
 1056 0055 01       		.uleb128 0x1
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 33


 1057 0056 50       		.byte	0x50
 1058 0057 9F       		.byte	0x9f
 1059 0058 00000000 		.4byte	0
 1060 005c 00000000 		.4byte	0
 1061              	.LLST3:
 1062 0060 04000000 		.4byte	.LVL6
 1063 0064 08000000 		.4byte	.LVL7
 1064 0068 0100     		.2byte	0x1
 1065 006a 51       		.byte	0x51
 1066 006b 08000000 		.4byte	.LVL7
 1067 006f 0C000000 		.4byte	.LVL9
 1068 0073 0100     		.2byte	0x1
 1069 0075 53       		.byte	0x53
 1070 0076 0C000000 		.4byte	.LVL9
 1071 007a 18000000 		.4byte	.LFE6
 1072 007e 0100     		.2byte	0x1
 1073 0080 50       		.byte	0x50
 1074 0081 00000000 		.4byte	0
 1075 0085 00000000 		.4byte	0
 1076              	.LLST4:
 1077 0089 00000000 		.4byte	.LVL10
 1078 008d 08000000 		.4byte	.LVL12
 1079 0091 0100     		.2byte	0x1
 1080 0093 50       		.byte	0x50
 1081 0094 08000000 		.4byte	.LVL12
 1082 0098 14000000 		.4byte	.LVL16
 1083 009c 0100     		.2byte	0x1
 1084 009e 55       		.byte	0x55
 1085 009f 14000000 		.4byte	.LVL16
 1086 00a3 16000000 		.4byte	.LFE7
 1087 00a7 0400     		.2byte	0x4
 1088 00a9 F3       		.byte	0xf3
 1089 00aa 01       		.uleb128 0x1
 1090 00ab 50       		.byte	0x50
 1091 00ac 9F       		.byte	0x9f
 1092 00ad 00000000 		.4byte	0
 1093 00b1 00000000 		.4byte	0
 1094              	.LLST5:
 1095 00b5 04000000 		.4byte	.LVL11
 1096 00b9 08000000 		.4byte	.LVL12
 1097 00bd 0200     		.2byte	0x2
 1098 00bf 30       		.byte	0x30
 1099 00c0 9F       		.byte	0x9f
 1100 00c1 08000000 		.4byte	.LVL12
 1101 00c5 14000000 		.4byte	.LVL15
 1102 00c9 0100     		.2byte	0x1
 1103 00cb 54       		.byte	0x54
 1104 00cc 00000000 		.4byte	0
 1105 00d0 00000000 		.4byte	0
 1106              	.LLST6:
 1107 00d4 00000000 		.4byte	.LVL17
 1108 00d8 05000000 		.4byte	.LVL18-1
 1109 00dc 0100     		.2byte	0x1
 1110 00de 50       		.byte	0x50
 1111 00df 05000000 		.4byte	.LVL18-1
 1112 00e3 14000000 		.4byte	.LFE8
 1113 00e7 0400     		.2byte	0x4
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 34


 1114 00e9 F3       		.byte	0xf3
 1115 00ea 01       		.uleb128 0x1
 1116 00eb 50       		.byte	0x50
 1117 00ec 9F       		.byte	0x9f
 1118 00ed 00000000 		.4byte	0
 1119 00f1 00000000 		.4byte	0
 1120              		.section	.debug_aranges,"",%progbits
 1121 0000 64000000 		.4byte	0x64
 1122 0004 0200     		.2byte	0x2
 1123 0006 00000000 		.4byte	.Ldebug_info0
 1124 000a 04       		.byte	0x4
 1125 000b 00       		.byte	0
 1126 000c 0000     		.2byte	0
 1127 000e 0000     		.2byte	0
 1128 0010 00000000 		.4byte	.LFB2
 1129 0014 A0000000 		.4byte	.LFE2-.LFB2
 1130 0018 00000000 		.4byte	.LFB3
 1131 001c 2C000000 		.4byte	.LFE3-.LFB3
 1132 0020 00000000 		.4byte	.LFB4
 1133 0024 2C000000 		.4byte	.LFE4-.LFB4
 1134 0028 00000000 		.4byte	.LFB5
 1135 002c 14000000 		.4byte	.LFE5-.LFB5
 1136 0030 00000000 		.4byte	.LFB6
 1137 0034 18000000 		.4byte	.LFE6-.LFB6
 1138 0038 00000000 		.4byte	.LFB7
 1139 003c 16000000 		.4byte	.LFE7-.LFB7
 1140 0040 00000000 		.4byte	.LFB8
 1141 0044 14000000 		.4byte	.LFE8-.LFB8
 1142 0048 00000000 		.4byte	.LFB9
 1143 004c 14000000 		.4byte	.LFE9-.LFB9
 1144 0050 00000000 		.4byte	.LFB10
 1145 0054 14000000 		.4byte	.LFE10-.LFB10
 1146 0058 00000000 		.4byte	.LFB11
 1147 005c 28000000 		.4byte	.LFE11-.LFB11
 1148 0060 00000000 		.4byte	0
 1149 0064 00000000 		.4byte	0
 1150              		.section	.debug_ranges,"",%progbits
 1151              	.Ldebug_ranges0:
 1152 0000 00000000 		.4byte	.LFB2
 1153 0004 A0000000 		.4byte	.LFE2
 1154 0008 00000000 		.4byte	.LFB3
 1155 000c 2C000000 		.4byte	.LFE3
 1156 0010 00000000 		.4byte	.LFB4
 1157 0014 2C000000 		.4byte	.LFE4
 1158 0018 00000000 		.4byte	.LFB5
 1159 001c 14000000 		.4byte	.LFE5
 1160 0020 00000000 		.4byte	.LFB6
 1161 0024 18000000 		.4byte	.LFE6
 1162 0028 00000000 		.4byte	.LFB7
 1163 002c 16000000 		.4byte	.LFE7
 1164 0030 00000000 		.4byte	.LFB8
 1165 0034 14000000 		.4byte	.LFE8
 1166 0038 00000000 		.4byte	.LFB9
 1167 003c 14000000 		.4byte	.LFE9
 1168 0040 00000000 		.4byte	.LFB10
 1169 0044 14000000 		.4byte	.LFE10
 1170 0048 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 35


 1171 004c 28000000 		.4byte	.LFE11
 1172 0050 00000000 		.4byte	0
 1173 0054 00000000 		.4byte	0
 1174              		.section	.debug_line,"",%progbits
 1175              	.Ldebug_line0:
 1176 0000 4D010000 		.section	.debug_str,"MS",%progbits,1
 1176      02006700 
 1176      00000201 
 1176      FB0E0D00 
 1176      01010101 
 1177              	.LASF6:
 1178 0000 6C6F6E67 		.ascii	"long long int\000"
 1178      206C6F6E 
 1178      6720696E 
 1178      7400
 1179              	.LASF15:
 1180 000e 72656733 		.ascii	"reg32\000"
 1180      3200
 1181              	.LASF38:
 1182 0014 55415254 		.ascii	"UART_IntrTxMask\000"
 1182      5F496E74 
 1182      7254784D 
 1182      61736B00 
 1183              	.LASF22:
 1184 0024 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1184      5F556172 
 1184      74536574 
 1184      52784164 
 1184      64726573 
 1185              	.LASF32:
 1186 003e 55415254 		.ascii	"UART_UartDisableCts\000"
 1186      5F556172 
 1186      74446973 
 1186      61626C65 
 1186      43747300 
 1187              	.LASF39:
 1188 0052 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1188      5F537069 
 1188      55617274 
 1188      57726974 
 1188      65547844 
 1189              	.LASF27:
 1190 006a 73747269 		.ascii	"string\000"
 1190      6E6700
 1191              	.LASF26:
 1192 0071 55415254 		.ascii	"UART_UartPutString\000"
 1192      5F556172 
 1192      74507574 
 1192      53747269 
 1192      6E6700
 1193              	.LASF11:
 1194 0084 666C6F61 		.ascii	"float\000"
 1194      7400
 1195              	.LASF1:
 1196 008a 756E7369 		.ascii	"unsigned char\000"
 1196      676E6564 
 1196      20636861 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 36


 1196      7200
 1197              	.LASF13:
 1198 0098 63686172 		.ascii	"char8\000"
 1198      3800
 1199              	.LASF19:
 1200 009e 55415254 		.ascii	"UART_UartPostEnable\000"
 1200      5F556172 
 1200      74506F73 
 1200      74456E61 
 1200      626C6500 
 1201              	.LASF5:
 1202 00b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1202      20756E73 
 1202      69676E65 
 1202      6420696E 
 1202      7400
 1203              	.LASF20:
 1204 00c4 55415254 		.ascii	"UART_UartStop\000"
 1204      5F556172 
 1204      7453746F 
 1204      7000
 1205              	.LASF3:
 1206 00d2 73686F72 		.ascii	"short unsigned int\000"
 1206      7420756E 
 1206      7369676E 
 1206      65642069 
 1206      6E7400
 1207              	.LASF29:
 1208 00e5 55415254 		.ascii	"UART_UartPutCRLF\000"
 1208      5F556172 
 1208      74507574 
 1208      43524C46 
 1208      00
 1209              	.LASF24:
 1210 00f6 61646472 		.ascii	"addressMask\000"
 1210      6573734D 
 1210      61736B00 
 1211              	.LASF12:
 1212 0102 646F7562 		.ascii	"double\000"
 1212      6C6500
 1213              	.LASF21:
 1214 0109 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1214      5F556172 
 1214      74536574 
 1214      52784164 
 1214      64726573 
 1215              	.LASF9:
 1216 011f 75696E74 		.ascii	"uint16\000"
 1216      313600
 1217              	.LASF10:
 1218 0126 75696E74 		.ascii	"uint32\000"
 1218      333200
 1219              	.LASF8:
 1220 012d 756E7369 		.ascii	"unsigned int\000"
 1220      676E6564 
 1220      20696E74 
 1220      00
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 37


 1221              	.LASF18:
 1222 013a 55415254 		.ascii	"UART_UartInit\000"
 1222      5F556172 
 1222      74496E69 
 1222      7400
 1223              	.LASF23:
 1224 0148 61646472 		.ascii	"address\000"
 1224      65737300 
 1225              	.LASF7:
 1226 0150 6C6F6E67 		.ascii	"long long unsigned int\000"
 1226      206C6F6E 
 1226      6720756E 
 1226      7369676E 
 1226      65642069 
 1227              	.LASF34:
 1228 0167 706F6C61 		.ascii	"polarity\000"
 1228      72697479 
 1228      00
 1229              	.LASF28:
 1230 0170 62756649 		.ascii	"bufIndex\000"
 1230      6E646578 
 1230      00
 1231              	.LASF35:
 1232 0179 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1232      43313120 
 1232      352E342E 
 1232      31203230 
 1232      31363036 
 1233 01ac 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1233      20726576 
 1233      6973696F 
 1233      6E203233 
 1233      37373135 
 1234 01df 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1234      66756E63 
 1234      74696F6E 
 1234      2D736563 
 1234      74696F6E 
 1235              	.LASF17:
 1236 0207 73697A65 		.ascii	"sizetype\000"
 1236      74797065 
 1236      00
 1237              	.LASF30:
 1238 0210 74784461 		.ascii	"txDataByte\000"
 1238      74614279 
 1238      746500
 1239              	.LASF31:
 1240 021b 55415254 		.ascii	"UART_UartEnableCts\000"
 1240      5F556172 
 1240      74456E61 
 1240      626C6543 
 1240      747300
 1241              	.LASF14:
 1242 022e 63686172 		.ascii	"char\000"
 1242      00
 1243              	.LASF2:
 1244 0233 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\cccYgUSA.s 			page 38


 1244      7420696E 
 1244      7400
 1245              	.LASF33:
 1246 023d 55415254 		.ascii	"UART_UartSetCtsPolarity\000"
 1246      5F556172 
 1246      74536574 
 1246      43747350 
 1246      6F6C6172 
 1247              	.LASF4:
 1248 0255 6C6F6E67 		.ascii	"long int\000"
 1248      20696E74 
 1248      00
 1249              	.LASF25:
 1250 025e 6D617463 		.ascii	"matchReg\000"
 1250      68526567 
 1250      00
 1251              	.LASF16:
 1252 0267 6C6F6E67 		.ascii	"long double\000"
 1252      20646F75 
 1252      626C6500 
 1253              	.LASF36:
 1254 0273 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1254      72617465 
 1254      645F536F 
 1254      75726365 
 1254      5C50536F 
 1255              	.LASF0:
 1256 0296 7369676E 		.ascii	"signed char\000"
 1256      65642063 
 1256      68617200 
 1257              	.LASF37:
 1258 02a2 433A5C55 		.ascii	"C:\\Users\\Tymek\\Documents\\EE\\Clock\\CYBLE-22411"
 1258      73657273 
 1258      5C54796D 
 1258      656B5C44 
 1258      6F63756D 
 1259 02cf 302D3030 		.ascii	"0-00_clock_firmware\\CYBLE-224110-00_Clock\\CYBLE-2"
 1259      5F636C6F 
 1259      636B5F66 
 1259      69726D77 
 1259      6172655C 
 1260 0300 32343131 		.ascii	"24110-00 Clock firmware.cydsn\000"
 1260      302D3030 
 1260      20436C6F 
 1260      636B2066 
 1260      69726D77 
 1261              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
