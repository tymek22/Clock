ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmSleep,"ax",%progbits
  20              		.align	1
  21              		.global	CySysPmSleep
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysPmSleep, %function
  25              	CySysPmSleep:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 5.60
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** 
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  23:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  24:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  25:Generated_Source\PSoC4/cyPm.c **** *
  26:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  27:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  28:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  29:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
  30:Generated_Source\PSoC4/cyPm.c **** *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 2


  31:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  32:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  33:Generated_Source\PSoC4/cyPm.c **** {
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  34:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  35:Generated_Source\PSoC4/cyPm.c **** 
  36:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  36              		.loc 1 36 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  37:Generated_Source\PSoC4/cyPm.c **** 
  38:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  39:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  39              		.loc 1 39 0
  40 0006 0421     		movs	r1, #4
  41 0008 034A     		ldr	r2, .L2
  42 000a 1368     		ldr	r3, [r2]
  43 000c 8B43     		bics	r3, r1
  44 000e 1360     		str	r3, [r2]
  40:Generated_Source\PSoC4/cyPm.c **** 
  41:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  42:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  45              		.loc 1 42 0
  46              		.syntax divided
  47              	@ 42 "Generated_Source\PSoC4\cyPm.c" 1
  48 0010 30BF     		WFI 
  49              	
  50              	@ 0 "" 2
  43:Generated_Source\PSoC4/cyPm.c **** 
  44:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  51              		.loc 1 44 0
  52              		.thumb
  53              		.syntax unified
  54 0012 FFF7FEFF 		bl	CyExitCriticalSection
  55              	.LVL1:
  45:Generated_Source\PSoC4/cyPm.c **** }
  56              		.loc 1 45 0
  57              		@ sp needed
  58 0016 10BD     		pop	{r4, pc}
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 10ED00E0 		.word	-536810224
  63              		.cfi_endproc
  64              	.LFE3:
  65              		.size	CySysPmSleep, .-CySysPmSleep
  66              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  67              		.align	1
  68              		.global	CySysPmDeepSleep
  69              		.code	16
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 3


  70              		.thumb_func
  71              		.type	CySysPmDeepSleep, %function
  72              	CySysPmDeepSleep:
  73              	.LFB4:
  46:Generated_Source\PSoC4/cyPm.c **** 
  47:Generated_Source\PSoC4/cyPm.c **** 
  48:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  49:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  50:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  51:Generated_Source\PSoC4/cyPm.c **** *
  52:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  53:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  54:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  55:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  56:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  57:Generated_Source\PSoC4/cyPm.c **** *
  58:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  59:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  60:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  61:Generated_Source\PSoC4/cyPm.c **** *
  62:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  64:Generated_Source\PSoC4/cyPm.c **** {
  74              		.loc 1 64 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  79              		.cfi_def_cfa_offset 24
  80              		.cfi_offset 0, -24
  81              		.cfi_offset 1, -20
  82              		.cfi_offset 2, -16
  83              		.cfi_offset 4, -12
  84              		.cfi_offset 5, -8
  85              		.cfi_offset 14, -4
  65:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  66:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  67:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  68:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  69:Generated_Source\PSoC4/cyPm.c **** 
  70:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  86              		.loc 1 70 0
  87 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  88              	.LVL2:
  71:Generated_Source\PSoC4/cyPm.c **** 
  72:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  73:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  74:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  75:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  76:Generated_Source\PSoC4/cyPm.c **** 
  77:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  78:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  79:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
  82:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
  83:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 4


  84:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
  85:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
  89              		.loc 1 85 0
  90 0006 0421     		movs	r1, #4
  74:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  91              		.loc 1 74 0
  92 0008 0D4A     		ldr	r2, .L5
  86:Generated_Source\PSoC4/cyPm.c **** 
  87:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  88:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
  89:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
  90:Generated_Source\PSoC4/cyPm.c ****         */
  91:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
  93              		.loc 1 91 0
  94 000a 0E4D     		ldr	r5, .L5+4
  74:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  95              		.loc 1 74 0
  96 000c 1368     		ldr	r3, [r2]
  70:Generated_Source\PSoC4/cyPm.c **** 
  97              		.loc 1 70 0
  98 000e 0400     		movs	r4, r0
  99              	.LVL3:
  74:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 100              		.loc 1 74 0
 101 0010 5B00     		lsls	r3, r3, #1
 102 0012 5B08     		lsrs	r3, r3, #1
 103 0014 1360     		str	r3, [r2]
  82:Generated_Source\PSoC4/cyPm.c **** 
 104              		.loc 1 82 0
 105 0016 0C4B     		ldr	r3, .L5+8
 106 0018 0C4A     		ldr	r2, .L5+12
 107 001a 1B88     		ldrh	r3, [r3]
  92:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 108              		.loc 1 92 0
 109 001c 0220     		movs	r0, #2
  82:Generated_Source\PSoC4/cyPm.c **** 
 110              		.loc 1 82 0
 111 001e 9BB2     		uxth	r3, r3
 112 0020 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/cyPm.c **** 
 113              		.loc 1 85 0
 114 0022 0B4A     		ldr	r2, .L5+16
 115 0024 1368     		ldr	r3, [r2]
 116 0026 0B43     		orrs	r3, r1
 117 0028 1360     		str	r3, [r2]
  91:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 118              		.loc 1 91 0
 119 002a 2B68     		ldr	r3, [r5]
 120 002c 0193     		str	r3, [sp, #4]
 121              		.loc 1 92 0
 122 002e FFF7FEFF 		bl	CySysClkWriteSysclkDiv
 123              	.LVL4:
  93:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  94:Generated_Source\PSoC4/cyPm.c **** 
  95:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  96:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 124              		.loc 1 96 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 5


 125              		.syntax divided
 126              	@ 96 "Generated_Source\PSoC4\cyPm.c" 1
 127 0032 30BF     		WFI 
 128              	
 129              	@ 0 "" 2
  97:Generated_Source\PSoC4/cyPm.c **** 
  98:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  99:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 100:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 130              		.loc 1 100 0
 131              		.thumb
 132              		.syntax unified
 133 0034 019B     		ldr	r3, [sp, #4]
 101:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 102:Generated_Source\PSoC4/cyPm.c **** 
 103:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 104:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 105:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 106:Generated_Source\PSoC4/cyPm.c **** 
 107:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 134              		.loc 1 107 0
 135 0036 2000     		movs	r0, r4
 100:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 136              		.loc 1 100 0
 137 0038 2B60     		str	r3, [r5]
 138              		.loc 1 107 0
 139 003a FFF7FEFF 		bl	CyExitCriticalSection
 140              	.LVL5:
 108:Generated_Source\PSoC4/cyPm.c **** }
 141              		.loc 1 108 0
 142              		@ sp needed
 143              	.LVL6:
 144 003e 37BD     		pop	{r0, r1, r2, r4, r5, pc}
 145              	.L6:
 146              		.align	2
 147              	.L5:
 148 0040 00000B40 		.word	1074462720
 149 0044 00010B40 		.word	1074462976
 150 0048 52F2FF0F 		.word	268431954
 151 004c 0C000B40 		.word	1074462732
 152 0050 10ED00E0 		.word	-536810224
 153              		.cfi_endproc
 154              	.LFE4:
 155              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 156              		.section	.text.CySysPmHibernate,"ax",%progbits
 157              		.align	1
 158              		.global	CySysPmHibernate
 159              		.code	16
 160              		.thumb_func
 161              		.type	CySysPmHibernate, %function
 162              	CySysPmHibernate:
 163              	.LFB5:
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c **** 
 111:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 6


 114:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 115:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC4/cyPm.c ****     *
 117:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 118:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 119:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 120:Generated_Source\PSoC4/cyPm.c ****     *
 121:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 122:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 123:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 124:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 125:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 126:Generated_Source\PSoC4/cyPm.c ****     *
 127:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 128:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 129:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 130:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 131:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 132:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 133:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 134:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 135:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 136:Generated_Source\PSoC4/cyPm.c ****     *
 137:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 138:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 139:Generated_Source\PSoC4/cyPm.c ****     {
 164              		.loc 1 139 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 140:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 141:Generated_Source\PSoC4/cyPm.c **** 
 142:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 172              		.loc 1 142 0
 173 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 174              	.LVL7:
 175              	.LBB4:
 176              	.LBB5:
 177              		.file 2 "Generated_Source\\PSoC4\\cyPm.h"
   1:Generated_Source\PSoC4/cyPm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.h **** * \file cyPm.h
   3:Generated_Source\PSoC4/cyPm.h **** * \version 5.60
   4:Generated_Source\PSoC4/cyPm.h **** *
   5:Generated_Source\PSoC4/cyPm.h **** * \brief Provides the function definitions for the power management API.
   6:Generated_Source\PSoC4/cyPm.h **** *
   7:Generated_Source\PSoC4/cyPm.h **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.h **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.h **** *
  10:Generated_Source\PSoC4/cyPm.h **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.h **** * \copyright
  12:Generated_Source\PSoC4/cyPm.h **** * Copyright 2011-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.h **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.h **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 7


  15:Generated_Source\PSoC4/cyPm.h **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.h **** 
  18:Generated_Source\PSoC4/cyPm.h **** #if !defined(CY_BOOT_CYPM_H)
  19:Generated_Source\PSoC4/cyPm.h **** #define CY_BOOT_CYPM_H
  20:Generated_Source\PSoC4/cyPm.h **** 
  21:Generated_Source\PSoC4/cyPm.h **** #include "cytypes.h"
  22:Generated_Source\PSoC4/cyPm.h **** #include "cypins.h"
  23:Generated_Source\PSoC4/cyPm.h **** 
  24:Generated_Source\PSoC4/cyPm.h **** 
  25:Generated_Source\PSoC4/cyPm.h **** /**
  26:Generated_Source\PSoC4/cyPm.h **** * \addtogroup group_power_management Power Management API
  27:Generated_Source\PSoC4/cyPm.h **** * @{
  28:Generated_Source\PSoC4/cyPm.h **** 
  29:Generated_Source\PSoC4/cyPm.h **** \brief PSoC 4 devices support the following power modes (in order of high to low power consumption)
  30:Generated_Source\PSoC4/cyPm.h **** Deep Sleep, Hibernate, and Stop. Active, Sleep and Deep-Sleep are standard ARM defined power modes,
  31:Generated_Source\PSoC4/cyPm.h **** ARM CPUs. Hibernate/Stop are even lower power modes that are entered from firmware just like Deep-S
  32:Generated_Source\PSoC4/cyPm.h **** the CPU (and all peripherals) goes through a full reset.
  33:Generated_Source\PSoC4/cyPm.h **** 
  34:Generated_Source\PSoC4/cyPm.h **** There is a full range of power modes supported by PSoC devices to control power consumption and the
  35:Generated_Source\PSoC4/cyPm.h **** resources. See the following table for the supported power modes.
  36:Generated_Source\PSoC4/cyPm.h **** 
  37:Generated_Source\PSoC4/cyPm.h **** Mode        | PSoC 4000              | Rest Devices           |
  38:Generated_Source\PSoC4/cyPm.h **** ----------- | ---------------------- | ---------------------- |
  39:Generated_Source\PSoC4/cyPm.h **** Active      |          Y             |       Y                |
  40:Generated_Source\PSoC4/cyPm.h **** Sleep       |          Y             |       Y                |
  41:Generated_Source\PSoC4/cyPm.h **** Deep Sleep  |          Y             |       Y                |
  42:Generated_Source\PSoC4/cyPm.h **** Hibernate   |          Y             |       Y                |
  43:Generated_Source\PSoC4/cyPm.h **** Stop        |                        |       Y                |
  44:Generated_Source\PSoC4/cyPm.h **** 
  45:Generated_Source\PSoC4/cyPm.h **** For the ARM-based devices (PSoC 4), an interrupt is required for the CPU to wake up. The Power Mana
  46:Generated_Source\PSoC4/cyPm.h **** assumes that wakeup time is configured with a separate component (component-based wakeup time confi
  47:Generated_Source\PSoC4/cyPm.h **** interrupt to be issued on terminal count.
  48:Generated_Source\PSoC4/cyPm.h **** 
  49:Generated_Source\PSoC4/cyPm.h **** All pending interrupts should be cleared before the device is put into low power mode, even if they
  50:Generated_Source\PSoC4/cyPm.h **** 
  51:Generated_Source\PSoC4/cyPm.h **** The Power Management API is provided in the CyPm.c and CyPm.h files.
  52:Generated_Source\PSoC4/cyPm.h **** 
  53:Generated_Source\PSoC4/cyPm.h **** 
  54:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_implementation Implementation
  55:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100, PSoC 4000U and PSoC 4200 devices, the software should set EXT_VCCD bit in the PWR_CO
  56:Generated_Source\PSoC4/cyPm.h **** Vccd is shorted to Vddd on the board. This impacts the chip internal state transitions where it is 
  57:Generated_Source\PSoC4/cyPm.h **** whether Vccd is connected or floating to achieve minimum current in low power modes. Note Setting t
  58:Generated_Source\PSoC4/cyPm.h **** the active regulator and will lead to a system reset unless both Vddd and Vccd pins are supplied ex
  59:Generated_Source\PSoC4/cyPm.h **** the device TRM for more information.
  60:Generated_Source\PSoC4/cyPm.h **** 
  61:Generated_Source\PSoC4/cyPm.h **** It is safe to call PM APIs from the ISR. The wakeup conditions for Sleep and DeepSleep low power mo
  62:Generated_Source\PSoC4/cyPm.h **** in the following table.
  63:Generated_Source\PSoC4/cyPm.h **** 
  64:Generated_Source\PSoC4/cyPm.h **** Interrupts State  |  Condition                      | Wakeup    |   ISR Execution   |
  65:Generated_Source\PSoC4/cyPm.h **** ------------------|---------------------------------|-----------|------------------ |
  66:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority > current level    | Yes       |   Yes             |
  67:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority ≤ current level    | No        |   No              |
  68:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority > current level    | Yes       |   No              |
  69:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority ≤ current level    | No        |   No              |
  70:Generated_Source\PSoC4/cyPm.h **** 
  71:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 8


  72:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_clocks Clock Configuration
  73:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 BLE and PSoC 4200 BLE devices, the HFCLK source should be set to IMO before switching
  74:Generated_Source\PSoC4/cyPm.h **** power mode. The IMO should be enabled (by calling CySysClkImoStart(), if it is not) and HFCLK sourc
  75:Generated_Source\PSoC4/cyPm.h **** to IMO by calling CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO).
  76:Generated_Source\PSoC4/cyPm.h **** 
  77:Generated_Source\PSoC4/cyPm.h **** If the System clock frequency is increased by switching to the IMO, the CySysFlashSetWaitCycles() f
  78:Generated_Source\PSoC4/cyPm.h **** appropriate parameter should be called beforehand. Also, it can optionally be called after lowering
  79:Generated_Source\PSoC4/cyPm.h **** frequency in order to improve CPU performance. See CySysFlashSetWaitCycles() description for the de
  80:Generated_Source\PSoC4/cyPm.h **** 
  81:Generated_Source\PSoC4/cyPm.h **** 
  82:Generated_Source\PSoC4/cyPm.h **** 
  83:Generated_Source\PSoC4/cyPm.h **** 
  84:Generated_Source\PSoC4/cyPm.h **** 
  85:Generated_Source\PSoC4/cyPm.h **** */
  86:Generated_Source\PSoC4/cyPm.h **** void CySysPmSleep(void);
  87:Generated_Source\PSoC4/cyPm.h **** void CySysPmDeepSleep(void);
  88:Generated_Source\PSoC4/cyPm.h **** 
  89:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
  90:Generated_Source\PSoC4/cyPm.h ****     void CySysPmHibernate(void);
  91:Generated_Source\PSoC4/cyPm.h ****     void CySysPmFreezeIo(void);
  92:Generated_Source\PSoC4/cyPm.h ****     void CySysPmUnfreezeIo(void);
  93:Generated_Source\PSoC4/cyPm.h ****     uint32 CySysPmGetResetReason(void);
  94:Generated_Source\PSoC4/cyPm.h ****     void CySysPmStop(void);
  95:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupPolarity(uint32 polarity);
  96:Generated_Source\PSoC4/cyPm.h **** #else
  97:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz);
  98:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.h **** 
 100:Generated_Source\PSoC4/cyPm.h **** /** @} group_power_management */
 101:Generated_Source\PSoC4/cyPm.h **** 
 102:Generated_Source\PSoC4/cyPm.h **** 
 103:Generated_Source\PSoC4/cyPm.h **** /*******************************************************************************
 104:Generated_Source\PSoC4/cyPm.h **** * The ARM compilers have the __wfi() intrinsic that inserts a WFI instruction
 105:Generated_Source\PSoC4/cyPm.h **** * into the instruction stream generated by the compiler. The GCC compiler has to
 106:Generated_Source\PSoC4/cyPm.h **** * execute assembly language instruction.
 107:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
 108:Generated_Source\PSoC4/cyPm.h **** #if defined(__ARMCC_VERSION)    /* Instristic for Keil compilers */
 109:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __wfi()
 110:Generated_Source\PSoC4/cyPm.h **** #else   /* ASM for GCC & IAR */
 111:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __asm volatile ("WFI \n")
 112:Generated_Source\PSoC4/cyPm.h **** #endif /* __ARMCC_VERSION */
 113:Generated_Source\PSoC4/cyPm.h **** 
 114:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 115:Generated_Source\PSoC4/cyPm.h **** 
 116:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmSetWakeupPolarity() */
 117:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_LOW        ((uint32)(0x0u))    /**< Logical zero will wakeup t
 118:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_HIGH       ((uint32)(0x1u))    /**< Logical one will wakeup th
 119:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_POLARITY          (CY_PM_STOP_WAKEUP_ACTIVE_LOW)
 120:Generated_Source\PSoC4/cyPm.h **** 
 121:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmGetResetReason() */
 122:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_UNKN             (0u)    /**< Unknown reset reason. */
 123:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_XRES             (1u)    /**< Transition from OFF/XRES to RESET */
 124:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_HIB       (2u)    /**< Transition/wakeup from HIBERNATE to RE
 125:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_STOP      (3u)    /**< Transition/wakeup from STOP to RESET *
 126:Generated_Source\PSoC4/cyPm.h **** 
 127:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 128:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 9


 129:Generated_Source\PSoC4/cyPm.h **** 
 130:Generated_Source\PSoC4/cyPm.h **** /***************************************
 131:Generated_Source\PSoC4/cyPm.h **** *              Registers
 132:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 133:Generated_Source\PSoC4/cyPm.h **** 
 134:Generated_Source\PSoC4/cyPm.h **** /* Power Mode Control */
 135:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_REG               (*(reg32 *) CYREG_PWR_CONTROL)
 136:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_PTR               ( (reg32 *) CYREG_PWR_CONTROL)
 137:Generated_Source\PSoC4/cyPm.h **** 
 138:Generated_Source\PSoC4/cyPm.h **** /* CPU System Control Register */
 139:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_CPUSS_CM0)
 140:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0_SCR)
 141:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0_SCR)
 142:Generated_Source\PSoC4/cyPm.h **** #else /* CY_IP_CPUSS_CM0PLUS */
 143:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0P_SCR)
 144:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0P_SCR)
 145:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_CPUSS_CM0) */
 146:Generated_Source\PSoC4/cyPm.h **** 
 147:Generated_Source\PSoC4/cyPm.h **** /* Power System Key & Delay Register */
 148:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_REG             (*(reg32 *) CYREG_PWR_KEY_DELAY)
 149:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_PTR             ( (reg32 *) CYREG_PWR_KEY_DELAY)
 150:Generated_Source\PSoC4/cyPm.h **** 
 151:Generated_Source\PSoC4/cyPm.h **** 
 152:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 153:Generated_Source\PSoC4/cyPm.h ****     /* Hibernate wakeup value for PWR_KEY_DELAY */
 154:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_REG     (*(reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 155:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_PTR     ( (reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 156:Generated_Source\PSoC4/cyPm.h **** #endif  /* (CY_IP_SRSSV2) */
 157:Generated_Source\PSoC4/cyPm.h **** 
 158:Generated_Source\PSoC4/cyPm.h **** /* Deep Sleep wakeup value for PWR_KEY_DELAY */
 159:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_REG       (*(reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 160:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_PTR       ( (reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 161:Generated_Source\PSoC4/cyPm.h **** 
 162:Generated_Source\PSoC4/cyPm.h **** /* Power Stop Mode Register */
 163:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 164:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_REG              (*(reg32 *) CYREG_PWR_STOP)
 165:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_PTR              ( (reg32 *) CYREG_PWR_STOP)
 166:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 167:Generated_Source\PSoC4/cyPm.h **** 
 168:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U)
 169:Generated_Source\PSoC4/cyPm.h ****     /* CPU Subsystem Configuration */
 170:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_REG             (*(reg32 *) CYREG_CPUSS_CONFIG)
 171:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_PTR             ( (reg32 *) CYREG_CPUSS_CONFIG)
 172:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U) */
 173:Generated_Source\PSoC4/cyPm.h **** 
 174:Generated_Source\PSoC4/cyPm.h **** 
 175:Generated_Source\PSoC4/cyPm.h **** /***************************************
 176:Generated_Source\PSoC4/cyPm.h **** *       Register Constants
 177:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 178:Generated_Source\PSoC4/cyPm.h **** 
 179:Generated_Source\PSoC4/cyPm.h **** /* CM0 System Control Register Constants */
 180:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_CPU_SCR_SLEEPDEEP             ((uint32)(0x04u))
 181:Generated_Source\PSoC4/cyPm.h **** 
 182:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 183:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Control Constants */
 184:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_CONTROL_HIBERNATE         (0x80000000u)
 185:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 10


 186:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Stop Constants */
 187:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY_SHIFT       (16u)
 188:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY             ((uint32)((uint32)1u << CY_PM_PWR_STOP_POLARITY_SHI
 189:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE_SHIFT         (17u)
 190:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE               ((uint32)((uint32)1u << CY_PM_PWR_STOP_FREEZE_SHIFT
 191:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_SHIFT         (8u)
 192:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_MASK          ((uint32)((uint32)0xFFu << CY_PM_PWR_STOP_UNLOCK_SH
 193:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK               ((uint32)((uint32)0x3Au << CY_PM_PWR_STOP_UNLOCK_SH
 194:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP_SHIFT           (31u)
 195:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP                 ((uint32)((uint32)1u << CY_PM_PWR_STOP_STOP_SHIFT))
 196:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_MASK           ((uint32)(0xFFu))
 197:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_XRES           ((uint32)(0x00u))
 198:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_HIB            ((uint32)(0xF1u))
 199:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_STOP           ((uint32)(0xF2u))
 200:Generated_Source\PSoC4/cyPm.h **** #else
 201:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_REG_DEFAULT     ((uint32) 248u)
 202:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT    (48u)
 203:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 204:Generated_Source\PSoC4/cyPm.h **** 
 205:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U)
 206:Generated_Source\PSoC4/cyPm.h ****     /* 0 - normal operation, 1 - Flash Accelerator in bypass mode */
 207:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS      ((uint32) 0x02u)
 208:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U) */
 209:Generated_Source\PSoC4/cyPm.h **** 
 210:Generated_Source\PSoC4/cyPm.h **** 
 211:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_SRSSV2)
 212:Generated_Source\PSoC4/cyPm.h ****     #if (CY_IP_HOBTO_DEVICE)
 213:Generated_Source\PSoC4/cyPm.h ****         /*******************************************************************************
 214:Generated_Source\PSoC4/cyPm.h ****         * Function Name: CySysPmHibPinsDisableInputBuf
 215:Generated_Source\PSoC4/cyPm.h ****         ****************************************************************************//**
 216:Generated_Source\PSoC4/cyPm.h ****         *
 217:Generated_Source\PSoC4/cyPm.h ****         *  Disable the input buffer for all the port. This is required before Hibernate
 218:Generated_Source\PSoC4/cyPm.h ****         *  mode entry as the operation of the input buffer is not guaranteed if VCCD
 219:Generated_Source\PSoC4/cyPm.h ****         *  drops down to 1.0 V.
 220:Generated_Source\PSoC4/cyPm.h ****         *
 221:Generated_Source\PSoC4/cyPm.h ****         *******************************************************************************/
 222:Generated_Source\PSoC4/cyPm.h ****         static CY_INLINE void CySysPmHibPinsDisableInputBuf(void)
 223:Generated_Source\PSoC4/cyPm.h ****         {
 224:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT0_PC
 225:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT0_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 178              		.loc 2 225 0
 179 0006 1F4A     		ldr	r2, .L8
 180              	.LBE5:
 181              	.LBE4:
 143:Generated_Source\PSoC4/cyPm.c **** 
 144:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 145:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 146:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 147:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 148:Generated_Source\PSoC4/cyPm.c **** 
 149:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 150:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 182              		.loc 1 150 0
 183 0008 8021     		movs	r1, #128
 184              	.LBB8:
 185              	.LBB6:
 186              		.loc 2 225 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 11


 187 000a 1368     		ldr	r3, [r2]
 188              	.LBE6:
 189              	.LBE8:
 190              		.loc 1 150 0
 191 000c 0906     		lsls	r1, r1, #24
 192              	.LBB9:
 193              	.LBB7:
 194              		.loc 2 225 0
 195 000e 9B00     		lsls	r3, r3, #2
 196 0010 9B08     		lsrs	r3, r3, #2
 197 0012 1360     		str	r3, [r2]
 226:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT0_PC */
 227:Generated_Source\PSoC4/cyPm.h **** 
 228:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT1_PC
 229:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT1_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 198              		.loc 2 229 0
 199 0014 1C4A     		ldr	r2, .L8+4
 200 0016 1368     		ldr	r3, [r2]
 201 0018 9B00     		lsls	r3, r3, #2
 202 001a 9B08     		lsrs	r3, r3, #2
 203 001c 1360     		str	r3, [r2]
 230:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT1_PC */
 231:Generated_Source\PSoC4/cyPm.h **** 
 232:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT2_PC
 233:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT2_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 204              		.loc 2 233 0
 205 001e 1B4A     		ldr	r2, .L8+8
 206 0020 1368     		ldr	r3, [r2]
 207 0022 9B00     		lsls	r3, r3, #2
 208 0024 9B08     		lsrs	r3, r3, #2
 209 0026 1360     		str	r3, [r2]
 234:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT2_PC */
 235:Generated_Source\PSoC4/cyPm.h **** 
 236:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT3_PC
 237:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT3_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 210              		.loc 2 237 0
 211 0028 194A     		ldr	r2, .L8+12
 212 002a 1368     		ldr	r3, [r2]
 213 002c 9B00     		lsls	r3, r3, #2
 214 002e 9B08     		lsrs	r3, r3, #2
 215 0030 1360     		str	r3, [r2]
 238:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT3_PC */
 239:Generated_Source\PSoC4/cyPm.h **** 
 240:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT4_PC
 241:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT4_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 216              		.loc 2 241 0
 217 0032 184A     		ldr	r2, .L8+16
 218 0034 1368     		ldr	r3, [r2]
 219 0036 9B00     		lsls	r3, r3, #2
 220 0038 9B08     		lsrs	r3, r3, #2
 221 003a 1360     		str	r3, [r2]
 242:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT4_PC */
 243:Generated_Source\PSoC4/cyPm.h **** 
 244:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT5_PC
 245:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT5_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 222              		.loc 2 245 0
 223 003c 164A     		ldr	r2, .L8+20
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 12


 224 003e 1368     		ldr	r3, [r2]
 225 0040 9B00     		lsls	r3, r3, #2
 226 0042 9B08     		lsrs	r3, r3, #2
 227 0044 1360     		str	r3, [r2]
 246:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT5_PC */
 247:Generated_Source\PSoC4/cyPm.h **** 
 248:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT6_PC
 249:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT6_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 228              		.loc 2 249 0
 229 0046 154A     		ldr	r2, .L8+24
 230 0048 1368     		ldr	r3, [r2]
 231 004a 9B00     		lsls	r3, r3, #2
 232 004c 9B08     		lsrs	r3, r3, #2
 233 004e 1360     		str	r3, [r2]
 234              	.LBE7:
 235              	.LBE9:
 236              		.loc 1 150 0
 237 0050 134A     		ldr	r2, .L8+28
 238 0052 1368     		ldr	r3, [r2]
 239 0054 0B43     		orrs	r3, r1
 151:Generated_Source\PSoC4/cyPm.c **** 
 152:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 153:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 154:Generated_Source\PSoC4/cyPm.c **** 
 155:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 156:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 240              		.loc 1 156 0
 241 0056 0421     		movs	r1, #4
 150:Generated_Source\PSoC4/cyPm.c **** 
 242              		.loc 1 150 0
 243 0058 1360     		str	r3, [r2]
 153:Generated_Source\PSoC4/cyPm.c **** 
 244              		.loc 1 153 0
 245 005a 124B     		ldr	r3, .L8+32
 246 005c 124A     		ldr	r2, .L8+36
 247 005e 1B88     		ldrh	r3, [r3]
 248 0060 9BB2     		uxth	r3, r3
 249 0062 1360     		str	r3, [r2]
 250              		.loc 1 156 0
 251 0064 114A     		ldr	r2, .L8+40
 252 0066 1368     		ldr	r3, [r2]
 253 0068 0B43     		orrs	r3, r1
 254 006a 1360     		str	r3, [r2]
 157:Generated_Source\PSoC4/cyPm.c **** 
 158:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 159:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 160:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 161:Generated_Source\PSoC4/cyPm.c ****          */
 162:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 255              		.loc 1 162 0
 256 006c 104A     		ldr	r2, .L8+44
 257 006e FB31     		adds	r1, r1, #251
 258 0070 1368     		ldr	r3, [r2]
 259 0072 8B43     		bics	r3, r1
 260 0074 0E39     		subs	r1, r1, #14
 261 0076 0B43     		orrs	r3, r1
 262 0078 1360     		str	r3, [r2]
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 13


 163:Generated_Source\PSoC4/cyPm.c **** 
 164:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 165:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 166:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 167:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 168:Generated_Source\PSoC4/cyPm.c ****          */
 169:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 263              		.loc 1 169 0
 264              		.syntax divided
 265              	@ 169 "Generated_Source\PSoC4\cyPm.c" 1
 266 007a 30BF     		WFI 
 267              	
 268              	@ 0 "" 2
 170:Generated_Source\PSoC4/cyPm.c **** 
 171:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 269              		.loc 1 171 0
 270              		.thumb
 271              		.syntax unified
 272 007c FFF7FEFF 		bl	CyExitCriticalSection
 273              	.LVL8:
 172:Generated_Source\PSoC4/cyPm.c ****     }
 274              		.loc 1 172 0
 275              		@ sp needed
 276 0080 10BD     		pop	{r4, pc}
 277              	.L9:
 278 0082 C046     		.align	2
 279              	.L8:
 280 0084 08000440 		.word	1074003976
 281 0088 08010440 		.word	1074004232
 282 008c 08020440 		.word	1074004488
 283 0090 08030440 		.word	1074004744
 284 0094 08040440 		.word	1074005000
 285 0098 08050440 		.word	1074005256
 286 009c 08060440 		.word	1074005512
 287 00a0 00000B40 		.word	1074462720
 288 00a4 50F2FF0F 		.word	268431952
 289 00a8 0C000B40 		.word	1074462732
 290 00ac 10ED00E0 		.word	-536810224
 291 00b0 2C000B40 		.word	1074462764
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	CySysPmHibernate, .-CySysPmHibernate
 295              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 296              		.align	1
 297              		.global	CySysPmSetWakeupPolarity
 298              		.code	16
 299              		.thumb_func
 300              		.type	CySysPmSetWakeupPolarity, %function
 301              	CySysPmSetWakeupPolarity:
 302              	.LFB7:
 173:Generated_Source\PSoC4/cyPm.c **** 
 174:Generated_Source\PSoC4/cyPm.c **** 
 175:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 177:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/cyPm.c ****     *
 179:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 14


 180:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 181:Generated_Source\PSoC4/cyPm.c ****     *
 182:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 183:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 184:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 185:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 186:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 187:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 188:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 189:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 190:Generated_Source\PSoC4/cyPm.c ****     *
 191:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 192:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 193:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 194:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 195:Generated_Source\PSoC4/cyPm.c ****     *
 196:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 197:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 198:Generated_Source\PSoC4/cyPm.c ****     {
 199:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 205:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 206:Generated_Source\PSoC4/cyPm.c **** 
 207:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 211:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 212:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 213:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 216:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 217:Generated_Source\PSoC4/cyPm.c **** 
 218:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 219:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 222:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 223:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 224:Generated_Source\PSoC4/cyPm.c ****          */
 225:Generated_Source\PSoC4/cyPm.c ****     }
 226:Generated_Source\PSoC4/cyPm.c **** 
 227:Generated_Source\PSoC4/cyPm.c **** 
 228:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 229:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 230:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 231:Generated_Source\PSoC4/cyPm.c ****     *
 232:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 233:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 234:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 235:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 236:Generated_Source\PSoC4/cyPm.c ****     *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 15


 237:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 238:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 239:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 240:Generated_Source\PSoC4/cyPm.c ****     *
 241:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 242:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 243:Generated_Source\PSoC4/cyPm.c ****     {
 303              		.loc 1 243 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL9:
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 312              		.loc 1 243 0
 313 0002 0400     		movs	r4, r0
 244:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 245:Generated_Source\PSoC4/cyPm.c **** 
 246:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 314              		.loc 1 246 0
 315 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 316              	.LVL10:
 317 0008 074A     		ldr	r2, .L14
 247:Generated_Source\PSoC4/cyPm.c **** 
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 318              		.loc 1 249 0
 319 000a 002C     		cmp	r4, #0
 320 000c 04D0     		beq	.L11
 321              		.loc 1 249 0 is_stmt 0 discriminator 1
 322 000e 8021     		movs	r1, #128
 323 0010 1368     		ldr	r3, [r2]
 324 0012 4902     		lsls	r1, r1, #9
 325 0014 0B43     		orrs	r3, r1
 326 0016 02E0     		b	.L12
 327              	.L11:
 250:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 328              		.loc 1 250 0 is_stmt 1 discriminator 2
 329 0018 1168     		ldr	r1, [r2]
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 330              		.loc 1 249 0 discriminator 2
 331 001a 044B     		ldr	r3, .L14+4
 332 001c 0B40     		ands	r3, r1
 333              	.L12:
 248:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 334              		.loc 1 248 0
 335 001e 1360     		str	r3, [r2]
 251:Generated_Source\PSoC4/cyPm.c **** 
 252:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 336              		.loc 1 252 0
 337 0020 FFF7FEFF 		bl	CyExitCriticalSection
 338              	.LVL11:
 253:Generated_Source\PSoC4/cyPm.c ****     }
 339              		.loc 1 253 0
 340              		@ sp needed
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 16


 341              	.LVL12:
 342 0024 10BD     		pop	{r4, pc}
 343              	.L15:
 344 0026 C046     		.align	2
 345              	.L14:
 346 0028 2C000B40 		.word	1074462764
 347 002c FFFFFEFF 		.word	-65537
 348              		.cfi_endproc
 349              	.LFE7:
 350              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 351              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 352              		.align	1
 353              		.global	CySysPmGetResetReason
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysPmGetResetReason, %function
 357              	CySysPmGetResetReason:
 358              	.LFB8:
 254:Generated_Source\PSoC4/cyPm.c **** 
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 257:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 258:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 259:Generated_Source\PSoC4/cyPm.c ****     *
 260:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 261:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 262:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 263:Generated_Source\PSoC4/cyPm.c ****     *
 264:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 265:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 266:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 267:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 268:Generated_Source\PSoC4/cyPm.c ****     *
 269:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 270:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 271:Generated_Source\PSoC4/cyPm.c ****     {
 359              		.loc 1 271 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL13:
 272:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 365              		.loc 1 274 0
 366 0000 054B     		ldr	r3, .L22
 275:Generated_Source\PSoC4/cyPm.c ****         {
 276:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 277:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 278:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 279:Generated_Source\PSoC4/cyPm.c ****             break;
 280:Generated_Source\PSoC4/cyPm.c **** 
 281:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 282:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 283:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 367              		.loc 1 283 0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 17


 368 0002 0220     		movs	r0, #2
 274:Generated_Source\PSoC4/cyPm.c ****         {
 369              		.loc 1 274 0
 370 0004 1B68     		ldr	r3, [r3]
 371 0006 DBB2     		uxtb	r3, r3
 372 0008 F12B     		cmp	r3, #241
 373 000a 04D0     		beq	.L17
 284:Generated_Source\PSoC4/cyPm.c ****             break;
 285:Generated_Source\PSoC4/cyPm.c **** 
 286:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 287:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 288:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 374              		.loc 1 288 0
 375 000c 0130     		adds	r0, r0, #1
 274:Generated_Source\PSoC4/cyPm.c ****         {
 376              		.loc 1 274 0
 377 000e F22B     		cmp	r3, #242
 378 0010 01D0     		beq	.L17
 272:Generated_Source\PSoC4/cyPm.c **** 
 379              		.loc 1 272 0
 380 0012 5842     		rsbs	r0, r3, #0
 381 0014 5841     		adcs	r0, r0, r3
 382              	.L17:
 383              	.LVL14:
 289:Generated_Source\PSoC4/cyPm.c ****             break;
 290:Generated_Source\PSoC4/cyPm.c **** 
 291:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 292:Generated_Source\PSoC4/cyPm.c ****         default:
 293:Generated_Source\PSoC4/cyPm.c ****             break;
 294:Generated_Source\PSoC4/cyPm.c ****         }
 295:Generated_Source\PSoC4/cyPm.c **** 
 296:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 297:Generated_Source\PSoC4/cyPm.c ****     }
 384              		.loc 1 297 0
 385              		@ sp needed
 386 0016 7047     		bx	lr
 387              	.L23:
 388              		.align	2
 389              	.L22:
 390 0018 2C000B40 		.word	1074462764
 391              		.cfi_endproc
 392              	.LFE8:
 393              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 394              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 395              		.align	1
 396              		.global	CySysPmFreezeIo
 397              		.code	16
 398              		.thumb_func
 399              		.type	CySysPmFreezeIo, %function
 400              	CySysPmFreezeIo:
 401              	.LFB9:
 298:Generated_Source\PSoC4/cyPm.c **** 
 299:Generated_Source\PSoC4/cyPm.c **** 
 300:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 301:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 302:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 303:Generated_Source\PSoC4/cyPm.c ****     *
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 18


 304:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 305:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 306:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 307:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 308:Generated_Source\PSoC4/cyPm.c ****     *
 309:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 310:Generated_Source\PSoC4/cyPm.c ****     *
 311:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 312:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 313:Generated_Source\PSoC4/cyPm.c ****     {
 402              		.loc 1 313 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406 0000 10B5     		push	{r4, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 314:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 315:Generated_Source\PSoC4/cyPm.c **** 
 316:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 410              		.loc 1 316 0
 411 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 412              	.LVL15:
 317:Generated_Source\PSoC4/cyPm.c **** 
 318:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 319:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 320:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 321:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 322:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 323:Generated_Source\PSoC4/cyPm.c ****          */
 324:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 413              		.loc 1 324 0
 414 0006 084B     		ldr	r3, .L26
 415 0008 1A68     		ldr	r2, [r3]
 416 000a 9203     		lsls	r2, r2, #14
 417 000c 09D4     		bmi	.L25
 325:Generated_Source\PSoC4/cyPm.c ****         {
 326:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 327:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 328:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 418              		.loc 1 328 0
 419 000e 1968     		ldr	r1, [r3]
 327:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 420              		.loc 1 327 0
 421 0010 064A     		ldr	r2, .L26+4
 422 0012 0A40     		ands	r2, r1
 423 0014 0649     		ldr	r1, .L26+8
 424 0016 0A43     		orrs	r2, r1
 425 0018 1A60     		str	r2, [r3]
 329:Generated_Source\PSoC4/cyPm.c **** 
 330:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 331:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 332:Generated_Source\PSoC4/cyPm.c ****             */
 333:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 426              		.loc 1 333 0
 427 001a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 19


 334:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 428              		.loc 1 334 0
 429 001c 1A68     		ldr	r2, [r3]
 335:Generated_Source\PSoC4/cyPm.c **** 
 336:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 337:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 430              		.loc 1 337 0
 431 001e 1A68     		ldr	r2, [r3]
 432 0020 1A60     		str	r2, [r3]
 433              	.L25:
 338:Generated_Source\PSoC4/cyPm.c ****         }
 339:Generated_Source\PSoC4/cyPm.c **** 
 340:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 434              		.loc 1 340 0
 435 0022 FFF7FEFF 		bl	CyExitCriticalSection
 436              	.LVL16:
 341:Generated_Source\PSoC4/cyPm.c ****     }
 437              		.loc 1 341 0
 438              		@ sp needed
 439 0026 10BD     		pop	{r4, pc}
 440              	.L27:
 441              		.align	2
 442              	.L26:
 443 0028 2C000B40 		.word	1074462764
 444 002c FF000100 		.word	65791
 445 0030 003A0280 		.word	-2147337728
 446              		.cfi_endproc
 447              	.LFE9:
 448              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 449              		.section	.text.CySysPmStop,"ax",%progbits
 450              		.align	1
 451              		.global	CySysPmStop
 452              		.code	16
 453              		.thumb_func
 454              		.type	CySysPmStop, %function
 455              	CySysPmStop:
 456              	.LFB6:
 198:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 457              		.loc 1 198 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 10B5     		push	{r4, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 4, -8
 464              		.cfi_offset 14, -4
 199:Generated_Source\PSoC4/cyPm.c **** 
 465              		.loc 1 199 0
 466 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 467              	.LVL17:
 202:Generated_Source\PSoC4/cyPm.c **** 
 468              		.loc 1 202 0
 469 0006 8023     		movs	r3, #128
 470 0008 084C     		ldr	r4, .L29
 471 000a 5B02     		lsls	r3, r3, #9
 472 000c 2268     		ldr	r2, [r4]
 473 000e 1340     		ands	r3, r2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 20


 474 0010 F222     		movs	r2, #242
 475 0012 1343     		orrs	r3, r2
 476 0014 2360     		str	r3, [r4]
 205:Generated_Source\PSoC4/cyPm.c **** 
 477              		.loc 1 205 0
 478 0016 FFF7FEFF 		bl	CySysPmFreezeIo
 479              	.LVL18:
 208:Generated_Source\PSoC4/cyPm.c **** 
 480              		.loc 1 208 0
 481 001a 8022     		movs	r2, #128
 482 001c 2368     		ldr	r3, [r4]
 483 001e 1206     		lsls	r2, r2, #24
 484 0020 1343     		orrs	r3, r2
 485 0022 2360     		str	r3, [r4]
 215:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 486              		.loc 1 215 0
 487              		.syntax divided
 488              	@ 215 "Generated_Source\PSoC4\cyPm.c" 1
 489 0024 C046     		NOP
 490              	
 491              	@ 0 "" 2
 216:Generated_Source\PSoC4/cyPm.c **** 
 492              		.loc 1 216 0
 493              	@ 216 "Generated_Source\PSoC4\cyPm.c" 1
 494 0026 C046     		NOP
 495              	
 496              	@ 0 "" 2
 219:Generated_Source\PSoC4/cyPm.c **** 
 497              		.loc 1 219 0
 498              	@ 219 "Generated_Source\PSoC4\cyPm.c" 1
 499 0028 30BF     		WFI 
 500              	
 501              	@ 0 "" 2
 225:Generated_Source\PSoC4/cyPm.c **** 
 502              		.loc 1 225 0
 503              		.thumb
 504              		.syntax unified
 505              		@ sp needed
 506 002a 10BD     		pop	{r4, pc}
 507              	.L30:
 508              		.align	2
 509              	.L29:
 510 002c 2C000B40 		.word	1074462764
 511              		.cfi_endproc
 512              	.LFE6:
 513              		.size	CySysPmStop, .-CySysPmStop
 514              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 515              		.align	1
 516              		.global	CySysPmUnfreezeIo
 517              		.code	16
 518              		.thumb_func
 519              		.type	CySysPmUnfreezeIo, %function
 520              	CySysPmUnfreezeIo:
 521              	.LFB10:
 342:Generated_Source\PSoC4/cyPm.c **** 
 343:Generated_Source\PSoC4/cyPm.c **** 
 344:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 21


 345:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 346:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/cyPm.c ****     *
 348:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 349:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 350:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 351:Generated_Source\PSoC4/cyPm.c ****     *
 352:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 353:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 354:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 355:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 358:Generated_Source\PSoC4/cyPm.c ****     *
 359:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 361:Generated_Source\PSoC4/cyPm.c ****     {
 522              		.loc 1 361 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 10B5     		push	{r4, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 14, -4
 362:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 365:Generated_Source\PSoC4/cyPm.c **** 
 366:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 367:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 368:Generated_Source\PSoC4/cyPm.c ****          */
 369:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 530              		.loc 1 369 0
 531 0002 E824     		movs	r4, #232
 364:Generated_Source\PSoC4/cyPm.c **** 
 532              		.loc 1 364 0
 533 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 534              	.LVL19:
 370:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 535              		.loc 1 370 0
 536 0008 074B     		ldr	r3, .L32
 369:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 537              		.loc 1 369 0
 538 000a 0849     		ldr	r1, .L32+4
 539              		.loc 1 370 0
 540 000c 1A68     		ldr	r2, [r3]
 369:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 541              		.loc 1 369 0
 542 000e A401     		lsls	r4, r4, #6
 543 0010 0A40     		ands	r2, r1
 544 0012 2243     		orrs	r2, r4
 545 0014 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/cyPm.c **** 
 372:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 373:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 374:Generated_Source\PSoC4/cyPm.c ****         */
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 22


 375:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 546              		.loc 1 375 0
 547 0016 1A68     		ldr	r2, [r3]
 376:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 548              		.loc 1 376 0
 549 0018 1A68     		ldr	r2, [r3]
 377:Generated_Source\PSoC4/cyPm.c **** 
 378:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 379:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 550              		.loc 1 379 0
 551 001a 1A68     		ldr	r2, [r3]
 380:Generated_Source\PSoC4/cyPm.c **** 
 381:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 382:Generated_Source\PSoC4/cyPm.c ****     }
 552              		.loc 1 382 0
 553              		@ sp needed
 379:Generated_Source\PSoC4/cyPm.c **** 
 554              		.loc 1 379 0
 555 001c 1140     		ands	r1, r2
 556 001e 1960     		str	r1, [r3]
 381:Generated_Source\PSoC4/cyPm.c ****     }
 557              		.loc 1 381 0
 558 0020 FFF7FEFF 		bl	CyExitCriticalSection
 559              	.LVL20:
 560              		.loc 1 382 0
 561 0024 10BD     		pop	{r4, pc}
 562              	.L33:
 563 0026 C046     		.align	2
 564              	.L32:
 565 0028 2C000B40 		.word	1074462764
 566 002c FF000100 		.word	65791
 567              		.cfi_endproc
 568              	.LFE10:
 569              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 570              		.text
 571              	.Letext0:
 572              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 573              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 574              		.section	.debug_info,"",%progbits
 575              	.Ldebug_info0:
 576 0000 E1020000 		.4byte	0x2e1
 577 0004 0400     		.2byte	0x4
 578 0006 00000000 		.4byte	.Ldebug_abbrev0
 579 000a 04       		.byte	0x4
 580 000b 01       		.uleb128 0x1
 581 000c 7A020000 		.4byte	.LASF32
 582 0010 0C       		.byte	0xc
 583 0011 34020000 		.4byte	.LASF33
 584 0015 4A010000 		.4byte	.LASF34
 585 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 586 001d 00000000 		.4byte	0
 587 0021 00000000 		.4byte	.Ldebug_line0
 588 0025 02       		.uleb128 0x2
 589 0026 01       		.byte	0x1
 590 0027 06       		.byte	0x6
 591 0028 5E020000 		.4byte	.LASF0
 592 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 23


 593 002d 01       		.byte	0x1
 594 002e 08       		.byte	0x8
 595 002f A3000000 		.4byte	.LASF1
 596 0033 02       		.uleb128 0x2
 597 0034 02       		.byte	0x2
 598 0035 05       		.byte	0x5
 599 0036 10020000 		.4byte	.LASF2
 600 003a 02       		.uleb128 0x2
 601 003b 02       		.byte	0x2
 602 003c 07       		.byte	0x7
 603 003d 44000000 		.4byte	.LASF3
 604 0041 02       		.uleb128 0x2
 605 0042 04       		.byte	0x4
 606 0043 05       		.byte	0x5
 607 0044 2B020000 		.4byte	.LASF4
 608 0048 02       		.uleb128 0x2
 609 0049 04       		.byte	0x4
 610 004a 07       		.byte	0x7
 611 004b C0000000 		.4byte	.LASF5
 612 004f 02       		.uleb128 0x2
 613 0050 08       		.byte	0x8
 614 0051 05       		.byte	0x5
 615 0052 F0010000 		.4byte	.LASF6
 616 0056 02       		.uleb128 0x2
 617 0057 08       		.byte	0x8
 618 0058 07       		.byte	0x7
 619 0059 8C000000 		.4byte	.LASF7
 620 005d 03       		.uleb128 0x3
 621 005e 04       		.byte	0x4
 622 005f 05       		.byte	0x5
 623 0060 696E7400 		.ascii	"int\000"
 624 0064 02       		.uleb128 0x2
 625 0065 04       		.byte	0x4
 626 0066 07       		.byte	0x7
 627 0067 27010000 		.4byte	.LASF8
 628 006b 04       		.uleb128 0x4
 629 006c D2000000 		.4byte	.LASF9
 630 0070 03       		.byte	0x3
 631 0071 D201     		.2byte	0x1d2
 632 0073 2C000000 		.4byte	0x2c
 633 0077 04       		.uleb128 0x4
 634 0078 02010000 		.4byte	.LASF10
 635 007c 03       		.byte	0x3
 636 007d D301     		.2byte	0x1d3
 637 007f 3A000000 		.4byte	0x3a
 638 0083 04       		.uleb128 0x4
 639 0084 09010000 		.4byte	.LASF11
 640 0088 03       		.byte	0x3
 641 0089 D401     		.2byte	0x1d4
 642 008b 48000000 		.4byte	0x48
 643 008f 02       		.uleb128 0x2
 644 0090 04       		.byte	0x4
 645 0091 04       		.byte	0x4
 646 0092 86000000 		.4byte	.LASF12
 647 0096 02       		.uleb128 0x2
 648 0097 08       		.byte	0x8
 649 0098 04       		.byte	0x4
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 24


 650 0099 E4000000 		.4byte	.LASF13
 651 009d 02       		.uleb128 0x2
 652 009e 01       		.byte	0x1
 653 009f 08       		.byte	0x8
 654 00a0 FE010000 		.4byte	.LASF14
 655 00a4 04       		.uleb128 0x4
 656 00a5 00000000 		.4byte	.LASF15
 657 00a9 03       		.byte	0x3
 658 00aa 7D02     		.2byte	0x27d
 659 00ac B0000000 		.4byte	0xb0
 660 00b0 05       		.uleb128 0x5
 661 00b1 77000000 		.4byte	0x77
 662 00b5 04       		.uleb128 0x4
 663 00b6 06000000 		.4byte	.LASF16
 664 00ba 03       		.byte	0x3
 665 00bb 7E02     		.2byte	0x27e
 666 00bd C1000000 		.4byte	0xc1
 667 00c1 05       		.uleb128 0x5
 668 00c2 83000000 		.4byte	0x83
 669 00c6 02       		.uleb128 0x2
 670 00c7 08       		.byte	0x8
 671 00c8 04       		.byte	0x4
 672 00c9 52020000 		.4byte	.LASF17
 673 00cd 02       		.uleb128 0x2
 674 00ce 04       		.byte	0x4
 675 00cf 07       		.byte	0x7
 676 00d0 E7010000 		.4byte	.LASF18
 677 00d4 06       		.uleb128 0x6
 678 00d5 25000000 		.4byte	.LASF19
 679 00d9 01       		.byte	0x1
 680 00da 20       		.byte	0x20
 681 00db 00000000 		.4byte	.LFB3
 682 00df 1C000000 		.4byte	.LFE3-.LFB3
 683 00e3 01       		.uleb128 0x1
 684 00e4 9C       		.byte	0x9c
 685 00e5 0B010000 		.4byte	0x10b
 686 00e9 07       		.uleb128 0x7
 687 00ea B1000000 		.4byte	.LASF21
 688 00ee 01       		.byte	0x1
 689 00ef 22       		.byte	0x22
 690 00f0 6B000000 		.4byte	0x6b
 691 00f4 00000000 		.4byte	.LLST0
 692 00f8 08       		.uleb128 0x8
 693 00f9 06000000 		.4byte	.LVL0
 694 00fd C3020000 		.4byte	0x2c3
 695 0101 08       		.uleb128 0x8
 696 0102 16000000 		.4byte	.LVL1
 697 0106 CE020000 		.4byte	0x2ce
 698 010a 00       		.byte	0
 699 010b 06       		.uleb128 0x6
 700 010c 1A020000 		.4byte	.LASF20
 701 0110 01       		.byte	0x1
 702 0111 3F       		.byte	0x3f
 703 0112 00000000 		.4byte	.LFB4
 704 0116 54000000 		.4byte	.LFE4-.LFB4
 705 011a 01       		.uleb128 0x1
 706 011b 9C       		.byte	0x9c
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 25


 707 011c 6A010000 		.4byte	0x16a
 708 0120 07       		.uleb128 0x7
 709 0121 B1000000 		.4byte	.LASF21
 710 0125 01       		.byte	0x1
 711 0126 41       		.byte	0x41
 712 0127 6B000000 		.4byte	0x6b
 713 012b 13000000 		.4byte	.LLST1
 714 012f 09       		.uleb128 0x9
 715 0130 03020000 		.4byte	.LASF22
 716 0134 01       		.byte	0x1
 717 0135 43       		.byte	0x43
 718 0136 C1000000 		.4byte	0xc1
 719 013a 02       		.uleb128 0x2
 720 013b 91       		.byte	0x91
 721 013c 6C       		.sleb128 -20
 722 013d 08       		.uleb128 0x8
 723 013e 06000000 		.4byte	.LVL2
 724 0142 C3020000 		.4byte	0x2c3
 725 0146 0A       		.uleb128 0xa
 726 0147 32000000 		.4byte	.LVL4
 727 014b D9020000 		.4byte	0x2d9
 728 014f 59010000 		.4byte	0x159
 729 0153 0B       		.uleb128 0xb
 730 0154 01       		.uleb128 0x1
 731 0155 50       		.byte	0x50
 732 0156 01       		.uleb128 0x1
 733 0157 32       		.byte	0x32
 734 0158 00       		.byte	0
 735 0159 0C       		.uleb128 0xc
 736 015a 3E000000 		.4byte	.LVL5
 737 015e CE020000 		.4byte	0x2ce
 738 0162 0B       		.uleb128 0xb
 739 0163 01       		.uleb128 0x1
 740 0164 50       		.byte	0x50
 741 0165 02       		.uleb128 0x2
 742 0166 74       		.byte	0x74
 743 0167 00       		.sleb128 0
 744 0168 00       		.byte	0
 745 0169 00       		.byte	0
 746 016a 0D       		.uleb128 0xd
 747 016b 68000000 		.4byte	.LASF35
 748 016f 02       		.byte	0x2
 749 0170 DE       		.byte	0xde
 750 0171 03       		.byte	0x3
 751 0172 06       		.uleb128 0x6
 752 0173 57000000 		.4byte	.LASF23
 753 0177 01       		.byte	0x1
 754 0178 8A       		.byte	0x8a
 755 0179 00000000 		.4byte	.LFB5
 756 017d B4000000 		.4byte	.LFE5-.LFB5
 757 0181 01       		.uleb128 0x1
 758 0182 9C       		.byte	0x9c
 759 0183 B8010000 		.4byte	0x1b8
 760 0187 07       		.uleb128 0x7
 761 0188 B1000000 		.4byte	.LASF21
 762 018c 01       		.byte	0x1
 763 018d 8C       		.byte	0x8c
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 26


 764 018e 6B000000 		.4byte	0x6b
 765 0192 26000000 		.4byte	.LLST2
 766 0196 0E       		.uleb128 0xe
 767 0197 6A010000 		.4byte	0x16a
 768 019b 06000000 		.4byte	.LBB4
 769 019f 00000000 		.4byte	.Ldebug_ranges0+0
 770 01a3 01       		.byte	0x1
 771 01a4 92       		.byte	0x92
 772 01a5 08       		.uleb128 0x8
 773 01a6 06000000 		.4byte	.LVL7
 774 01aa C3020000 		.4byte	0x2c3
 775 01ae 08       		.uleb128 0x8
 776 01af 80000000 		.4byte	.LVL8
 777 01b3 CE020000 		.4byte	0x2ce
 778 01b7 00       		.byte	0
 779 01b8 06       		.uleb128 0x6
 780 01b9 0C000000 		.4byte	.LASF24
 781 01bd 01       		.byte	0x1
 782 01be F2       		.byte	0xf2
 783 01bf 00000000 		.4byte	.LFB7
 784 01c3 30000000 		.4byte	.LFE7-.LFB7
 785 01c7 01       		.uleb128 0x1
 786 01c8 9C       		.byte	0x9c
 787 01c9 FE010000 		.4byte	0x1fe
 788 01cd 0F       		.uleb128 0xf
 789 01ce C8010000 		.4byte	.LASF36
 790 01d2 01       		.byte	0x1
 791 01d3 F2       		.byte	0xf2
 792 01d4 83000000 		.4byte	0x83
 793 01d8 39000000 		.4byte	.LLST3
 794 01dc 07       		.uleb128 0x7
 795 01dd B1000000 		.4byte	.LASF21
 796 01e1 01       		.byte	0x1
 797 01e2 F4       		.byte	0xf4
 798 01e3 6B000000 		.4byte	0x6b
 799 01e7 65000000 		.4byte	.LLST4
 800 01eb 08       		.uleb128 0x8
 801 01ec 08000000 		.4byte	.LVL10
 802 01f0 C3020000 		.4byte	0x2c3
 803 01f4 08       		.uleb128 0x8
 804 01f5 24000000 		.4byte	.LVL11
 805 01f9 CE020000 		.4byte	0x2ce
 806 01fd 00       		.byte	0
 807 01fe 10       		.uleb128 0x10
 808 01ff D1010000 		.4byte	.LASF37
 809 0203 01       		.byte	0x1
 810 0204 0E01     		.2byte	0x10e
 811 0206 83000000 		.4byte	0x83
 812 020a 00000000 		.4byte	.LFB8
 813 020e 1C000000 		.4byte	.LFE8-.LFB8
 814 0212 01       		.uleb128 0x1
 815 0213 9C       		.byte	0x9c
 816 0214 29020000 		.4byte	0x229
 817 0218 11       		.uleb128 0x11
 818 0219 C1010000 		.4byte	.LASF25
 819 021d 01       		.byte	0x1
 820 021e 1001     		.2byte	0x110
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 27


 821 0220 83000000 		.4byte	0x83
 822 0224 78000000 		.4byte	.LLST5
 823 0228 00       		.byte	0
 824 0229 12       		.uleb128 0x12
 825 022a 6A020000 		.4byte	.LASF26
 826 022e 01       		.byte	0x1
 827 022f 3801     		.2byte	0x138
 828 0231 00000000 		.4byte	.LFB9
 829 0235 34000000 		.4byte	.LFE9-.LFB9
 830 0239 01       		.uleb128 0x1
 831 023a 9C       		.byte	0x9c
 832 023b 62020000 		.4byte	0x262
 833 023f 11       		.uleb128 0x11
 834 0240 B1000000 		.4byte	.LASF21
 835 0244 01       		.byte	0x1
 836 0245 3A01     		.2byte	0x13a
 837 0247 6B000000 		.4byte	0x6b
 838 024b 97000000 		.4byte	.LLST6
 839 024f 08       		.uleb128 0x8
 840 0250 06000000 		.4byte	.LVL15
 841 0254 C3020000 		.4byte	0x2c3
 842 0258 08       		.uleb128 0x8
 843 0259 26000000 		.4byte	.LVL16
 844 025d CE020000 		.4byte	0x2ce
 845 0261 00       		.byte	0
 846 0262 06       		.uleb128 0x6
 847 0263 D8000000 		.4byte	.LASF27
 848 0267 01       		.byte	0x1
 849 0268 C5       		.byte	0xc5
 850 0269 00000000 		.4byte	.LFB6
 851 026d 30000000 		.4byte	.LFE6-.LFB6
 852 0271 01       		.uleb128 0x1
 853 0272 9C       		.byte	0x9c
 854 0273 8A020000 		.4byte	0x28a
 855 0277 08       		.uleb128 0x8
 856 0278 06000000 		.4byte	.LVL17
 857 027c C3020000 		.4byte	0x2c3
 858 0280 08       		.uleb128 0x8
 859 0281 1A000000 		.4byte	.LVL18
 860 0285 29020000 		.4byte	0x229
 861 0289 00       		.byte	0
 862 028a 12       		.uleb128 0x12
 863 028b 32000000 		.4byte	.LASF28
 864 028f 01       		.byte	0x1
 865 0290 6801     		.2byte	0x168
 866 0292 00000000 		.4byte	.LFB10
 867 0296 30000000 		.4byte	.LFE10-.LFB10
 868 029a 01       		.uleb128 0x1
 869 029b 9C       		.byte	0x9c
 870 029c C3020000 		.4byte	0x2c3
 871 02a0 11       		.uleb128 0x11
 872 02a1 B1000000 		.4byte	.LASF21
 873 02a5 01       		.byte	0x1
 874 02a6 6A01     		.2byte	0x16a
 875 02a8 6B000000 		.4byte	0x6b
 876 02ac AA000000 		.4byte	.LLST7
 877 02b0 08       		.uleb128 0x8
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 28


 878 02b1 08000000 		.4byte	.LVL19
 879 02b5 C3020000 		.4byte	0x2c3
 880 02b9 08       		.uleb128 0x8
 881 02ba 24000000 		.4byte	.LVL20
 882 02be CE020000 		.4byte	0x2ce
 883 02c2 00       		.byte	0
 884 02c3 13       		.uleb128 0x13
 885 02c4 10010000 		.4byte	.LASF29
 886 02c8 10010000 		.4byte	.LASF29
 887 02cc 04       		.byte	0x4
 888 02cd E5       		.byte	0xe5
 889 02ce 13       		.uleb128 0x13
 890 02cf 34010000 		.4byte	.LASF30
 891 02d3 34010000 		.4byte	.LASF30
 892 02d7 04       		.byte	0x4
 893 02d8 E6       		.byte	0xe6
 894 02d9 13       		.uleb128 0x13
 895 02da EB000000 		.4byte	.LASF31
 896 02de EB000000 		.4byte	.LASF31
 897 02e2 04       		.byte	0x4
 898 02e3 6B       		.byte	0x6b
 899 02e4 00       		.byte	0
 900              		.section	.debug_abbrev,"",%progbits
 901              	.Ldebug_abbrev0:
 902 0000 01       		.uleb128 0x1
 903 0001 11       		.uleb128 0x11
 904 0002 01       		.byte	0x1
 905 0003 25       		.uleb128 0x25
 906 0004 0E       		.uleb128 0xe
 907 0005 13       		.uleb128 0x13
 908 0006 0B       		.uleb128 0xb
 909 0007 03       		.uleb128 0x3
 910 0008 0E       		.uleb128 0xe
 911 0009 1B       		.uleb128 0x1b
 912 000a 0E       		.uleb128 0xe
 913 000b 55       		.uleb128 0x55
 914 000c 17       		.uleb128 0x17
 915 000d 11       		.uleb128 0x11
 916 000e 01       		.uleb128 0x1
 917 000f 10       		.uleb128 0x10
 918 0010 17       		.uleb128 0x17
 919 0011 00       		.byte	0
 920 0012 00       		.byte	0
 921 0013 02       		.uleb128 0x2
 922 0014 24       		.uleb128 0x24
 923 0015 00       		.byte	0
 924 0016 0B       		.uleb128 0xb
 925 0017 0B       		.uleb128 0xb
 926 0018 3E       		.uleb128 0x3e
 927 0019 0B       		.uleb128 0xb
 928 001a 03       		.uleb128 0x3
 929 001b 0E       		.uleb128 0xe
 930 001c 00       		.byte	0
 931 001d 00       		.byte	0
 932 001e 03       		.uleb128 0x3
 933 001f 24       		.uleb128 0x24
 934 0020 00       		.byte	0
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 29


 935 0021 0B       		.uleb128 0xb
 936 0022 0B       		.uleb128 0xb
 937 0023 3E       		.uleb128 0x3e
 938 0024 0B       		.uleb128 0xb
 939 0025 03       		.uleb128 0x3
 940 0026 08       		.uleb128 0x8
 941 0027 00       		.byte	0
 942 0028 00       		.byte	0
 943 0029 04       		.uleb128 0x4
 944 002a 16       		.uleb128 0x16
 945 002b 00       		.byte	0
 946 002c 03       		.uleb128 0x3
 947 002d 0E       		.uleb128 0xe
 948 002e 3A       		.uleb128 0x3a
 949 002f 0B       		.uleb128 0xb
 950 0030 3B       		.uleb128 0x3b
 951 0031 05       		.uleb128 0x5
 952 0032 49       		.uleb128 0x49
 953 0033 13       		.uleb128 0x13
 954 0034 00       		.byte	0
 955 0035 00       		.byte	0
 956 0036 05       		.uleb128 0x5
 957 0037 35       		.uleb128 0x35
 958 0038 00       		.byte	0
 959 0039 49       		.uleb128 0x49
 960 003a 13       		.uleb128 0x13
 961 003b 00       		.byte	0
 962 003c 00       		.byte	0
 963 003d 06       		.uleb128 0x6
 964 003e 2E       		.uleb128 0x2e
 965 003f 01       		.byte	0x1
 966 0040 3F       		.uleb128 0x3f
 967 0041 19       		.uleb128 0x19
 968 0042 03       		.uleb128 0x3
 969 0043 0E       		.uleb128 0xe
 970 0044 3A       		.uleb128 0x3a
 971 0045 0B       		.uleb128 0xb
 972 0046 3B       		.uleb128 0x3b
 973 0047 0B       		.uleb128 0xb
 974 0048 27       		.uleb128 0x27
 975 0049 19       		.uleb128 0x19
 976 004a 11       		.uleb128 0x11
 977 004b 01       		.uleb128 0x1
 978 004c 12       		.uleb128 0x12
 979 004d 06       		.uleb128 0x6
 980 004e 40       		.uleb128 0x40
 981 004f 18       		.uleb128 0x18
 982 0050 9742     		.uleb128 0x2117
 983 0052 19       		.uleb128 0x19
 984 0053 01       		.uleb128 0x1
 985 0054 13       		.uleb128 0x13
 986 0055 00       		.byte	0
 987 0056 00       		.byte	0
 988 0057 07       		.uleb128 0x7
 989 0058 34       		.uleb128 0x34
 990 0059 00       		.byte	0
 991 005a 03       		.uleb128 0x3
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 30


 992 005b 0E       		.uleb128 0xe
 993 005c 3A       		.uleb128 0x3a
 994 005d 0B       		.uleb128 0xb
 995 005e 3B       		.uleb128 0x3b
 996 005f 0B       		.uleb128 0xb
 997 0060 49       		.uleb128 0x49
 998 0061 13       		.uleb128 0x13
 999 0062 02       		.uleb128 0x2
 1000 0063 17       		.uleb128 0x17
 1001 0064 00       		.byte	0
 1002 0065 00       		.byte	0
 1003 0066 08       		.uleb128 0x8
 1004 0067 898201   		.uleb128 0x4109
 1005 006a 00       		.byte	0
 1006 006b 11       		.uleb128 0x11
 1007 006c 01       		.uleb128 0x1
 1008 006d 31       		.uleb128 0x31
 1009 006e 13       		.uleb128 0x13
 1010 006f 00       		.byte	0
 1011 0070 00       		.byte	0
 1012 0071 09       		.uleb128 0x9
 1013 0072 34       		.uleb128 0x34
 1014 0073 00       		.byte	0
 1015 0074 03       		.uleb128 0x3
 1016 0075 0E       		.uleb128 0xe
 1017 0076 3A       		.uleb128 0x3a
 1018 0077 0B       		.uleb128 0xb
 1019 0078 3B       		.uleb128 0x3b
 1020 0079 0B       		.uleb128 0xb
 1021 007a 49       		.uleb128 0x49
 1022 007b 13       		.uleb128 0x13
 1023 007c 02       		.uleb128 0x2
 1024 007d 18       		.uleb128 0x18
 1025 007e 00       		.byte	0
 1026 007f 00       		.byte	0
 1027 0080 0A       		.uleb128 0xa
 1028 0081 898201   		.uleb128 0x4109
 1029 0084 01       		.byte	0x1
 1030 0085 11       		.uleb128 0x11
 1031 0086 01       		.uleb128 0x1
 1032 0087 31       		.uleb128 0x31
 1033 0088 13       		.uleb128 0x13
 1034 0089 01       		.uleb128 0x1
 1035 008a 13       		.uleb128 0x13
 1036 008b 00       		.byte	0
 1037 008c 00       		.byte	0
 1038 008d 0B       		.uleb128 0xb
 1039 008e 8A8201   		.uleb128 0x410a
 1040 0091 00       		.byte	0
 1041 0092 02       		.uleb128 0x2
 1042 0093 18       		.uleb128 0x18
 1043 0094 9142     		.uleb128 0x2111
 1044 0096 18       		.uleb128 0x18
 1045 0097 00       		.byte	0
 1046 0098 00       		.byte	0
 1047 0099 0C       		.uleb128 0xc
 1048 009a 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 31


 1049 009d 01       		.byte	0x1
 1050 009e 11       		.uleb128 0x11
 1051 009f 01       		.uleb128 0x1
 1052 00a0 31       		.uleb128 0x31
 1053 00a1 13       		.uleb128 0x13
 1054 00a2 00       		.byte	0
 1055 00a3 00       		.byte	0
 1056 00a4 0D       		.uleb128 0xd
 1057 00a5 2E       		.uleb128 0x2e
 1058 00a6 00       		.byte	0
 1059 00a7 03       		.uleb128 0x3
 1060 00a8 0E       		.uleb128 0xe
 1061 00a9 3A       		.uleb128 0x3a
 1062 00aa 0B       		.uleb128 0xb
 1063 00ab 3B       		.uleb128 0x3b
 1064 00ac 0B       		.uleb128 0xb
 1065 00ad 27       		.uleb128 0x27
 1066 00ae 19       		.uleb128 0x19
 1067 00af 20       		.uleb128 0x20
 1068 00b0 0B       		.uleb128 0xb
 1069 00b1 00       		.byte	0
 1070 00b2 00       		.byte	0
 1071 00b3 0E       		.uleb128 0xe
 1072 00b4 1D       		.uleb128 0x1d
 1073 00b5 00       		.byte	0
 1074 00b6 31       		.uleb128 0x31
 1075 00b7 13       		.uleb128 0x13
 1076 00b8 52       		.uleb128 0x52
 1077 00b9 01       		.uleb128 0x1
 1078 00ba 55       		.uleb128 0x55
 1079 00bb 17       		.uleb128 0x17
 1080 00bc 58       		.uleb128 0x58
 1081 00bd 0B       		.uleb128 0xb
 1082 00be 59       		.uleb128 0x59
 1083 00bf 0B       		.uleb128 0xb
 1084 00c0 00       		.byte	0
 1085 00c1 00       		.byte	0
 1086 00c2 0F       		.uleb128 0xf
 1087 00c3 05       		.uleb128 0x5
 1088 00c4 00       		.byte	0
 1089 00c5 03       		.uleb128 0x3
 1090 00c6 0E       		.uleb128 0xe
 1091 00c7 3A       		.uleb128 0x3a
 1092 00c8 0B       		.uleb128 0xb
 1093 00c9 3B       		.uleb128 0x3b
 1094 00ca 0B       		.uleb128 0xb
 1095 00cb 49       		.uleb128 0x49
 1096 00cc 13       		.uleb128 0x13
 1097 00cd 02       		.uleb128 0x2
 1098 00ce 17       		.uleb128 0x17
 1099 00cf 00       		.byte	0
 1100 00d0 00       		.byte	0
 1101 00d1 10       		.uleb128 0x10
 1102 00d2 2E       		.uleb128 0x2e
 1103 00d3 01       		.byte	0x1
 1104 00d4 3F       		.uleb128 0x3f
 1105 00d5 19       		.uleb128 0x19
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 32


 1106 00d6 03       		.uleb128 0x3
 1107 00d7 0E       		.uleb128 0xe
 1108 00d8 3A       		.uleb128 0x3a
 1109 00d9 0B       		.uleb128 0xb
 1110 00da 3B       		.uleb128 0x3b
 1111 00db 05       		.uleb128 0x5
 1112 00dc 27       		.uleb128 0x27
 1113 00dd 19       		.uleb128 0x19
 1114 00de 49       		.uleb128 0x49
 1115 00df 13       		.uleb128 0x13
 1116 00e0 11       		.uleb128 0x11
 1117 00e1 01       		.uleb128 0x1
 1118 00e2 12       		.uleb128 0x12
 1119 00e3 06       		.uleb128 0x6
 1120 00e4 40       		.uleb128 0x40
 1121 00e5 18       		.uleb128 0x18
 1122 00e6 9742     		.uleb128 0x2117
 1123 00e8 19       		.uleb128 0x19
 1124 00e9 01       		.uleb128 0x1
 1125 00ea 13       		.uleb128 0x13
 1126 00eb 00       		.byte	0
 1127 00ec 00       		.byte	0
 1128 00ed 11       		.uleb128 0x11
 1129 00ee 34       		.uleb128 0x34
 1130 00ef 00       		.byte	0
 1131 00f0 03       		.uleb128 0x3
 1132 00f1 0E       		.uleb128 0xe
 1133 00f2 3A       		.uleb128 0x3a
 1134 00f3 0B       		.uleb128 0xb
 1135 00f4 3B       		.uleb128 0x3b
 1136 00f5 05       		.uleb128 0x5
 1137 00f6 49       		.uleb128 0x49
 1138 00f7 13       		.uleb128 0x13
 1139 00f8 02       		.uleb128 0x2
 1140 00f9 17       		.uleb128 0x17
 1141 00fa 00       		.byte	0
 1142 00fb 00       		.byte	0
 1143 00fc 12       		.uleb128 0x12
 1144 00fd 2E       		.uleb128 0x2e
 1145 00fe 01       		.byte	0x1
 1146 00ff 3F       		.uleb128 0x3f
 1147 0100 19       		.uleb128 0x19
 1148 0101 03       		.uleb128 0x3
 1149 0102 0E       		.uleb128 0xe
 1150 0103 3A       		.uleb128 0x3a
 1151 0104 0B       		.uleb128 0xb
 1152 0105 3B       		.uleb128 0x3b
 1153 0106 05       		.uleb128 0x5
 1154 0107 27       		.uleb128 0x27
 1155 0108 19       		.uleb128 0x19
 1156 0109 11       		.uleb128 0x11
 1157 010a 01       		.uleb128 0x1
 1158 010b 12       		.uleb128 0x12
 1159 010c 06       		.uleb128 0x6
 1160 010d 40       		.uleb128 0x40
 1161 010e 18       		.uleb128 0x18
 1162 010f 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 33


 1163 0111 19       		.uleb128 0x19
 1164 0112 01       		.uleb128 0x1
 1165 0113 13       		.uleb128 0x13
 1166 0114 00       		.byte	0
 1167 0115 00       		.byte	0
 1168 0116 13       		.uleb128 0x13
 1169 0117 2E       		.uleb128 0x2e
 1170 0118 00       		.byte	0
 1171 0119 3F       		.uleb128 0x3f
 1172 011a 19       		.uleb128 0x19
 1173 011b 3C       		.uleb128 0x3c
 1174 011c 19       		.uleb128 0x19
 1175 011d 6E       		.uleb128 0x6e
 1176 011e 0E       		.uleb128 0xe
 1177 011f 03       		.uleb128 0x3
 1178 0120 0E       		.uleb128 0xe
 1179 0121 3A       		.uleb128 0x3a
 1180 0122 0B       		.uleb128 0xb
 1181 0123 3B       		.uleb128 0x3b
 1182 0124 0B       		.uleb128 0xb
 1183 0125 00       		.byte	0
 1184 0126 00       		.byte	0
 1185 0127 00       		.byte	0
 1186              		.section	.debug_loc,"",%progbits
 1187              	.Ldebug_loc0:
 1188              	.LLST0:
 1189 0000 06000000 		.4byte	.LVL0
 1190 0004 15000000 		.4byte	.LVL1-1
 1191 0008 0100     		.2byte	0x1
 1192 000a 50       		.byte	0x50
 1193 000b 00000000 		.4byte	0
 1194 000f 00000000 		.4byte	0
 1195              	.LLST1:
 1196 0013 10000000 		.4byte	.LVL3
 1197 0017 3E000000 		.4byte	.LVL6
 1198 001b 0100     		.2byte	0x1
 1199 001d 54       		.byte	0x54
 1200 001e 00000000 		.4byte	0
 1201 0022 00000000 		.4byte	0
 1202              	.LLST2:
 1203 0026 06000000 		.4byte	.LVL7
 1204 002a 7F000000 		.4byte	.LVL8-1
 1205 002e 0100     		.2byte	0x1
 1206 0030 50       		.byte	0x50
 1207 0031 00000000 		.4byte	0
 1208 0035 00000000 		.4byte	0
 1209              	.LLST3:
 1210 0039 00000000 		.4byte	.LVL9
 1211 003d 07000000 		.4byte	.LVL10-1
 1212 0041 0100     		.2byte	0x1
 1213 0043 50       		.byte	0x50
 1214 0044 07000000 		.4byte	.LVL10-1
 1215 0048 24000000 		.4byte	.LVL12
 1216 004c 0100     		.2byte	0x1
 1217 004e 54       		.byte	0x54
 1218 004f 24000000 		.4byte	.LVL12
 1219 0053 30000000 		.4byte	.LFE7
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 34


 1220 0057 0400     		.2byte	0x4
 1221 0059 F3       		.byte	0xf3
 1222 005a 01       		.uleb128 0x1
 1223 005b 50       		.byte	0x50
 1224 005c 9F       		.byte	0x9f
 1225 005d 00000000 		.4byte	0
 1226 0061 00000000 		.4byte	0
 1227              	.LLST4:
 1228 0065 08000000 		.4byte	.LVL10
 1229 0069 23000000 		.4byte	.LVL11-1
 1230 006d 0100     		.2byte	0x1
 1231 006f 50       		.byte	0x50
 1232 0070 00000000 		.4byte	0
 1233 0074 00000000 		.4byte	0
 1234              	.LLST5:
 1235 0078 00000000 		.4byte	.LVL13
 1236 007c 16000000 		.4byte	.LVL14
 1237 0080 0200     		.2byte	0x2
 1238 0082 30       		.byte	0x30
 1239 0083 9F       		.byte	0x9f
 1240 0084 16000000 		.4byte	.LVL14
 1241 0088 1C000000 		.4byte	.LFE8
 1242 008c 0100     		.2byte	0x1
 1243 008e 50       		.byte	0x50
 1244 008f 00000000 		.4byte	0
 1245 0093 00000000 		.4byte	0
 1246              	.LLST6:
 1247 0097 06000000 		.4byte	.LVL15
 1248 009b 25000000 		.4byte	.LVL16-1
 1249 009f 0100     		.2byte	0x1
 1250 00a1 50       		.byte	0x50
 1251 00a2 00000000 		.4byte	0
 1252 00a6 00000000 		.4byte	0
 1253              	.LLST7:
 1254 00aa 08000000 		.4byte	.LVL19
 1255 00ae 23000000 		.4byte	.LVL20-1
 1256 00b2 0100     		.2byte	0x1
 1257 00b4 50       		.byte	0x50
 1258 00b5 00000000 		.4byte	0
 1259 00b9 00000000 		.4byte	0
 1260              		.section	.debug_aranges,"",%progbits
 1261 0000 54000000 		.4byte	0x54
 1262 0004 0200     		.2byte	0x2
 1263 0006 00000000 		.4byte	.Ldebug_info0
 1264 000a 04       		.byte	0x4
 1265 000b 00       		.byte	0
 1266 000c 0000     		.2byte	0
 1267 000e 0000     		.2byte	0
 1268 0010 00000000 		.4byte	.LFB3
 1269 0014 1C000000 		.4byte	.LFE3-.LFB3
 1270 0018 00000000 		.4byte	.LFB4
 1271 001c 54000000 		.4byte	.LFE4-.LFB4
 1272 0020 00000000 		.4byte	.LFB5
 1273 0024 B4000000 		.4byte	.LFE5-.LFB5
 1274 0028 00000000 		.4byte	.LFB7
 1275 002c 30000000 		.4byte	.LFE7-.LFB7
 1276 0030 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 35


 1277 0034 1C000000 		.4byte	.LFE8-.LFB8
 1278 0038 00000000 		.4byte	.LFB9
 1279 003c 34000000 		.4byte	.LFE9-.LFB9
 1280 0040 00000000 		.4byte	.LFB6
 1281 0044 30000000 		.4byte	.LFE6-.LFB6
 1282 0048 00000000 		.4byte	.LFB10
 1283 004c 30000000 		.4byte	.LFE10-.LFB10
 1284 0050 00000000 		.4byte	0
 1285 0054 00000000 		.4byte	0
 1286              		.section	.debug_ranges,"",%progbits
 1287              	.Ldebug_ranges0:
 1288 0000 06000000 		.4byte	.LBB4
 1289 0004 08000000 		.4byte	.LBE4
 1290 0008 0A000000 		.4byte	.LBB8
 1291 000c 0C000000 		.4byte	.LBE8
 1292 0010 0E000000 		.4byte	.LBB9
 1293 0014 50000000 		.4byte	.LBE9
 1294 0018 00000000 		.4byte	0
 1295 001c 00000000 		.4byte	0
 1296 0020 00000000 		.4byte	.LFB3
 1297 0024 1C000000 		.4byte	.LFE3
 1298 0028 00000000 		.4byte	.LFB4
 1299 002c 54000000 		.4byte	.LFE4
 1300 0030 00000000 		.4byte	.LFB5
 1301 0034 B4000000 		.4byte	.LFE5
 1302 0038 00000000 		.4byte	.LFB7
 1303 003c 30000000 		.4byte	.LFE7
 1304 0040 00000000 		.4byte	.LFB8
 1305 0044 1C000000 		.4byte	.LFE8
 1306 0048 00000000 		.4byte	.LFB9
 1307 004c 34000000 		.4byte	.LFE9
 1308 0050 00000000 		.4byte	.LFB6
 1309 0054 30000000 		.4byte	.LFE6
 1310 0058 00000000 		.4byte	.LFB10
 1311 005c 30000000 		.4byte	.LFE10
 1312 0060 00000000 		.4byte	0
 1313 0064 00000000 		.4byte	0
 1314              		.section	.debug_line,"",%progbits
 1315              	.Ldebug_line0:
 1316 0000 7B010000 		.section	.debug_str,"MS",%progbits,1
 1316      02005600 
 1316      00000201 
 1316      FB0E0D00 
 1316      01010101 
 1317              	.LASF15:
 1318 0000 72656731 		.ascii	"reg16\000"
 1318      3600
 1319              	.LASF16:
 1320 0006 72656733 		.ascii	"reg32\000"
 1320      3200
 1321              	.LASF24:
 1322 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1322      73506D53 
 1322      65745761 
 1322      6B657570 
 1322      506F6C61 
 1323              	.LASF19:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 36


 1324 0025 43795379 		.ascii	"CySysPmSleep\000"
 1324      73506D53 
 1324      6C656570 
 1324      00
 1325              	.LASF28:
 1326 0032 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1326      73506D55 
 1326      6E667265 
 1326      657A6549 
 1326      6F00
 1327              	.LASF3:
 1328 0044 73686F72 		.ascii	"short unsigned int\000"
 1328      7420756E 
 1328      7369676E 
 1328      65642069 
 1328      6E7400
 1329              	.LASF23:
 1330 0057 43795379 		.ascii	"CySysPmHibernate\000"
 1330      73506D48 
 1330      69626572 
 1330      6E617465 
 1330      00
 1331              	.LASF35:
 1332 0068 43795379 		.ascii	"CySysPmHibPinsDisableInputBuf\000"
 1332      73506D48 
 1332      69625069 
 1332      6E734469 
 1332      7361626C 
 1333              	.LASF12:
 1334 0086 666C6F61 		.ascii	"float\000"
 1334      7400
 1335              	.LASF7:
 1336 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1336      206C6F6E 
 1336      6720756E 
 1336      7369676E 
 1336      65642069 
 1337              	.LASF1:
 1338 00a3 756E7369 		.ascii	"unsigned char\000"
 1338      676E6564 
 1338      20636861 
 1338      7200
 1339              	.LASF21:
 1340 00b1 696E7465 		.ascii	"interruptState\000"
 1340      72727570 
 1340      74537461 
 1340      746500
 1341              	.LASF5:
 1342 00c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1342      20756E73 
 1342      69676E65 
 1342      6420696E 
 1342      7400
 1343              	.LASF9:
 1344 00d2 75696E74 		.ascii	"uint8\000"
 1344      3800
 1345              	.LASF27:
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 37


 1346 00d8 43795379 		.ascii	"CySysPmStop\000"
 1346      73506D53 
 1346      746F7000 
 1347              	.LASF13:
 1348 00e4 646F7562 		.ascii	"double\000"
 1348      6C6500
 1349              	.LASF31:
 1350 00eb 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 1350      73436C6B 
 1350      57726974 
 1350      65537973 
 1350      636C6B44 
 1351              	.LASF10:
 1352 0102 75696E74 		.ascii	"uint16\000"
 1352      313600
 1353              	.LASF11:
 1354 0109 75696E74 		.ascii	"uint32\000"
 1354      333200
 1355              	.LASF29:
 1356 0110 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1356      74657243 
 1356      72697469 
 1356      63616C53 
 1356      65637469 
 1357              	.LASF8:
 1358 0127 756E7369 		.ascii	"unsigned int\000"
 1358      676E6564 
 1358      20696E74 
 1358      00
 1359              	.LASF30:
 1360 0134 43794578 		.ascii	"CyExitCriticalSection\000"
 1360      69744372 
 1360      69746963 
 1360      616C5365 
 1360      6374696F 
 1361              	.LASF34:
 1362 014a 433A5C55 		.ascii	"C:\\Users\\Tymek\\Documents\\EE\\Programming\\PSoC\\"
 1362      73657273 
 1362      5C54796D 
 1362      656B5C44 
 1362      6F63756D 
 1363 0177 4359424C 		.ascii	"CYBLE-224110-00_Clock_OTA\\BLE_OTA_UpgradableStackE"
 1363      452D3232 
 1363      34313130 
 1363      2D30305F 
 1363      436C6F63 
 1364 01a9 78616D70 		.ascii	"xample_Launcher01.cydsn\000"
 1364      6C655F4C 
 1364      61756E63 
 1364      68657230 
 1364      312E6379 
 1365              	.LASF25:
 1366 01c1 72656173 		.ascii	"reason\000"
 1366      6F6E00
 1367              	.LASF36:
 1368 01c8 706F6C61 		.ascii	"polarity\000"
 1368      72697479 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 38


 1368      00
 1369              	.LASF37:
 1370 01d1 43795379 		.ascii	"CySysPmGetResetReason\000"
 1370      73506D47 
 1370      65745265 
 1370      73657452 
 1370      6561736F 
 1371              	.LASF18:
 1372 01e7 73697A65 		.ascii	"sizetype\000"
 1372      74797065 
 1372      00
 1373              	.LASF6:
 1374 01f0 6C6F6E67 		.ascii	"long long int\000"
 1374      206C6F6E 
 1374      6720696E 
 1374      7400
 1375              	.LASF14:
 1376 01fe 63686172 		.ascii	"char\000"
 1376      00
 1377              	.LASF22:
 1378 0203 636C6B53 		.ascii	"clkSelectReg\000"
 1378      656C6563 
 1378      74526567 
 1378      00
 1379              	.LASF2:
 1380 0210 73686F72 		.ascii	"short int\000"
 1380      7420696E 
 1380      7400
 1381              	.LASF20:
 1382 021a 43795379 		.ascii	"CySysPmDeepSleep\000"
 1382      73506D44 
 1382      65657053 
 1382      6C656570 
 1382      00
 1383              	.LASF4:
 1384 022b 6C6F6E67 		.ascii	"long int\000"
 1384      20696E74 
 1384      00
 1385              	.LASF33:
 1386 0234 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 1386      72617465 
 1386      645F536F 
 1386      75726365 
 1386      5C50536F 
 1387              	.LASF17:
 1388 0252 6C6F6E67 		.ascii	"long double\000"
 1388      20646F75 
 1388      626C6500 
 1389              	.LASF0:
 1390 025e 7369676E 		.ascii	"signed char\000"
 1390      65642063 
 1390      68617200 
 1391              	.LASF26:
 1392 026a 43795379 		.ascii	"CySysPmFreezeIo\000"
 1392      73506D46 
 1392      7265657A 
 1392      65496F00 
ARM GAS  C:\Users\Tymek\AppData\Local\Temp\ccwoeDGr.s 			page 39


 1393              	.LASF32:
 1394 027a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1394      43313120 
 1394      352E342E 
 1394      31203230 
 1394      31363036 
 1395 02ad 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1395      20726576 
 1395      6973696F 
 1395      6E203233 
 1395      37373135 
 1396 02e0 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1396      66756E63 
 1396      74696F6E 
 1396      2D736563 
 1396      74696F6E 
 1397              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
